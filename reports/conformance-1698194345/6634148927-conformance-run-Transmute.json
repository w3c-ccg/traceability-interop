{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2d09bb40-9cd0-4c53-8f4b-7f2577bf528d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8ada5db9-3920-4fb2-82ac-af07ad139e8d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb690bf7-a619-4960-a138-b2043de42db6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a56d023d-7e72-40ba-b246-fc3e8977efe2"
                }
              }
            ]
          },
          {
            "id": "70cb3568-a090-4402-9eef-166dd37b94c2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0923a477-ea07-4be2-924d-8c38ebbfefa6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b46a389-55a1-4cdd-a34b-f45f88520bc3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5c942a61-d993-4ee7-9233-2a3c35236aa9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0b9cf79c-253f-4afa-a835-893a09fdf88d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f629ef6-4bd4-4703-93f3-905f1637dbe8",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "773db2a6-b127-4bf0-9745-7bd8a5972775",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acee70a7-dfc8-47b3-82e0-e0a022ec078e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b03a6516-fcbb-4a49-a277-f9ac71f5da1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46f3e724-ab9f-4d9e-aff8-123f22deca73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c82af4f-5a50-4ffc-a9d7-1f7246e7a01b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b1fce6da-0e9f-48a9-88de-0865d617c3f0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65992d13-7f1a-40b2-8978-3dc4f3b6e982",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9e1f7ed0-df09-4dc8-a391-da4694906606"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b8393f-8372-41ef-a4dc-74bac7682fa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdf8327b-53ea-45c3-a39c-cc0694337aa8"
            }
          }
        ]
      },
      {
        "id": "99994ffc-7b40-4bee-9ee1-a433fc2dae36",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "978cc8a5-1b33-4e46-ac53-221d0bc5d8ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e360af2-588c-4ebd-be58-9aa9fdb4cee3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ab3e59d-94ec-4f47-99f3-b8f3454ec138",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d04216-db9d-4209-8b8f-294e20a6dfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5dc064b0-53d1-4a95-a26a-e3575b6363bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d727e74-8a74-4a6f-8266-7c054455c48b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05739ac7-453d-4cf2-ad66-e217bfabdd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fc646fb-b93b-4d85-847e-4e86d4846034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8958e3-6b8d-4d0e-a8b3-c3aec63490eb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e12d3f-a3f6-4026-b10d-12a56221920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1652cd62-be08-4b7b-8977-8fa2cf70680a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ce84ab4-9d27-4555-b3b4-85a54fe5a282",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "711730bc-8f3b-4d65-8077-0c4078d5c972",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f39bca2-5476-4301-9ab6-389faed85182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdfd55ed-f18a-4dbf-a056-60f02d8b3d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5852f833-d833-41b8-b24b-b6d9768cfa63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f51c67-3a16-4cc3-a2d1-92e0fe8f0366"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd467c4f-49b5-45e2-b3cc-037242754b86",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b19b4d66-42f9-4086-9385-12004af02e37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82a0e9ad-c240-4441-b85b-6e9a07bf06c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d66704d0-0dc3-4880-a8ef-2f1489317cb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced295a8-6d30-49e7-9dc5-920176e0f8e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fd915dc5-60ef-4861-a818-f86a1f02584e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ab0d524-dc56-412e-92fb-5391661db02f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc80d337-b10b-47cb-85d9-5a913a2ec4c7"
            }
          }
        ]
      },
      {
        "id": "88706239-1113-437a-97c4-dd686b34ceda",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a87ca615-786c-426d-860b-853a3b833a2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec6d107e-caa6-4ad5-933a-8fd805438dba",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cde7af18-46f7-4229-8ace-0a30164314f5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8407fbd7-92ce-4ae3-958f-5fefc5fc83ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d717ccb1-777c-4199-9467-dca23a671585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b6ad3b-67ae-4130-be5f-fbd05cc9ef90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a6d3159-1445-416b-a473-3e939c1c4b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c874ae35-8066-4e1a-8beb-7db2deb9e8dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6af9bb4-dd3c-475d-88c6-bc90b1d9958e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da56488-626c-41bd-8c69-198d5db04422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56c9fbd-2172-4eba-9431-44f5173c6633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "445dfc4f-6703-4d7c-9f51-9527b00bff88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75cc387-9e8f-4b01-9f00-a5fd0ee8e48b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6464c9-5554-4907-bb40-4f9f3f6e6474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab993b-c1c0-4196-87f7-f0c5524d2ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d96a011-40d9-462b-be57-f6dbfc7ca64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8a3e377-dc80-4fc8-a583-1caa76e0f297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cdf24c-787f-4325-b3e4-5e946e50eda4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6daec95-31eb-4079-8e13-9faf74345f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009068b1-9af5-4605-ab12-4d8f4b6085b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3adaac-2353-4a1c-ac23-9db4a0a7ac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1eb3027-a34b-4de2-a629-567594e04f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d0d4e6-871a-4463-a56c-d81dbcc9539a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94ed1ba-6a72-49df-b714-763592e20c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eefdc8-1eaf-485a-b9a4-2ec61ca0d72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e304c-3fb9-4ac4-b71b-2e2e632ebd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c732b7ca-bf95-436a-beb7-114f18e7287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30be9388-6eba-45e0-b0fe-a65813d985f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd866e5-0c0b-40b4-8e1d-a3869276534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d28c69-64d6-4004-a4ef-90701a0937c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2a4a1e-b8ba-42eb-b203-072364edd180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83cd1194-904c-4077-a10d-ce181a969687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca21a93-21eb-4f22-97c8-d2dcfeb90b46",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec83f7e4-1568-4f81-8cd8-7185cacd19be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d7b0c4-b1fb-40bd-bfe2-f4cc6e44a776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a79f80-7580-4319-8818-18873c3f0458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b236836c-2514-4d1d-98b6-8c62c9c740c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71d5ed7-5170-473d-b360-21e91e442f57",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0fa867-82c4-41c6-b716-4bd98dbad316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bbaf46-44f0-4efb-8d38-6f3ee558bc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5186c1d6-da29-4fd3-871a-7bde8d076260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d9f889d-8705-483c-b29b-1bdaf53b4637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e6e660-3b28-4d35-84b6-5801168aadd3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb1dfa7-33fd-464f-921f-a74877f9bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8174bbb8-cb28-4109-a999-2c048c62eff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e604b-7cd6-493f-b65e-7f5051be56c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a95840-b92c-4f73-8d8c-bc89d1a8eb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf8e2e5-5020-4b74-b5e1-789864718fff",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb17d52-e746-4764-8d38-d7cdc3e2be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a69bc9-f729-4939-b97c-aa343ac88ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cecaed8-ec73-4147-bf66-35804f18c5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ea006d8-9de0-480e-bbb0-6043e357888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf04a5d-6df9-42a0-88c7-4e69bb0d18d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc81b2f3-9760-4e25-b436-e3aa19d4e8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644a960c-7300-419a-98e6-4f64a3cbc912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50d949e-fa16-46b1-9ac4-27578d5376a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d484be69-9b5b-4d7a-a5a1-1d9e37cfaf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc516bd-9378-4dc3-a624-579057f97d61",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e642c26b-7757-48bd-a283-6f6afa31d2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d8b3f7-da5c-4b9c-91ac-b3523d5a3acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9599e5-fa52-408c-8834-8b6f9c273a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbb5fee2-5bfc-46fa-bfaf-4587dc7a1b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c5dd8-9be3-4d51-b939-cb293090369e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d7171d-6d5c-436c-b37b-541c45f57f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31881e03-834b-4373-a8ab-fe47b108b968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0791e723-3e0f-4d4f-a206-a82966d1d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6547ce82-a784-47e0-9c4f-28020f692e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f8e6c-00ff-4498-a362-6131e64d3469",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712e48b9-8878-4d11-8ec5-684aa76b03d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0b187b-efa7-4938-9da5-cea25c887ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be38e77-c37e-46a7-974b-677644d5187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b8d3286-e33b-4584-a6cf-3469764450f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463cb4af-c4b9-41df-b95a-30091e08b9c1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337dd131-0b81-4f2a-8c3c-9cb5e367e618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3851bb1f-a0bc-47a5-b198-59bcc2d0ae83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4de83e5-5c65-43b5-bd51-b35f3ece705d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa454894-a6ae-4eb8-87de-d975d6dfc113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf103883-fb51-4e44-a375-62678eddb51d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef07d6fc-5cc0-4d70-a9eb-c243c0d915e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687f4ccb-fbdd-4e96-8ae9-a1cf6a78b9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e92e541-5a9f-45f9-bcd4-c765d96a31be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e5d8d81-25d4-4112-9cc9-4cb058a6e23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01242aa-4d12-4bf5-a21f-461048e0fd6e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c06e5a-c8fd-4844-9abe-d490c40a40a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d15def-b3eb-4ebc-ba16-cb5cb6784866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e7a994-e2ec-4389-a2d1-0bda1f908c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fe26779-e8e4-4b50-95cc-20dce44f0989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d0c876-1af8-4180-918a-c647a396609a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde88526-c98a-4bc2-86b4-128c40b7af1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9240499-08d3-49e5-ba33-450cf0202123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b52ec-e67f-4374-8f41-3d8e813ee386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f0fcf5-5444-43fe-beaa-78423f40044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51efe2ab-30ff-4907-bf6f-2981e9e7785b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751894d4-83b8-44e3-948d-bc00cfc9660a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6a5bb7-ebfb-4fc3-9fbf-91a2cddc7205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6290a064-a76f-47cc-a1c6-63156056b521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa07cb28-0c11-4a1c-a899-254e603b140b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997a52db-2ffa-434b-9fb8-bd0c396fe728",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60c76bf-027f-4e5d-a8eb-9701589e18e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed45f62f-a532-46bb-bd61-4c3fbd1ff955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223c8d2f-d3fd-4ec0-81ea-74d0b7bbad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a854669f-22e8-4568-83da-7dbd2ffe864d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c98cc2c-4648-42b2-a8eb-3adddcf4d7c7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e7af75-35cd-476e-924a-35e30021efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97504c6f-9b77-450a-884a-72c6c978690e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e28bc2-1825-4ee6-b424-a8c4c04fd6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0859b21-d617-4da8-b6c1-ff9bc103a9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69abe695-35d5-49bd-a825-df8e0a991f47",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e3a083-59f2-459e-b74a-c9971d44abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0416fa3f-bfa8-433b-baaf-5b7b25f51201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb2e5b5-94d5-458b-a7e6-fe2822ffbf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a94d43cf-b21c-4dcd-a44a-e67da4e18bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eb820d-5884-4ad5-a3ca-ac1b5a7fc8da",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05744401-41e7-4b45-8c45-020c3e340b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678b8ebd-f20d-4c5f-8c56-07bd7b7a4b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5c76ea-0e8a-415e-b71c-e3f0cd7c75fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "150bab07-70ce-411b-bc51-01186fe433b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a66064-9cdc-447f-97b3-52b626587dde",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de04fdbe-6217-43b5-966c-1d8c37f595aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6c58c7-edf3-40f7-b198-8e9ccda20ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5bdfec-aa49-4dd9-b90a-86995f403310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b91aa8-e758-4c65-a974-7feca8d52198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b672a1-879b-4478-bf1d-c5e3e25e02ae",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176adf3e-1389-4188-a0d7-ff44fc644874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cc599a-c6e6-4324-b2f9-1e422bf71ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a29727-dc3e-45ef-b2c6-6ee73d03e13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "439e910e-5b53-43fb-ac0b-a565acf28426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d4493-763d-4a32-b272-c9c138ef9964",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c1c978-f544-496c-835e-0f3c82a668ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0411009-c1e8-42a9-a9e7-fdcd941584b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0e26d1-16fc-4ea9-83df-5a09d5f371a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea3f624-d452-422c-9ec9-af9c32464241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882093da-1fd6-4623-9ac7-b1c55c2aed88",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7393b737-0fef-40f4-88a1-96681d92aac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde7d8ae-5301-412f-b082-79308067afcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a122c226-8c82-40b7-b2f5-584c4f3247c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac2c56c-f7a1-4297-8c6e-799d6e27dd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f1f599-2fb6-450e-990a-d3dc9269f5ab",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860b705a-b0ce-4b1f-888b-aa5325e06275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e79d094-cd01-48e1-be17-c7294d15c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd2ae76-4c3d-4be2-9c32-c089ba4e7878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b8e5a5-b74a-48d9-8eb3-90ea4e2cd2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9057a8e9-6a34-4282-947c-99018486abdc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74abf3ac-05bd-4e7c-8372-f64e9848de12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557e65ad-5cc9-4bc6-80c9-95be1da09c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86e59fd-c918-4e0f-80ed-eb4e821092b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52990871-6c1b-4301-aad7-47f99e6092c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faaf50f-0488-44e7-b9b0-34208416d3a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d4444f-ae8b-428c-b980-8bf370e5af8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e65426-69aa-4aa7-b1e2-de846576ed6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9333df51-0189-4b75-bca2-dbeb03875314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "efe3d6cf-3828-456b-8785-b264e849d8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68803edb-cfc3-42b5-aacd-0d7bfdcbeccb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce18868c-ac2e-439c-8ac5-cde50269c740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a482bfbf-89a2-4086-a7cb-52ad69d3b178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcf7d47-c604-4c01-b0ff-1e27f43f12e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7025a1e7-c0f3-4a30-997e-9190bf1a199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bb0447-4277-4ded-8131-a9f84dae8b79",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa3bbd2-7389-4d0d-8b6e-dcdd6caa785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca2d620e-066e-4e06-9c89-0042ec4dcec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc673486-f4bf-4436-b543-f190b9fdd305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce8dc5a-9f55-4e4a-8291-197630d02030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e9ffb1-edde-4d25-8542-4d2c65c2f12f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da4f188-99e7-4d46-9819-7792b4522dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39ae325-3bef-40ed-8db7-c861de588e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b3b9f9-625e-4057-abb9-9b1ad903aaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a946d0-01da-4de4-a768-c5c5fc83314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59d3955-405e-4eb1-a225-6ef61fe7d52a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6e9a71-374b-43b4-b2c3-744b2572c78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91817f5c-9101-464f-ae39-da2d80b82c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aaefd8-e814-4773-b5b9-2c861f316ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "519d7031-6634-4529-a4c2-47bc02b54a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09045ba6-c6c5-4139-9872-0e0bae49944f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f884d7ba-381a-46e1-854d-143d228ab554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286cf0ff-7159-4943-9aac-741ed11f8729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a68601-5614-427d-a63f-b75849b5895b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6bacc342-65ad-4fe5-9de0-3afcaf89e9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14b4738-614b-464f-b098-1a8e2e3d2358",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92134916-215a-4dce-9b42-5a3ed7bac69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ed64a2f-9aed-41ed-9a73-df99e3566949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66045c43-2890-4c80-b1d4-27a67fe4dc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8740184-2a02-47ee-9f50-d67fcff2e682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb4caa8-f0be-48e9-ba77-dceb9c3b1428",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3857f90-9f88-499b-b6a5-2314122f05b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fbeeff-f78d-430e-b950-1bab95b991eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b025ce1d-6fc5-465a-8ef7-bce229510640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "06812fed-f7fe-417a-9a39-00c5ea339b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95207921-3773-4a94-b58a-7933e7b71b64",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d97cf-cf92-4ba0-b6d0-95a8490287d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f75379-84a8-4cc5-a0e1-e3f6695aad86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad51761-2112-407e-beb9-78bf08e1cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a5973f-095d-4b9c-8a35-9499d46804a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5b16b4-b1ca-4610-a1a1-38793886feee",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa778b38-ae48-41fc-8414-c4fbbb951dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80980782-7ae7-48cb-8c59-42da7842738b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db19c8a9-2146-4933-9fe4-fcb55a0676fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "117a8a97-d3d2-4d3c-9c80-e197f8df7edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d915171c-067e-4543-9121-91af9c2f1a21",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dfa652-b137-477d-9d38-b70f55a2aa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9fee13-15cc-4d6d-bfe3-50ea797f0a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b7ae88-6eda-4da8-8982-9b4002b889a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "493859ef-a892-43dd-8349-c5cef6fe1dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d366d-bf4f-456e-af71-a2ab86cf4a9a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044e4272-d245-413f-ad50-4f50aaa5ba9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3ee1a3-50ff-4332-a037-1145c29829e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfecb75-cf54-41da-ad4d-8c2a1d16906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "46e1ed41-7fe4-448a-a46a-41e27e4c8c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2572f3e8-16e7-402e-a7b6-332f492ca045",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0ab061-18eb-4989-b255-82c576a1a098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c72335-b01a-4da3-b9ea-da27e27a6509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe88f79b-ed09-44cc-8e5f-2eca1acaef61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ba7c3156-c5a1-450d-9b80-56cc79a40a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab7e880-d6b8-454e-8038-5cdcbe0fc75b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5592948-458e-4210-b2ae-0a0f96447846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a6e5a9-cfcb-4a19-8474-7221598acf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3928631-c41e-4180-ae3d-da9d3239c9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "975d68eb-ec98-4fe7-b238-bcb142a96dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d195d7a-366a-4e27-adc8-c8923764ac1e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d5a4a4-21d3-4d0e-b539-5f8ca3ad4746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb59981-4ac4-4343-8c51-ef3261482e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56e9f8-dacc-461c-9ca7-1ad020825cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0231ff30-e8db-4258-b599-34ca6b0b9a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da7f544-57ba-4cbb-b244-94e043472980",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c23cad5-34a4-4a7f-a083-a5bf06f49762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f632866-b111-4894-ad2a-420282aa072e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9f1c27-9cad-49fc-8576-8264f7915aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1f21a5-a1af-46e5-9c3f-7d531fdac274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84562626-6fda-4479-bcab-6772545027ec",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b190a-8237-4187-bab3-05f66d05f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7395eee-5900-4a59-8d6f-d11eb7291d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55efe800-f7a9-450b-8552-48ae49683602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c093e75e-ee3f-4232-9f82-d67bed4b7344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f64af9-233b-42c2-9ab0-99a1d0e49055",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f713a684-33bc-45d7-b577-f4573e7046ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab93db65-e45f-4bf2-bc88-593b85f0495d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306cc48f-2363-446b-be2f-e3830f737177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6e18c5-56fc-47d3-bf02-9852812c455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db66a2f-e51a-44d3-9ebd-898e05239e75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33efa37a-9b99-4419-a04f-ec4efc0648e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a274c301-76a2-4cab-b89b-e5ae5b6258c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b5af9b-f933-45ae-84ca-63217aa9fc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79b7fb0-da02-4961-ac09-dae17fefd5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf91b51-077f-47f0-851d-b184df6473d1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7668b45b-16e6-4ad7-9ca4-3ec4f4b57d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e2315f-432e-427d-9ef5-9b01b69142ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86497f6-7b90-4d1e-bdec-89a230dc7e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9bb543-7251-4937-9237-2f4a3907e7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02e72f7-718b-4684-9083-dabe726206f9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1dd85b-36fd-41d5-9007-3d7f75f582dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00cf838-3b8f-4ac8-a133-ba65672b29ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32c768a-24ed-47f5-8b9b-cb0d6433ec5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7954625-cb3e-416c-99a7-3b803467b219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c231bc-64f0-4b8b-ab6f-9f65eea149a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb8400f-7905-4aed-b0b1-cbe86c94c86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ed9a7c-135e-4e3e-a7da-e7b091631897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75768754-adf0-4be6-aef9-af2198549b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b6700f-d4e6-4c70-bd78-eb0e404c0db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbcb662-e26a-45f5-9f47-39e6593b94b9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72674b8-9d6f-4e3d-bdce-204c9f36637a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805217a1-fe4f-4558-99c1-a2148e11fac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3383fa1-7b75-48be-a60d-09aaec98810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da6d778-6607-4240-92f1-0f9b04f356e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f74d5fb-3f78-4efd-9cf9-3abfa790b42b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825c3011-68d2-4b08-ae02-50ccba4cb3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67482fc4-6b9d-41f7-80b3-edf542b57772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ee007b-b810-4459-a04d-dbf66007f77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc924085-4961-407d-9d2e-54d9ccaa0dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a150dc6-c095-44a1-9ba3-0081ae27b92b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27fb888-23cb-4692-ac67-58c55d955c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b561b9cf-f111-4217-be70-b5da29e7571c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913001cb-d563-47eb-8918-a4f00f7b280d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ce7704-980f-4d61-a564-e8b7872afa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd78255-bba2-4750-9262-5115ea022874",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d4892b-01af-41a4-a1be-944c623283b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bf42cf-0373-4cff-868e-ef18561e8ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7b0840-6687-42b4-bbae-fe4c2e4f62e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1acdfb84-08e7-4cc5-a182-e83a9db49791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ad3e3-c59f-4298-a295-3d633e4b7eac",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d86b295-4d6f-4596-a929-1c2d9193f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb839597-df6a-4058-bf7d-bfbf9e78a6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86cc138-1779-44f8-a8c3-7678a3a5324e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e410e116-a898-4703-ae6b-5e20dbc27628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de8ba3e-49dc-4817-a09f-917b7d49033b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cdf5c0-413d-4605-b7e0-052d8c1b46fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c31abc-a21f-44bc-b9c2-ea5657405f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce21837-9dab-4a82-b5c9-a86422e9a78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "55080222-8193-4504-abb9-d3c63ed0f7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47323b87-a1b7-4327-a5e5-0315efff6fc9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23cfedf-7e82-407f-b53a-ecf518182e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65163055-6574-4496-8f5e-3376b2c92a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9018f9-bc6a-46ab-9146-96e0ac75bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "da9e40b7-ff2d-4e2f-a1ab-97a2494fe207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8e289c-72e2-4c9e-b2a7-5f159b0bd594",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51befdcb-60e8-4bbe-a02a-1f9dbc7cc11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d12489-b90f-49c4-b907-afbfc045f3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70d8456-d04d-4f5e-a898-78bde606586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c30aadcd-cbf0-423b-b24a-416a5ee4508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d89168-8004-4a1a-895d-1a3533b01243",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72f3dff-e280-4c64-9066-68238328edff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe2df35f-a8ed-43af-a4f3-aa2b1da8ef06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b23619a-25f5-41c4-b258-239505319025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "30915706-5be4-4e84-a1ef-381cc61d4c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc11be58-9f1e-41b5-8cd5-76cd6d0a8ff6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604aced7-3a9c-4c8d-a68e-f6e2db39de94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa4e279-42cf-4bd4-abc2-4671fde35dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919fd6b7-4041-4a6a-b5ce-13a22556619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1949d8d-a912-4bc0-85e2-64662b27d0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e011d8-f13f-46a4-ab5d-33cca389dddc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496e56f4-af3d-4d9c-901d-cfdb33035e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc826959-75da-4baf-9dac-c6a757e8aba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970ca7ae-3088-4510-baa9-7357f7ad7f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5527ec4e-f3aa-455f-a9ea-fe68aaece489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac7712f-399a-4972-a54d-c8cf66847409",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac0cf9e-a662-4a18-89e0-981efc5fb201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1bea77-2493-4733-a68a-796905472991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3877b5ad-5fed-4247-8e6d-bab3c8856230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae699af-f37d-4eb9-b408-84d7ed7c745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f0cfc2-17b1-48fd-b659-616e147605b9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc3f453-97ab-4417-bdcd-b653f0f41340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc3917e8-bf1c-4ded-9421-2a914306f27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c25836-a0bb-4165-bb7d-15f6fde395d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb379fe-7d62-4558-b9c3-52e0af747315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32191c66-eaac-4862-97fd-c895c0e3a55f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d1340e-3a6c-4b52-b059-2c2b091a2282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0ce2b6-696f-4d60-853c-9ff98befd348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd0d8d7-24a3-4373-9deb-0d32ada8b70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba819222-f28b-4cbd-9992-4b7ea56a623f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e8623e-41ab-4aaa-9d78-4c7bed425b22",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6fe6dc-3be8-40d8-8da2-15c58484fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017b6cd0-b321-4c34-954a-3fcbc8ae5d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caedada-a3ae-4253-8674-fe2073001572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac2d314-f94e-4a2f-bfd5-9f5168718346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e88a1d-d2a9-4d63-8866-45bbcf2d9b0e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8454c6cd-4659-49a6-9982-d5462efdbc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751c62ab-fb33-4e66-bca6-f5bba790e0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6656d-2152-4222-9036-7203622af492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37b5040b-19cc-47ee-b795-a3966a44cdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0bc279-1d62-4373-8c22-db06f8121f14",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54ae69-5dcd-4f7d-b565-6c639695d791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b61e8e3-5865-4d85-b5ad-1be1a3b51cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7373bfdf-07cb-4101-9045-9c9e47e524bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc34725-ba9e-4570-9b62-705b57f901de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88140789-74d7-4fe2-bc1b-aef7ad4f26d6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15771dbd-00d8-4b1b-a1ae-11f8046c2d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812743d5-6d65-4cfd-9a9a-2cb3668f5bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f65c87-0151-48fb-90f7-825ba11d3239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b65a6df6-ae42-44a0-902c-3fbcee0eac1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3808ac5-97f3-4069-a6e1-4f8a061a9b7a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fc7826-8e3b-41d8-9fff-682acc2c7df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f72a34-5893-489b-a30a-8a9de5f42b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8542a5c0-3798-4a81-b24c-402cbbb2c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68ff079-a518-4255-9f3d-398639ab9a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02fa5fc-2e7f-44ca-8694-423999c15eb6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e19458d-b246-4ef4-8efe-27ff362a47e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6c75b7-1acf-453a-8f5b-0795e6506268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5057db7d-9bf8-4542-951d-a72e0d50b026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c72ce22-047c-440d-9fff-4ef5fcfaa4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016f9ba3-b762-4458-ba1e-9557fd23e040",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50bca2-f0ca-4a6a-bc46-5e6e4cb294c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33f14b1-d315-42af-89e6-747f24a373bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8268f4e0-ed80-4d60-8a89-232a3cfa86a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "856f1e05-659f-4d88-a199-9375ee96db51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7d9959-e34b-4744-9ad0-e38bc30d0e0e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45726f4-f7ff-4667-9344-d716591b23de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e80dbcd-1aaa-4471-8f9a-87490f5a08fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba98f44b-a943-483b-a311-9659c7ac8874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c35435d-3631-4858-bb01-029bf6c00ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7654a8d-291c-4025-b5d3-9c84aa59bbc7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ca0041-6cf1-4363-a221-193581a4acf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8acfbb0-5536-4f62-bec7-016b6e3b6bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d04bc4-6054-4781-a65b-73c6d631e4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7473797-d26d-4264-8df8-8bee10cf8217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafde32e-ab4c-461d-b72d-682eae629d1c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568428e5-25e2-4a48-a10b-2b9c4ffb60af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc2c9a6-c689-44d3-bdcd-f759dcab054e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e87931-8f1b-42c3-a314-2baa4db1bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "700df3cd-d740-4dd0-b8f9-b346f92db2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b0dac-6895-43af-8f23-0c318eebae65",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d880040-1a38-4cc5-8e90-6eca3312f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e27d2ed-8b53-4158-afcc-5ea0b70f790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004e4639-87d5-40a8-ac3e-df172b145357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c474ac8-0518-42c8-aed9-c14f58db9d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b568f261-c72b-4e5b-908d-3bd72348a411",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffb0a64-bf42-4f90-a825-d87f29e06cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0669538e-3165-4943-8f3b-d3bbcc8d2b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7386fc16-680e-4471-8387-0ffd895e8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0de9daa6-1e3d-4145-b52a-1e82778a6d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033f5259-bf84-406b-aae0-1d30c40d9424",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b4a72-f10e-48d9-ab5d-960e46685145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b860fa-b2db-4bfa-8eca-680e3bf0552d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09d3c5c-d746-4b74-9ca4-dfa9707c9b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d29032-e582-4e63-b1bd-3620e768a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ec28a9-fa50-4923-8c4f-15f1765728f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c348582-f236-4829-9346-351f533ebc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c824a53f-bbe3-4206-aa08-6603ba4f1193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f4b41-c96a-4716-af0b-a87fa6a2348a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ffc5a5-1197-41a9-a928-67d16885f3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32058e26-d7ee-4eb9-b354-b5baccb35d93",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d9a474-d337-4369-b4b0-5370742d389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff916b2-c13e-4f6f-92ef-ee2185b2cbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c11103e-54dd-46be-861f-95c9cb56d286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89f2aa93-cc42-45a9-aae0-df5aacf82f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1489d3-2173-4f93-8e34-8fca41a82cba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0732e02b-5072-4540-bc32-453b57ac1665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa37db58-5aa5-436d-b289-0f35e6637e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cecc44-ef53-4a8a-9a2a-748f4bbe2bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "356fbbf8-65bd-40a1-989e-58e235eec07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f53a89-a1da-476c-89fd-d9925645b1df",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615f2277-b06a-4095-b937-a32221f39d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38d7abe-d667-4aa5-8972-45d3ac293005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fe22c6-d6f2-4308-b4f0-a9388aae9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11e8ea60-ddce-4e50-98f2-875aeed74416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1853833-c159-4ba1-93e7-ec18c6d08125",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fced135-0922-463a-b0dd-8e4d61e60517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f520c6-fa5b-4777-8633-976868b1e594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef569d1-4003-4b78-bc14-37e88a16bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "835655c6-0d37-437b-8b56-3fe5f52a8770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2e920d-1255-4bef-bbaa-1f16617bc3df",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05487800-88a0-4a20-96f0-5efdc55c61c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccfad7e-ef2c-4e11-b7be-919998aa9542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e761d9-3a1f-470d-a534-d3a1028eab1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b0ab02-9c56-484a-b487-8deaf55ce0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b73a65d-9dda-44ad-9531-06bc1be717b0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d31376-e14e-4694-9823-8fe517d6f136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3cfb77-c5c0-4808-9ee8-f2a3e33b1d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89037336-6029-47a0-8913-cf87894a2732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46723ee9-d276-4deb-80ca-6ff1ca37b899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7e5796-9835-4d36-8d1c-5538038fc445",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6f40c2-ddb7-4ec7-803b-b6ca461a805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03ee61d-7a60-4dbc-964e-da93390ed320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899c1404-a511-499b-b8ad-ab8570961493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c0ac2f-ddbd-4ce3-aa93-951054fbb22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a3db27-d380-4310-96f5-c13330c4b874",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c7a03c-15d9-43dc-bb5e-e5ba2861354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63df448d-a0c4-49b6-897a-e79b924ad790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1fb7be-c8e4-4e02-b0a6-a8c6c2c29622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00857de2-ae5d-4a81-84a2-bdcb6df4d661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf571833-f0fb-4c58-a028-4ea9b2604359",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684668b-2b3d-4a28-a890-81fa22926ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a68d137-a45f-4e50-bd47-7cc290f37a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b8bbae-1907-4603-a330-205eb64a92d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cfe011-168e-4e81-a1f6-fafd8efc111e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38bce38-89f2-4b9a-94c1-0c4d6ff3d2cb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60436a88-2a30-4460-9bac-e0e4fc3e2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfa66ae-a565-41cf-ab3c-47c8bd7d0748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154d53aa-65aa-4560-8574-aed8a94b1573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe4ea2a-70dc-4c30-a139-1c2678c96e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70296c14-519d-4930-b262-c18db6966977",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e60e4d-5829-4322-a3a5-64e0d6323918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69fec9e-e79f-4c47-a18a-1d9fafd91529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c25d5-4bf1-42ac-bf23-465d5b60fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "de77ac07-7429-4018-a113-2e3f47f6ae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138838dc-e1eb-466b-8cc9-3259157f5180",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb791a5-a717-4df0-b217-0ec69309d5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f316b2e-9208-4219-a239-01b94a81c151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6229da1-c7b1-4375-a27a-73bd8252e7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b264c0e9-031d-457b-9a83-de0152e73066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d390237-f726-4ebe-ae8b-f98c3554e6cc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ca2daf-0e40-4c37-9e8d-3ea60af68153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "43d91a2b-8d3e-4bec-bcd7-c2f7de5f2742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9ac84e-5769-4a0c-baab-728fd15b4cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b52853-6c09-49f5-bcb5-af981eb6e279"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb6381dc-c098-439a-8fd7-19b76c5f16f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb6445c6-8828-4dd6-b745-9f8ca8497136",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aaa60b-6276-4977-9f89-3ff154ee4a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eba1407a-65a8-4bd4-b5db-5cadfd5a5156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39f83b8-6f70-4384-9ae9-3b2a96145f9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b16ad71a-bb84-476a-8122-c9513493c807"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1dc7e4f-bce5-4d8b-924d-5d119d8cd5c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54eb4e86-2d4f-4b14-9007-8e48b4cde66e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "debd30ee-9f47-4164-ba19-b2d837a5aea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c957ee8-990e-45cf-860d-ab5b5ec984ee"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a0173df-e55a-4c95-9484-542e88dc42c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4eab6f01-7783-4601-bf8e-f3f2664dae64"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b14c0391-e8e6-448e-b008-17ec172f05d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3558b0e3-72fb-4e2b-aff4-dd23d290065d"
                }
              }
            ]
          },
          {
            "id": "3bc43168-f095-416f-bf5a-0aed2c7c37f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e23cd4a8-e099-437e-ba53-2d6a3e0a796a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "faed8b73-56ea-4a25-bb19-45fe36b76605",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae241a20-6d81-4fe5-8a98-483d7aa984bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a2d26707-f9f2-4c0a-a23b-b21b1d8f241f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ee30c0-2b1c-4076-9bc2-9c4150d4ca68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915775aa-55a7-4a7e-b45e-e2cc0198f785"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d5bdfc3-5d64-4d3b-abbd-293d6bcc06f9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fc41e45-48fb-4b01-8f9c-fa7ec5e3d683",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "426efa88-215d-404d-899e-5ac3f8c8bd71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00a30984-8f67-47c4-a973-2b342367555f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21d73142-b343-4bc3-b2c5-0306abb41b13"
                    }
                  }
                ]
              },
              {
                "id": "e06a0f32-5364-44e5-a404-e41c443058ef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d35da0e-5458-492f-a462-8a01714f47cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77b0f29b-5ca6-4375-b0c7-8661005753a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61e1d8e0-a2f3-4e6e-b247-546ef768b6b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e6bf111-5774-4ae2-8868-fbd6917d72f9"
                    }
                  }
                ]
              },
              {
                "id": "04144330-8367-4742-9f00-64f36a41bf95",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf253aea-f8ac-4947-98b8-b73648933a5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15c88967-af2d-4413-b654-7382065c4540"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba5f4542-291c-4064-b64d-5a03b36bd34f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "056700f1-39c1-4f03-af55-7f59dc7c2ffb"
                    }
                  }
                ]
              },
              {
                "id": "d907f108-c6cd-4764-8f8a-12e40de20ef1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db91425d-ea2d-49cc-b6f2-fb14109f96bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48055bd9-b96e-405e-8a4a-4fed627b0075"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d83fc7d-abe2-4a23-8709-3fdadab53264",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5a02b776-dc04-4b57-bab0-90277bb85985"
                    }
                  }
                ]
              },
              {
                "id": "9312e38b-12fc-4de4-9d33-22e27e3d7f01",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57c9f1d-811c-485c-9404-8718dc6cc0fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d274f27-f19e-4a90-97ba-35a662091f32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6a171e4-fe9b-41e2-a45e-05be26daaa4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "54526d4e-b94f-445c-aef3-1595a4f1c844"
                    }
                  }
                ]
              },
              {
                "id": "f07a61c2-6178-4855-a133-198c5b54ebe9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c386a554-134f-48b8-a7da-2d6629dbf1a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87c674d0-0451-4b74-9e7d-7c5326db4bc2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58855d0c-a057-4df8-9e79-401193393575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "786c9c27-0939-4285-b09b-6472439d5c71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51330df2-b758-48da-b336-83e5ca4c5124",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7432183e-4944-4bb0-bf3b-19fbf43c7448"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b8c915f-cf64-4afc-85e9-10a5856b7f6e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ede735d-c441-4aaa-bdba-f4ccd2ad1b6b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50ad8ec7-07ee-46f0-9ace-cb715b1de67b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b07b2187-d502-4e0e-abb3-346e0c3f325b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8825aacd-8b02-4eb3-9e5c-5bd4a3454a8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca201038-f5ff-4595-825e-e9ed96a2ed79"
            }
          }
        ]
      },
      {
        "id": "1c953ab3-df00-425b-b6db-80279182a5a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0ecaa123-0fe9-4e9a-adf5-94e1fc233cfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdb9fb62-b71b-4dc3-bfac-819c70814c9a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b6db229-38d0-449f-9b87-62c81932cdfe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfa8b1f-ad55-43b5-bec5-4c9c15d24901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd16440c-af8b-4bd6-a3ee-64209f0f528e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61547130-4f2e-4109-bc6b-828df1065192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb79e66e-327c-4d03-9a84-7d62bde2a7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42ac71e-611b-435a-8268-9b4523d35652",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987255a5-8db7-458f-b790-0fab442c9882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97d7e3e-4443-454e-85b5-17cc1596718c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c7a6ea-7e94-4551-a667-0ae7cb169541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1e237c-5ec4-45c9-bca7-8f735c0ec428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548e1f1e-78f3-469f-b35e-d997c2a320b8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ee2cc1-654d-42b7-998c-485b644876ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06007947-1108-41d3-aaee-540efaeb7fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff25736-73ae-483f-98a5-2a63c9f29b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d24df85-cb79-4f32-ba80-2afc1da5ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6f2ced-3359-4478-a391-5d2d919b896b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938e74ea-87fb-43dc-93fa-cd480a983f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f2d913-6c4a-4e0f-8153-e0b0f173376f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdbcf9d-5b65-4bc6-b039-f20c210dbdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "007629bd-9630-4e04-ad79-11618bb05888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590667ae-e148-4657-a29e-87346f10c77a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aabfab9-ac34-4f7d-b4bd-98532fd7778d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f81e47-304f-4939-b31f-7213f2490428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42a203b-edbe-4d44-9532-6db60fbddce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aec2983-cf02-4381-be46-f4f4b3f5bc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2868d727-1c68-499d-8383-96d10e8217c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77cf991-67e2-4120-a5c0-5df56b4d843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c974d6af-e95f-4985-bcb4-82b6ad89d5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f909a9e-cb48-4cd0-8d67-ca2997c52f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2848a71-259e-47b9-9eb2-98d16a3c10e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b04be5-e8b7-4d06-9e8c-f987fc492fd9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd0c73f-9dd5-4003-a492-fe44f56b45f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb26181-a62f-4096-90fb-0d62d83d4d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f33af1b-dcae-4c9b-94b4-5ef56832b4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a95f3b-c1d0-4afc-ab13-8b9e5c569105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba084cbc-c13a-48b7-8c78-dd56e310d0f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677e3e3c-ff8d-4f51-ae1d-5cf23c942b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755540bd-d0aa-4335-9d61-e89ca8357ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e11b826-ff2c-4b62-82e2-767e1b1962cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6447871c-a70f-4ab3-9b42-90775744a599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407106a1-5b3c-4d53-ae1d-387f98d3fe21",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9816c6b-681a-4afb-b7b4-032070ce8543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7146da48-4932-4ec6-9960-eb924d458348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0d57a1-d570-42d3-b913-bc85cbc008a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "19ffddc5-ad95-4261-b929-23d4eb4f3a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a455a2-9f5b-4f99-9c26-4225e0cc8bf6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b634f80-4eb3-4629-9b05-18b12cffbc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceab7298-d5dc-4c1d-9bea-fcf4299891f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb3c717-dcc1-424a-b85a-7c531de3ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d9b222-07f6-4fd1-bc9d-ca4bd95c6a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e4c1f8-cd85-4373-b024-aa7af185d3c5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb78f755-a731-4ef7-aa42-dbb35ac67cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9af289b-96cb-4e58-a938-16a8c5cf4e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff7858b-b37c-4af5-9d2f-3c760220789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9369bad1-7514-4c33-9042-3071d87bc6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccfb9f1-1c14-401d-8f82-2bf3e7cf0965",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038b61b6-5b9d-4bec-beba-37257f2596cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eb27fe-1562-4213-8904-5a443c48f8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a607294-7511-43c9-bebd-5f8ee0356127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd70511-9db5-40bb-9464-c70ac2127a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa70d54-fdbc-44b1-982e-dae635dc869b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04e2143-ada7-4711-88e6-cdf3b8fd0772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1df546a-b26f-4ca8-9d0e-14faa2185fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6809dc3-d85d-4e2d-9a8b-449cc16eff37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "804fbab5-62e9-4e8e-9da3-9ed324e274a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db4790a-b9e7-408e-b6f6-cdd338645f29",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dab0143-f988-40d1-a977-3b51e818848b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e8c005-9432-4e24-be06-9e86d9ac578c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff742f2-5295-4a9a-8344-b93d86fd4612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1879fd-a52a-4653-94d0-1bdc7f63e198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f57f599-dbcc-486c-9b28-62ec9703320a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331561c0-46c7-454d-9a01-24859b978c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c765359-b2f4-4a9a-9285-ff93cce012dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0923f1-cb6c-4472-b824-680792a590d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cda5feb-013a-4a96-bd10-ecd48fa92878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613ed7f5-564c-4575-9060-c3f61e9f15db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4951fd94-9c7c-487f-848b-51fe42938941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a059df21-5fcb-4ea5-bef3-69646c06987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd8bc18-5268-4990-9aff-10e9efe4a36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9d67c6-233d-4d6c-a7ba-4318cff782f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792768f3-5249-4b90-82ce-b92b3e953dca",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d8ad52-d144-4980-aa63-659532c017e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861e4a47-58a7-4c67-9c4b-e802886bf59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70531b30-06a0-4719-b564-b6d11f31e8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f351acd9-98d3-4605-b19e-f176f9c0864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53e11f5-1a81-4303-9d1d-794f40ab97f1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df41507e-46b1-4b9c-b835-1295f2ccc822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdb930c-7b4a-415e-b988-26e7c110f434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b79a973-4f20-45b1-a964-5e8262ff0f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ad4e55-7686-4fc8-a5c1-5fde362031db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb863e92-05fb-4e1f-87a0-6037b7d8bb03",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f37694-7287-4b2c-8e0b-4e1938036afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c490107-2590-4dfa-958e-203c0761e9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ae47cc-e1b0-4186-8eec-d1700602cd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9b3a60-a687-43cc-a87c-a30940f3ddfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b993871-9356-43d7-9608-bd6f0575dc41",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78e2b94-7e14-4998-a8a0-b4f9f5e16ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4021468-4ef3-4f68-9717-b874c4787126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837d1a28-9e1a-458f-a097-589144e62072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "695b19bb-12c0-4159-996e-1a886182c1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c72a34-7af6-4d64-9ae3-1a94b4f86a54",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0624be-8453-449a-a519-5743d1a91f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88e394f-eac9-439d-909e-bee21934c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118ddb7d-3ebe-4219-8be7-b429f673fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da624237-a76e-4514-a182-0237a73c3a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc5322-e4fb-4ed7-a9fc-27b1bedf945a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bf74ec-60a1-4a53-aa02-6485339d975f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bd37bc-2ce1-45ba-82cc-1d6889cc7e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eadce3b-cec7-4a97-97bc-2b3dc97a3fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f2f6e6-63ab-407f-8f13-f88460bb7194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fdb5d9-9d68-430b-b496-b9fa505c68d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0ffd9f-7747-405f-a669-c326d298d5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16268523-44a5-4e06-ad5f-e474faeaf499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ed93a8-1f5d-45c3-a848-345c5cf1ced3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f5b19f-6b9d-4624-804b-7da64687ba81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9636e6-fc4f-40e6-b42d-bff6d3b0a9c9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3de6a42-1706-47ff-abf6-b97010f66c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d81e01b-bfba-4b35-8657-fb3c15c8e114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3865923a-8ec0-42c1-aa86-c65efb7acfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a875eb30-1455-4c96-a70f-d2b82ce54c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5dcb99-2cd0-46b5-aa83-5451ef8cf7ae",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bce78d3-5906-4466-baf8-168c7257e7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59d166f-24e5-4687-a9f6-fab2aca049c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bab068-5036-4c6d-ba16-8028f0e74431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f63c355-4d46-40ad-8a00-2e059cfd35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8b7112-e2a7-4482-b12a-e2c3ef2602d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f251dc90-5a0a-4294-82c8-19949f45e568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99885d7e-8fb2-4daf-8011-772ca4bc45af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369685b7-e31f-4e10-9b92-cce380b16256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6dffafe-7405-46d8-8a1a-7a4bedc8d135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7aa3d2-ad14-4a40-a1ef-289f2b931b73",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94f465d-7b0a-4a9c-9add-66766522588f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2359a137-1568-41c9-9dce-f2d31776428a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f003efbf-7aa5-42f2-b26d-1cda544c4fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb49cc8-e323-4f4a-a3e9-398758dc12d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbbfd33-1491-497e-a76b-255a48de1b08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a42b07-4b1c-428b-bdf8-4c89eb592fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6ac36f-63ea-41d6-9eba-e998c2ec369c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846adf34-1c34-4f42-ace3-3b8943bba587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "687b8d32-c318-4e8b-b059-836c29ab2051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8a35d6-d20b-4c77-aaca-8b542e23f323",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62620df1-749d-4606-b9c8-e5617e2352e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c59a9b9-e219-48e4-90c8-933a4f1bc7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dce94a3-e241-4aed-815d-00ce8de5d748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0df6bd-6d63-4e8f-96d1-5e8406999e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e0332a-2f9f-4712-8bf8-c3750f7b071b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277ce779-384d-4962-98b5-2d41468064c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ee92f2-d785-49d5-bd12-6c6b68864f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee89bb-e336-4ec9-b5c2-d0ea053952c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fe3d99-cf19-4468-8e65-ee27f5c7d673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1aaf283-7b4b-4e58-b09b-9ac9a6a9e8b4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddb376a-5f6a-4613-8dc2-faa99dde16d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fb2608-4069-42b7-8dfa-d4573c340aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7827f2c-1f8f-4eff-9909-e027787f18f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bba0842-200c-4344-a869-069e20ea4093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebdc1ff-2bb1-4f2b-aa22-49f5dc9146f4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c280fb-0250-49c3-a546-cde6d32e1725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1cb441-6243-42ce-8b72-db3408e080bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07455777-6aa8-48fb-9f74-61d1458e5613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1892d507-3298-4a88-b477-072403b75772"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76ba6451-1d76-491a-9d61-d280f70605e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9befaa40-7b2e-4106-9bd2-35bfcf47caec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d951515-6242-4f43-a7f6-30fd53222b32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbb4f11-34ce-4b48-8b92-5747ac025bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47672245-a735-43db-9611-b8d50da452bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7fc72bed-e713-4bea-a138-1f2c2a246e4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9241fa61-e8d7-404c-8fd0-d81036c5f863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6de5ea6-ac57-4b42-b569-5741bc2ab1b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35651c06-2f14-445e-be84-8046252ee513",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75c0df2d-7a4d-48a4-9cdc-2f5653c3eef5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d45f254-7d98-4613-9a09-0572148468f6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8b1cd591-e860-433f-976f-d54a752985ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b3bcf4d-dcd2-4d87-837d-2d21ddf9eec4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3772f26d-5a88-4cae-8ef1-d8a7986ee35d"
            }
          }
        ]
      },
      {
        "id": "ea6e8116-36d5-4e5e-8a80-dab3b65d50c9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e2f3da2a-b891-46f6-93c9-dc202e6e9aa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e23d9ca-7fc3-4bac-a810-282807294725",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e9da234-8535-4873-8185-cad1957a2884",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef03839d-f1a5-428f-b4a1-fe47156a7d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4f776d-add3-40db-88ce-7acc44915cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3816157-fab2-4e38-b7e2-ba3c0f6c948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb77b808-3f47-4b61-ab6c-14db6c13655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08ce9b8-71d3-4a2d-9ac0-4a899fac048c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ee2f8-33ce-4f83-8c3e-f408865a2b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6ae06a-9320-48da-94a6-23fca7c79d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80678c01-28bf-4517-acfa-ebaba943e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c70aa28-2512-4625-ac6a-96ed24caa0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b465bf8-5fd6-490f-be98-0b986074fd16",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef1a77b-d854-4629-a96f-cb34bb7b1803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afedb304-19ca-42f4-ba52-2b3f5fbeee55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223081f3-b0ac-4bea-a45d-67e63b797052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a64f4e-b5d2-4cb4-a516-9c6a55da982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b4339d-437f-4c6a-b072-083d600faac3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b97820d-9437-4cf6-8459-519af9bdbb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85607f7-2750-4c4c-9873-03bce7451f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a167af99-0d38-4653-b0d2-87f9c17f7503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3ad11f-51c7-48dc-a11c-1190174a7d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635a98d2-4d05-4727-818a-2ce6e17c648a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080d3316-184f-493f-8d08-61ca31aa292a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c54dc77-2824-44f0-87f9-1d01879979c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d292ab-ad90-451f-b7f2-0c16c76dfcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31a7e35-b5a8-49ec-880f-173a696060cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c814823-67d5-4912-9e6b-e1593c27b6a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe43861-85ce-4846-ab69-089fb39b491d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e95e8b9-a9ce-4850-8d0a-b65643df652d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd2fce-ddf0-45b0-9b0c-1f722d4b9ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe9e245-bf76-4e10-ba44-c9e8c15d1cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68cfdbe-83d7-4548-9858-348e9aa15702",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a1f501-9eef-4952-8bff-d698d0c36618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2a768b-1d3a-4449-8051-09d2533d1dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319cac5b-44c5-441b-b461-a7a5954f1d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "da826e2a-76c4-4389-94f5-dd5a153f1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7bd8b0-7f70-4d85-87f5-aa9ae81477df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf00edb-407b-4062-b078-92aac8718dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453b2684-402d-4fdf-a37f-af0edd0ac2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441075cf-20c5-4681-859a-c03954805c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0951d7-6307-4925-9e04-223c214a1ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabbb3a4-1860-4626-a3d6-d1d307eefb95",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b1b6e8-0a48-4df8-b2a3-767553b1a6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdadfe38-eec4-4d23-be6a-3f5bbc7cf58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91378310-3f93-4c58-9faf-8f5a919ba621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "580db38b-51ac-4770-bd71-e23a7aec8ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22418a-a28a-43cc-ae3b-1e06a8ab9095",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac946e8-bcda-4d7c-bd57-31c11b9cdb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4be7d730-2809-4cc1-a02a-876d54f10047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802a6e2c-6ccf-4984-bc7d-8bbb62350a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "599e5a4b-7b66-42dc-a5c7-aaf0a25da9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e1b556-1e45-4235-9a1a-ee348bd9ff69",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0785a93e-0ca8-437b-883c-2f4af67039ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcb68a2-c52b-4438-9b9b-ee60b73ef841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c3f7e0-b9f5-424f-b247-fdd5389972ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "311b36f5-3a63-4780-9d32-94269eb80ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cc21bf-c9bc-41fd-9b35-219fbdbf408e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97256a03-a743-46ff-bfa9-c4cef4c3fbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70435703-8d94-44fa-978c-3e1c572fc4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ad2d4a-01d3-4b7f-8a2b-a575a3cd742a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7ef1a9-5ad9-4253-bdc6-e0b94e11e328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66543b47-82d3-45d7-bfe2-7177d874b937",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d351de1-77e7-4034-a43d-f9e24a2da1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a764b80-e1b9-49d6-813d-3b3d09aa48f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1aa154-31a9-4e80-8d45-43060f963023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8a3cf3-4f48-4b87-a718-918391465f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3198af-9618-4a0e-8d9a-78021d859d0a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459cf4be-cd5a-411b-aa32-abb9371617de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15a56ed-a734-4200-b5e7-1985320f04ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8060207-5409-4c27-bdb8-e51602372729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd347dd9-fe45-45a7-abdb-390440eede97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf3ff50-996a-46a9-bda2-1b43da426230",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545b1004-c096-4506-93f0-2f39b624aa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da2d67c-a39e-423d-8108-83e13858c7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bbc4a2-a168-460a-96aa-98068f61d4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d471ccd-f3a6-4a55-b7ca-3e67e98d5655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b01d1d8-802d-47a7-94ac-f35eebd116ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf42a777-fde5-422d-886b-e4b3cf72e47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9f3cd1-1034-4293-941b-0ed3138ac0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4295750a-857e-4f62-b5da-ad7516cb31d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb1539a-6945-4633-b69c-7a43478fb58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb69c35f-5e0d-42df-aa9b-39e5bd59943a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f615b25-e18b-444c-9d98-59092b41756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322acaf7-039b-486c-98cb-f25a94d1b5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844c351b-9af5-462d-b888-e52397b542b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2e0a2c-743c-4265-a3ba-b567ee3ac827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8231310-d8a9-4be0-b203-3515611961e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e1d66-8563-4a45-a38d-044b199ff152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35565975-2ccf-47be-a149-5fd702043a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c58543-8935-456c-a85b-e6eecd4bb6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "55173016-7c2a-4d7d-9ea9-4d635ced9257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c119ab-f107-4a8c-9c8e-edbc9266083b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768188f3-a742-465d-87aa-3cf5b956b4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22840f0-3a91-421d-8ab7-d985d7876316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da37ff86-c4d8-447b-82f6-1b51c31058a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b18bc0e-5200-4e06-a99b-6497bc176aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97afa45f-e3eb-4649-9a25-9dfff869acc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5772cd42-f388-4876-8950-309e7a01204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300d1761-f808-426b-8312-5afa00c6112d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc7d5ef-52b0-4622-b68c-cc78716c1fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "486f4e28-527b-4f7d-986f-9be8a14f1bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb0d7ba-9e0d-462f-a77a-45efbf672ed1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42c80f-ddf2-4dfe-8012-d66361732af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769055e0-27be-41ed-b7aa-0e8214579a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f4c1b6-feba-4a0b-b7a4-33194c576459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "238c644a-6bf9-48b7-878e-b9a121788b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc8764-0d82-4ec4-892d-1eb2b3d4be99",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca3eac-b4d1-43fc-9ba2-7186d318cbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d36d544-7a7d-4d5a-b4ee-35b9b39302fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a29f47e-c6fd-488f-971d-d68cd75bd8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89cf4210-bd2e-489f-9a98-d10ce06e7ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aede2144-c4e0-4cd0-a200-9f858a396f04",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bb0f3c-188e-435a-ad49-7e2f0c7bdaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69fe7d2-b6f2-44bb-9f78-352198b93f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92ff7b4-1561-4a65-bc1c-78595629849e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8c17fe-a49c-41f6-9f6e-cfa023a3bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47539d21-2466-4f94-b76e-5c7198b0fb2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea8fbdf-740c-4a11-88f5-6b1430dccf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084bac02-664f-43ea-a859-12e8e3903693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d125cd-54f1-40b8-ad87-b02764b4502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7359217e-86ae-48f6-885e-452a71b6e4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af028abf-4047-434e-807c-e28a4093b1da",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a28d20-00e0-4b00-b3a4-d2b4a654aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c97030-25ab-4643-b0ab-32c3e9c22174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacfc209-4449-4e88-94af-bcacf915ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5724447-0c10-4816-a4ae-0ec954401784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8b19eb-7f50-4ea0-91ed-ebddc5daa291",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d73d0-ebdc-4dae-a442-b1c0509f990e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c92b9c-6541-456d-ad27-e686a8e68aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd7f390-aea2-437d-b5dd-454ead7ef1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be4febbb-f2fe-4954-9780-b83056991568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba864552-eb75-408f-b725-7f176582392c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa899862-0d5c-4679-a446-29ea896aa893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e85dc7-7a01-4c72-9385-bfb964652b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaadb44-0f8e-4a83-9731-f19ec1f801d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42370ee3-3c88-4a8b-9a12-f996376627cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db3cc6d-e512-4be7-a4e5-dda00e7e6ce0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd664602-2570-47e6-ab75-e23cb72b2fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a180e52f-e6d1-43c6-9d46-7b919ac4de57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4375c82d-cbdf-4ad1-a36b-4d772b6563b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27028a28-8604-483b-a615-c52ece5c04c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5e41ef-7d7d-439b-b5db-199fb59a07c5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42fd5d04-e265-4ca4-bcb9-9be012190e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00614fad-561a-4f8b-8917-1ae1105f1029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c1ff9d-f0c9-406c-b6a1-c8b722e440ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b620a3b4-f074-46c6-886f-0b87b29e09a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d9d8a7-9281-44db-8d1b-67616ce445e1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4644da-fc33-47f6-92ff-6b4242138234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8eaec7f-4274-431e-9a4d-76fe2cd9960d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46632c9b-c5e7-49c9-a2cb-a918870fdf38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93bfb74b-bc73-418c-84a0-c0878cfe3533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d181f1-324a-47ae-8231-00b84fe79c00",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb9bed6-68f1-4818-a471-69e16cf4865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76248abc-4185-4281-9d30-1000dca1db18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d0d77f-dc11-476b-92e5-c1dfe5e1f4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7a12e4-4ab5-4e24-849e-9f7b220ccf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac383e6-8094-41b0-84ad-d5b3d4bb8bb9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ed3cd4-49af-4dc7-83d2-6994320365cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38399cc2-09fb-4f3c-86b4-a2903c7194f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5fdc57-d643-46b5-85d6-4d34f8a68f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3ae461-9f59-47d9-954c-bca403b05bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b2eac9-e791-44b7-926a-ebfc40149365",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b040f7-a238-46f7-9364-15fd02110dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c22e2c-263f-44f2-bc98-abdbec647007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6867fdcd-2a2d-4ae4-904a-6142b972cc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41c3e286-1ec6-4b1c-986d-3778b4d2c4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b70d82-7963-4bdd-8308-de5d445083bd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cfc809-479a-4bae-aeeb-3bf7545335d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6456147b-8795-482f-82fe-a7a69f80234a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a3c5bf-1fcf-4fe5-afc5-8a2b9452ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc707ac8-c21e-4069-b8e9-4777ac630001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac560b5-858f-41fe-a6a6-aa376d7f7519",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27372e42-c056-4ebc-90ca-077f17031f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cac6494-63a0-4355-8cdf-8d2a8b81a432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76eb8c14-bb60-4ffa-917e-f3197a9e06d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "235a6cdf-de02-44d6-b3c1-55c0a308ce98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f676ce3-8abd-4288-8800-205e8350a651",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3855feb-c5e2-42dc-8ab6-9c371191f5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf38cd2-da7f-40cf-ac0b-884607e897d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e8c79e-d5ab-4e1f-b9ba-a129ed7983d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1e2162-50e3-4e14-8eb7-9c922e6dfeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603aa944-607d-4145-9fe5-c1ddd9640302",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdd1b01-fe5c-4f50-8a43-18a5111e629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737fd6f8-cc26-49f0-91a7-4fa701170bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75c044d-f166-47ad-8f41-6b57d4d34a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faadb115-abc7-4b17-8c01-c4fdd3bcee6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be7b6db0-e337-43fe-bc1c-25cf45fbb7fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f55b6a0-f168-4a74-a693-e3c83a882d23",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804f7f75-1b4f-4685-8ae2-82c9c03d1ac3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3b46f6-c9c2-4f2b-9852-79e64bfd0c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f53eb14-5e85-48f8-baca-fdbbfbe5121e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07b43d33-30b4-4711-84b0-9905974eb56c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5dc0a37-67bd-4fe3-a7a0-01d37c9f4bf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "200dd2de-3e9d-4f18-867a-75d454af0c65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd91a787-32c1-4ae8-9a06-412598c0c278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57ee9529-ca95-4e4b-8ba7-86e19e65428d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a50d7cda-633d-4577-9499-c9a709413561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e51534f8-493f-40dd-b645-c0b18bcbb52c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b2f8931-84ca-42d3-b73a-cef584949a68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0439938c-7d30-49db-8445-f0d9cfe1afef"
            }
          }
        ]
      },
      {
        "id": "9beabb3d-61f7-4f43-8725-0a349a6c8b4e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b22c4be5-e8dd-44bf-8d3f-9a95f9460810",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c649345-f8c3-4089-addc-509b2a84dba8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "48bb0bbf-d719-4e0d-9c20-359fc262f357",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad916d4e-f50b-469c-a1fa-b0fdd57f2e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3de574a-fd6d-4e7c-9ffa-aa4c19b1d33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1fd3ab-0787-49e6-bf57-3259034f7ed5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa131c7c-2b24-48b6-957a-f99f7618646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ea7f27-15d6-4a62-8841-3dc9d0da60da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475ec19a-6b84-4e19-a570-d722bc4d385e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe84c908-2089-419e-b995-53f21a461bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad87789e-6c49-4049-8653-fc508e30eb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b284f4-172b-4bd7-9699-98c159326bac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040ac287-9ab8-420a-bc90-b2a1762e8669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd0a526-af63-4480-914a-2a795ca7b2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770bbf77-c59b-4ada-943f-ec07461f7b8d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b95011-56a8-4f43-8ce9-8fa23cc257c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528c52ad-db2c-4438-ae95-5b0e5f49710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8717586b-aa8e-4c0e-b401-bb9b5d1c9e28",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a622c991-7453-446a-8fdf-643fbdb197c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c934084c-45d8-492a-8be0-e48d679a6b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc8f7e5-e650-4cb8-9287-01ecce948fbe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332615f7-40a6-4c95-82a9-e67206e91921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411f0a99-98bd-42ae-a6bd-c43a518cffbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25e481-8733-496b-acbb-3e2f37cbb09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ef9366-d6e0-4189-9f2e-bf2865de9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beac2f6c-57af-49f2-bb00-188d5156a881",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48288e43-25c2-49e9-8c62-85a77ac1540b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d44ad0f1-79b5-470b-abba-ec9c9f8888ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b5c3ea-8318-44fc-bf81-0d4a5634381e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f1f774-69f3-436c-963b-f200ab5c7b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddb4e47-9177-48c5-8a15-398a9156d429",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e475e1e5-1e8a-431b-ae09-68dde02b1013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd3f396-c4f1-46d2-b9f7-875014506ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3084e8-1961-4b94-8247-5d297ce0d106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eeec9be-e4ad-459c-bccd-539f79d2d7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d23d1b-bb24-45cb-a3c0-705cb0be2175",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ffb453-0332-4e6b-a9f8-d164844bb398",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc91250-6431-402c-b1b2-1d241f7138c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75850d5d-0292-4fcd-b5be-4aa9ffe25f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6dd40b-33f8-4524-b64e-1e2aa7c5f5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720e3b7b-58e6-4843-9295-7f201bf96e21",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c66fff-7509-42a3-8d51-fae941224dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea89004-eba5-4f5d-9671-971fce594865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f5fa58-a279-47ab-8705-4883846b5698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60e8a18-ef10-4691-a012-79a7be0e1f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c704b323-c471-4650-bd2b-43239ebecfac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd36a267-8d01-44ec-86a5-1f02f99c8c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff07483-e913-482d-976e-52b03b648c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c9b140-47ae-4e48-a902-d7fdb80f8726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30c96da-950f-4e3d-b987-a92a50cb8a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eefd3a7-418c-4ecb-b816-6ef794ee4696",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491e45ca-d94a-4411-8e1e-ad47929ea1b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46b1e7a-9418-4cfa-a863-15a8fa2ff525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "463639c3-1ff9-4d0a-b39f-2b7bf36bfefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75db808c-90f7-4423-847f-fba49e185ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fd2ff5-73a8-4570-a049-66e01b3ac386",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e331a93b-25c9-468a-9925-35e6906c73f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7c8875-c8ad-41b0-aeef-3bba26784a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bbeca3-31ee-4fbb-96be-25b74dba6756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e437fff-14b6-465f-b47a-a2a1f8355ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79c5768-8926-4a9f-8f3b-a84e2d4dcd71",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eea43f9-1459-47b2-b476-afb5cf8a3ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a0f52c5-bad2-4bf0-afcc-63164a054d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4b8584-5667-4f6c-bdb7-10408d6921c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a917e4-ff1e-4c2d-b6c1-ca09cd52ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf3eda6-349d-4206-a620-cb1e02c88462",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b186341-e0d9-4cb2-9893-a6e41e674e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7629eb27-d892-4862-a262-9c08153ef5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ac38f-0ebf-480e-a696-b6b019ee02c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f669b08a-3205-4c24-893d-2042e9d67f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f8e37f-3eb0-49f3-9011-df9c872300f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdbcfec-9fae-4994-9fbe-c4aa06f707ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea85bae-e304-47d6-b476-8365f3d3a68b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220d18ec-7f33-432a-a2bb-6646fab03165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66ddfde-a7db-4351-8069-5d35ef2e5940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8159c093-add9-418c-9634-271293cb5e62",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c7217c-f4bf-41b5-9ca7-0c7b598a5642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4204354b-2df3-4ecb-8a83-fcbf42a7266b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b65818e-807b-4121-8341-0ce9139b8c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2eb9834-1179-4693-ae33-ee2492f6d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82501b7-92e7-497f-85f1-a3038f126db1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ade02-1a27-45ef-a7c2-5a5f19d9cd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "373b6745-1891-4692-a1cd-6090ce778401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7376a742-fb10-4309-a492-c3521de6fa8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77f4def-1c4d-4699-90a6-56331814aedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aea5f1f-b81d-4069-8f6a-95fce8d9ab9d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd27ed-261a-47f7-a932-f25347ccd1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0416db9e-c026-4337-9dff-68e5841f6e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c831fc63-19c8-48de-ba16-10d68612abc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45454e7-2464-4c64-9fbb-8c62ecef6748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cebcdfb-a1e1-4c5a-8df2-a8e22d469c32",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf3b5fb-5495-46ca-a025-58c477c6254b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a451196-13e7-444d-beeb-8a92483d508b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e36de3-e797-46fc-8a80-e0afb1eb7d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a28c8-0f3e-42e8-b651-d15f50f78f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4750537c-78e4-40de-ab12-31765b7a7e9d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371e4a63-55c6-419a-a6b4-f0f7381b012c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2f3252-06cd-4a47-bb6e-8b25305ad2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55da3f-ca41-445b-888a-1bce87c7d3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab16088-5ac8-47d7-b3a5-e21b363ecd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12be025d-f958-4cc4-97a1-cf7a5e433c76",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab98742-bcbd-4055-83e8-4c22b3a1741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc079142-cdbf-4c22-a3b7-264590e04a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ff039e-d26f-48ca-888e-9a7d819a9948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd92aa9c-f015-4d0a-928f-bb7b42366b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ccc378-52d4-4db8-8011-d5f5aa305b01",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee44d4be-2f41-4548-92da-cd3616b5d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8638609-daa8-4919-8607-521a6a273226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b703dde-4360-4bbc-8f8d-e21e44708b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853b6e7c-bfb6-4d1a-843c-371369db03a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b217c39-82ed-4d68-a14e-71c578cd3d04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea631bf6-8a6e-498b-84ae-7cfd2ca92a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e653d0a0-3bfa-4bb2-965b-6af02c644a1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2902cb0b-6dd0-4dd1-80f5-7633fa87f33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac5d1ca-e98a-4eab-a209-d44f41b97600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f4487c-0949-46af-807c-9034c389d505",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caee4d5-0bf6-4ae6-9c69-85647f43008b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffacad11-20a1-49cb-8741-61331959b47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ccc62a-9066-4544-a42d-c27a847e9718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "471b7114-4090-4d45-8d06-316c837406bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ee4620-6881-46f0-b690-fdb7e73e0c9a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dafccb2-1dd3-40b2-81a8-2b6f17af1bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6f95817-58f8-4c25-bbcf-4c3c01987bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b40038f-6040-4ac0-a927-dfef445e3575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164253c6-4cbb-469c-aae6-f96a0e5361a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2682bd1d-2700-4fa6-ac01-09ca5d10b289",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e0c3f-c192-483b-9657-e7eafb69f394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec99208-4b3d-49d3-ae9f-548395f8653e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c453d490-1853-4d80-a161-a85c9af72e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9143dab-69ef-4567-9f90-e7675e43f8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769c15c4-72f9-4457-b3b3-455cb2d93792",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d40172d-3132-4f08-8650-48c3f29e2cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d78cd8b-df64-44c7-946c-83ca5c3eff72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c60af-6dd5-4e6b-88ee-960c883712e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3351ef38-27bf-4aaf-ae3f-94585a4c5807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8759a0-4f75-4d1d-950e-87134e28ca7c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8439c4-28fb-4f7c-bdb4-f54df2cdef00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0a1b37-beae-4dfa-bffe-b685dcc43893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f45acc-77a3-4597-b93b-b26550fac935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6f3b47-bc60-463f-874c-e3fbdda94189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d045b02d-58d7-445f-b00b-1c0baf091697",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46241387-d543-4201-9351-1679fa5a1390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31b611c-aaf8-4be8-970d-f277fc64ae42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb2f3f9-76b8-4da7-b7eb-fb4a73b98943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0f8b52-6c75-40e0-8e30-0f97fd7b707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33ad0f8-69dc-4840-b062-863042d0618f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb84bb8-1a29-423e-90da-2a7e028bf347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e181eb9-3484-4cb0-9fe1-ecd626253e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e874501-9c66-4100-919c-889ebdc3cf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6623f1b-37b0-4a06-a3c0-816804ca47c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31c9da2-59b3-4c66-b7a6-96b85aafd096",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f497989-8a16-4ce1-9ecf-ff4f84bed038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbf2780-f9ce-41ba-be2a-71ea9281e74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e890d1-1a56-4579-9658-814507d6d6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2526947d-e6b3-44c0-ae1c-daf5c64affaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8f20c0-7dd3-4a0b-92b1-bc4f39ff9bff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d97bb4-ad21-4b2e-9653-b627426230bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6217c24d-651d-43f0-b0a6-d847ffe527b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36ba7ef-2c26-474b-8c14-a54feb298c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec46531-276d-44eb-887c-84b437f533fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d58898-1a72-4ea7-a323-455e7385e59c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d2733b-2c57-401f-8d85-709a91935bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adea5185-efd8-4ab5-a116-cb9e6809fd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66690d21-e4f5-4a16-aef3-f7ae41295af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9629fb8f-f9f4-4bdd-ac11-a7ea22c059cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2a0974-5314-4195-b12c-69a5d79464e4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78e128c-2ded-4380-a4f6-fa980ef763fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d648d2-07ae-424e-9fa3-0e08c3f41e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d291f27f-b4f9-40ef-8c83-a48896941c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7575a67-e8b0-4008-9023-7093d529649a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aeade86-2ad7-4abe-9a22-2b5dcec9f565",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27328528-24d2-48a7-8456-beaf724d7f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bce17ef-05ab-48ec-b301-306b2c352a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a722d227-eb26-4df5-9a7b-df7f4b75e950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf35d23-dfc4-48ba-ba0a-e16f9a462707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db4b60d-1ef5-4e7b-bdea-5f69663d8ba5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6879c4-ae07-4899-8fcc-57ff40add137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef74b7d-6f44-4662-8eab-46c4b11295ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d2285a-2b49-42ae-9730-801e55c18f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f809ac-1547-4d96-932d-6b32ea62d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16c745-a3a5-418c-825b-d14ea2aaf3a4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356d2518-7fd5-4b50-b6f0-1b996672d6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22f2399-8fb6-49f6-b97d-8e9c12c1b0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99128203-576f-4cd1-aa3b-aee7975937d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a58c031-209e-4cba-aed6-556c7e0d4daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5196364b-e489-48fa-93c9-eaa4176b7864",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2ebfa3-04ea-427e-989d-9a1af162fc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6aec57-1b19-4907-bd65-a57e2a8a1a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17144a2f-e2d1-438c-9946-96df7e4b79e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281183ee-1741-44b0-8b3a-d856599bea51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef7c490-1523-4d2a-83ee-1dee02d26156",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17165af9-8918-4777-ad35-d5f2568e1c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a9ba16-1091-4dc1-a37a-75105c1f5c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dd6f51-a208-4187-aaed-457607c3e147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e77f1a-f022-4f5b-9808-1b869cc9b53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929141bb-5ce9-47f2-a55d-e4e473826220",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be114c7-38c3-4393-947b-049f4bb0c724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451d6ee7-dd80-4997-bd99-e414ff7e17fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab36bf1-d8f1-408f-b773-98d6acd286a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fb678e-2d05-4e9d-ab48-c74f0bdbb6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae090ab-8e6f-433f-9818-b3683e3d1501",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a42b325-a8b0-4cb1-acc3-c59329f488a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c671a1e3-f186-42da-bb00-43105897cf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1024f349-917b-4639-8e6c-48c9bbb00b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e58311f-e482-4e9e-9cb1-b4dd33a8fc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb3376c-1646-4dbb-8d6e-551e5afdd7e0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f867859-d9ed-430c-9e97-b13cb48a0512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620c0efa-3758-45ac-8b76-cca32fcd66ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ff6305-7241-4536-ae33-68c9a68f2d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947d813d-073c-4eae-835a-8cf877c98787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bf9353-5147-4772-8b2b-991c54e7d957",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adb899e-e403-477d-859f-ea0710fc0522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75e2da9-1cce-4ced-967d-ece6e7dc5bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4df79-9e43-4dbc-9b55-19d283ac1436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641000bc-ea24-48f2-9ee9-f7e3db899ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09706c2b-2c3c-4922-b373-1ba1565c6e0a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d460fd-d231-442f-aa79-5b62300a9132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48edd14f-3335-4440-a769-ee456222c9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46afc2ee-6f88-46f3-b586-dedfac28fb95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab68c658-dfcc-4f05-bdb1-589b791d6865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbf4bb3-6c26-4682-983d-4bb38255e2d9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634abf40-fa0b-4fe7-857b-f26a1d61c44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4655f3bd-1940-48f4-964b-829f74e10d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b2dd0a-8aa1-48a7-8ef6-59443997e6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fac2e0-0601-4bee-b036-640ed5fa0e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc73f5-903a-418b-93c7-b8ffc090d587",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5802dbd-b2a1-4340-a546-f82dd5350833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac743b7-0b10-49b0-be5d-6e0b09f4fa6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c53748c-4538-41dc-8c72-10e1962784ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5265490-29b1-4dae-b28a-428392209667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70181ee2-82f8-4de5-b664-ce9d87c8870e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d290cf-dc9b-43c8-a375-a34e33eae420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84a73ca-8b3c-4426-8b20-129a77d54388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2668d58c-b03f-4ad5-9135-56e1a500d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716cf4f1-1ede-4eb0-bb64-e9fbd51c512f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5207fc-09f8-4af2-ba05-a14caf39c76e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7253745d-cd8f-48e4-b1a2-c4024b5398ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce030a5e-5172-4548-9b3b-676458d7594c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d298a5-67f3-4f9f-b3c1-d3e96f5fd493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0e6887-df0a-48f4-93d0-4638370df9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935b4b4f-9780-4d64-9a3a-05e8814bd9ed",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ddd74d-d66e-4ae5-962a-ee482287bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed151b1-0057-46a9-870b-e7f927a76285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6b3bdd-5dfe-46bf-8881-d47bb7a607b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6670d7f-6cf5-4fe8-a625-a10bfadcd8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46319cc-2c5e-475b-ae06-116e99c07269",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4c040b-0b42-4916-8f5e-8980dd445ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bb3b3b-cff7-4845-89ec-a942193a18f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f1e2f2-3b93-4936-9def-728344e8f295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70c4e74-f4dd-4c27-ae06-c2986c7c9ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccb4e4c-43fa-4f5d-b1e8-91879d91cc73",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fff391-0e72-4218-b4f0-71e667ba9ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76118bbf-4858-42b9-9cb2-6d8b636d7662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378cd22b-c287-485b-9711-cdd7745e4d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b684f3-366a-42cc-9f2b-48caaa3ed43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f4ef3b-9dd4-415d-ab5d-b15e81c042cb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f9e836-6d75-4d0f-a643-e9abf9aaa2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25c8e55-4fa2-4a97-8626-f6e66dbd28ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a908c077-cf00-44e4-995a-ba52366f8514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969ca677-4cdd-4f60-8e1b-cea95daf9998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8a2d9a-3af1-4bbb-b267-3534dc18ee31",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f68ef1-b360-4916-963a-f6e9286e5058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8434c28b-29ee-42b2-8e44-7d5fd5d6df98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0df3c1-35f5-4ba5-b57f-e12851fa0340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a37dd5-1b64-4f94-8d50-17c676e25cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7337ff-75b9-4194-8ab0-5d075e7e0b53",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5a61a-dc30-4628-816b-a436f078d308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6118a1-f15e-43ed-8328-0381bfd49571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777d5544-15ba-4ce3-84ba-504da5103e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa6c44a-8f59-4676-b70c-b93e7b20ab6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0fd470-8993-4901-bf08-74fa2609c7e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8652bd6d-c43b-49dd-9f0b-583c91f39201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18b879b-c2be-4c89-94b3-f12b3fb5f9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2668a49e-0b43-42b8-8406-c11363e85015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d507b355-35b4-402f-b040-8f239da17ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3767256-1cd0-46fc-89b1-f788eae95003",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ab7838-04fa-4920-a053-5d369a700541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f7f394-6dd9-4401-a5b9-2d85ec04f6b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2b2acc-2de7-4649-bd07-250d9af20724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecdfad1-8e19-46be-89fb-ee0f2f47683f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e24668-5023-4593-b3e0-ad99eadb751e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2024513-95c6-4538-b3f1-0fa28474860c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4ca33f-3aa0-43e3-9163-18a5d27a666d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c609bf-98a8-47d4-bc05-9b006e64babc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47eb500-e1bd-4947-85ee-5f2d1b414b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3297d2ed-26db-44a2-b9aa-bee51fd2de80",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b402d734-08a2-4c9e-8fff-0051b9d1f469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4575fa03-e099-40f7-a700-6d3f0ea5ec1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c722f390-e424-44ef-9c3c-2fe0951a9b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8168be-e72f-40d2-9997-ffa59e3c5a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfce516d-0c78-49d6-8b9c-f6252294c8a7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6748806a-c7bb-46e6-9ba8-a6c90dd1386b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9221d569-fa6f-40ff-93e7-d239ac3f0a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45a3292-e024-4785-826b-6680082e755f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cba0c9d-93fb-4cd4-9e48-2bfcebf11458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3104250b-f7f9-4aca-a3b7-3e5fc432f68c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e8c011-30e4-4de0-9ecf-8e2216e70c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98f6424-9875-43b4-8fe9-17a574205a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1db089-8c57-4428-8c59-af360b69674e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecab7073-b083-4932-a20a-e55e5161a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b47797-cbd0-429b-9f8a-01d9af6b4288",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209b54bd-0edb-40f3-8ae9-72c31b2e4569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c82f5ad-7749-415a-ac1a-cc67d7e8a42c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4124624-23c1-4aaa-b811-af03a52ee332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea48a2a-9464-4c21-a3b1-2b4597886346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c733ec2e-2fff-4599-9463-7ca7a3f40f27",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b087b4c-c284-44f2-9bd9-b5be1b85ba30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb867596-c66b-440e-9fea-a076a93031d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa8115c-9bd8-4201-a661-5ba9b0bfbd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d1a229-6195-4d14-995f-50115ec047ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecfe6dc4-50f8-442a-8fda-13b1cb63cb76",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f241bb64-ec0a-4aaf-946c-ba078797ed90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cca8597-5e6e-4c1e-982f-a4191c7a3963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0cabf1-f6c9-4a8f-89fb-8c72433cf3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d6c030-f42a-4c6e-83d3-af0d0ed1ae24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c5cc12-d9e6-4814-a132-17dbc67b941a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a772ac-a838-415d-b5b4-4b175a6ef982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb7c1b9-b4ea-49a8-9b77-cab60dd1aebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b1b9e0-f638-4015-a7a2-7fb1a2b20a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5712ea61-6a3b-4301-b79d-a7985cf8d533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba8ea37-5678-445a-b375-38b1d18f92e8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d8eb76-f7d6-4bc2-a9ff-264a7f2c84fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02147d0e-6b7d-444b-a85b-b9f67d8742a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b7b945-6a90-41e7-82cb-a769e9f8bde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592ac5db-0f40-4046-bfdc-2c7f6335404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3768c710-80e1-4069-8c08-7f941a75e74e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5c65b8-15f0-49c8-9f9b-1d0839bcd3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3ea380-707a-458e-a051-57100663856c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3dc8ab-f143-4133-ab63-4ed3d450f1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b21b27-540a-4277-a208-5cb6a6b3e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8876f844-9f8b-47fa-8b7d-8d31e2c441fd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04fbbb5-41c1-4545-8d8b-9552ca46f91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9c618a-e8ba-41b6-bd10-31e03a3153c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6ab36a-c817-4f7c-aede-c54290bc3859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b43270-ef2a-4de2-aaf1-677f8fe784d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219d0b40-d477-47f8-9596-b5fd72d389f4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99741fa6-7dbb-4675-a8e5-f42b33864bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d05347-a79c-4b68-adec-4e97839d801f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47210b5b-99ad-463b-9de6-fc991b8bc6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872a2661-e792-400f-8bc6-bb43b88966fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bf8490-c5b3-4c06-ad40-5bd1e3371349",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f522c30-6abd-48b3-84f2-f368041c3674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c8111c-8fe5-461c-9665-b8c31f4c585b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4c6c7-9fd2-4072-be4d-9212d96fa64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253c8d70-df9a-4315-814e-463e986db3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca56feb-d231-41a6-b7a5-068b85f39dce",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23946646-930d-457b-a8fb-b38bf8028646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe5f40aa-f091-40c9-85eb-7a10ab65da3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c03d4d8-2f68-43f6-acf5-e4a7aa6d3f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04600ae-5ad5-4c4a-ac9c-6958dbec9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bdb94f-381f-4b08-bdec-edb1dfc072c8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082d179e-440f-48cd-924c-d5417491d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "839e6782-17d7-46cf-8b86-7c0292418431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee049b5-1b18-4504-aa1e-82ae9db82a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef36ce3-7a67-49ec-a9aa-f7df5a710915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4034d55-32bb-40b2-9a62-a9973bf5054c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e554ec3d-e638-450e-aabc-6c416ed0c365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39dd6b6f-8e5f-4c54-9873-c18b7b6a102f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da5fe60-6d74-4d75-a34f-5d73e3e65c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21c1490-7103-4292-8b16-2a9b8bd33b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94947c78-feba-41fe-b9a2-f88f24b3a0b3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53cde93-57f8-4fff-905d-7616278b54f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62b3536-99f6-4def-8c0a-0269efec1794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93cde03a-4617-48f3-8160-da7851a18927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5699d09-c176-45a2-b6c6-2c048c325851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c99f86-a093-492d-a52e-ede34bc6d1bb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befa69f7-c5c2-476a-a514-9ba23857fb2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dbde189-6cd3-4bac-9d80-d6377925862f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e7b5df-2e55-406b-b344-5f12f015945c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f77dc7-ae7e-4bf6-b20e-6249e491df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512dc4c0-61b0-49a9-b4a5-710b4bb0a95a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f86a90-9fb6-4f61-bcc1-268f888974c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9840ea01-c4fe-4670-8764-e001e66471ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feb50aa-5879-4d54-9868-e2e3869606ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46a4056-8d1e-414e-a3e4-1917c000b6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59f0547-b97f-4ccb-bc06-8f0d06b1b8a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4e7580-bb7f-4cfd-8651-8b00dfe3c747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf32c1b-f051-4fa5-ab24-acd4c44fc9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758f2f25-2c20-447b-b39d-6668ca739249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa462d41-db46-4a7e-ac69-c8dd0b617e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733977c7-5712-4490-b4c1-c9d4449df3a0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e3a925-d4e2-4544-94ba-72414625ca22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0681a1b-5a80-4946-9c7e-5ff3052acd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe77f15-5332-47de-9966-30886f04faea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e05442d-1bc7-4ff0-ba8a-acd5bc29df88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db0a53d-2a13-405e-b8b7-6e3774b6a0e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9596741-4556-48ce-81bc-7ee33fc2d1cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2c259d8-46cf-45ab-9642-d491c5a26e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c84da2f-1a0a-4395-8767-f1ec988a02f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55e1658-0fb8-4114-89fe-a8ef5a0a40c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037ae577-4611-412e-8367-37ff40fcf88e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7278c05d-8239-4ed2-a1e4-37165e212fc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f6ed90e-2cbb-4e7b-a0b4-c2d34a890115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929750da-e237-466e-bffa-a568cc48c4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fac761-dfad-4fd1-b08c-aa3bc814f4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ba6415-2ba6-40b4-a83c-8a4ca3371460",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26551b6-65c6-42b7-b6dc-99dc0db3ea69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a56e51-5926-42d9-a8dc-834ae918299d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a006bbad-ffb3-4885-a8f9-0aa21ba34234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33994d6-8e7d-4761-b4be-3d0ac7420b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfda90b4-3bf3-41f8-861c-7d5bb7b680fd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d648f54-ceae-48a5-82fb-d84e3e58f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910daf02-2042-4372-aeed-5adec6f1a2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4505a62-8e6c-4bb4-b668-f16203fa7e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ffaa48-a554-4870-ac4b-c6d998dd4783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6762621b-8547-44e8-bf83-869a307ae471",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc88ae0f-b7ee-46ad-94df-2322950733f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b95e9c-4d0c-4408-a3e9-533b0f36913b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a69b2b-6444-4311-824a-2fc0b2e9e227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e896ca4a-0699-4221-a494-911cec8debe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14315b2e-0ed2-47a5-83a4-a0fb7827eb52",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69a8e9d-f826-4a0c-bce0-ff8398b4271a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f2cae2-0c05-4def-b467-49b51c124ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612e7b24-d910-4709-86cd-5a491ee6d577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4aece8-f2db-4ae2-94c8-40826eb07cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2537b1-bcc5-43cc-ae15-6c797b61a369",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9bf5df-644e-45cd-89b8-a31d66809c65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30690057-6230-4327-954e-11a8624360f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e681b4-a591-4f4a-b7ba-edb033fabc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffffa45d-2d08-497e-ac82-bec79d7337ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6d9dc6-f352-47f0-ac41-3b2dc6b06a33",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbaf12a-0906-4a63-895d-5b62aa5fc8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f580cafd-0deb-4aa9-87e9-a5c12b5751b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52a1d00-f3cc-4a82-9648-b9be77e1ae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bcd5320-9a9a-4390-a4ec-b606cf5ba87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304e06d4-75cf-4f79-963c-8ad52ec05596",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b759c5-3dda-4d8e-8cc2-aa699fb734ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e0259b-f9cf-4e18-b738-b87632d1b930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47da1073-5f8d-4ff5-bf72-b681aa1b46de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45fd8ed-8b11-417d-99f2-b3798ac5dc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcac10c-4ff2-4d9d-9651-6654edff20d1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4d0b1e-7ac1-4328-9e96-f3ec310e8003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf69a486-8b56-4847-bdf4-0e1f585afd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd3fc31-979e-40c1-b449-cdf2ffb1661f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5797f26-84b5-41e8-88ab-0dfd35cbf865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa73102d-9c3d-4914-acc6-8d8e98adf130",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f31faf-a2d4-4338-9592-7949a6361575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cae41b9-8a51-4f8d-b263-bbca97594e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "268c07f3-a8cb-4422-8663-a58d51448b4d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b13400d-d54d-4468-aa98-ef11fcb33732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87d0c9e-e335-4b5c-9950-c18b6d1e2a51",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05279b49-3ad6-499c-bea0-92815c712d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998d21ef-8dc2-419c-acd0-3aaf3b2c4305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d01bf0-2e8d-4a37-8b72-8453dde2344f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977f465a-0510-4625-b4ef-3076e6e1d75b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17042e70-1cdd-4535-bfe9-6f3077ade8cb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c72c42-485a-400c-bc56-a70a8cc52f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e78c04-daba-4328-a02b-4910cb5a2432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e008f0d9-52cd-481a-a977-0e3159703026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e011d05-37c2-4a4e-ae8c-ef0e1445b2c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8c2e8b-906f-4fd6-a6a8-173e7f37bc05",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edefc36-333f-4a55-a956-549a626bae6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1f7003-2ba2-4864-b172-a5a5931564a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a370a65-c9b4-4aa0-8372-188ccf9d3b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177b2697-5587-45c1-8e09-9f034feb7d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f711e1c9-b8cb-4b55-9ec2-1080d3434f69",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c427b8-e557-478a-956a-e587121bbe5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0871d96-816d-4dff-9fcd-3b9ca8843a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3754f49a-4e73-4eda-a012-5ae9ddf1a0cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f41e0f-35d5-4505-b2fa-e840429a0d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38409ed-7907-4330-9278-179b62128c6d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9917c543-3290-4e83-88ca-960018093925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b281fc47-b70f-4c1e-925d-35d1cb819d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f643bf0e-3335-4a17-a71c-1c62e5855b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5716b427-0559-4e6d-a71d-bd125ee5fc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89db986-cecc-40b0-b57c-755ae95395df",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8b3f1d-b39c-4fb6-a801-188e051f7507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30a5e9b9-3c0e-46b7-8fcf-186baaac93e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e389952b-031a-4944-a3d1-8ad99356523f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48749d1-42d3-4404-853b-f1cf28deda02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5067d5af-6ca1-4058-ba5b-00a09b6348e3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074d9382-2d45-4022-adf3-2d7722db427f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94adec6-79f4-4624-94f9-d48779cdb330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c1923f-cb2d-45aa-b0bf-b99e1f4f90d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aacc1e-be36-455f-b124-2b61d5eba30c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6b2f3ee-8a40-480a-9975-c7a3e680fbed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff778b48-c55e-4ad1-900c-bbc990371cca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51037a94-474e-44ef-845f-994623b97d43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "437034d0-28d2-45a9-8d6f-495bba7e03ca"
                    }
                  }
                ]
              },
              {
                "id": "a3073fc8-f053-469b-a9f3-37a94d907129",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e4213eb-e214-4e15-bef0-8a62eb03c6c2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7ba771-e147-4471-96fb-72fe39717808",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ac90edd9-d439-4de6-aa58-3cf44f1e259b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc188a53-3f28-46e3-8d04-440b3c6e5774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "182abdcb-1b10-48f8-9e6d-48c5d20df9e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b09c8e7-d832-435c-b711-bbc7820a60ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72ae9905-e0e2-40c7-a3a2-cb966b60cecd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c014d41b-d0de-41b8-a701-a7e3b5f39cce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6295312-602f-468c-bb4e-100941f39f7c"
                    }
                  }
                ]
              },
              {
                "id": "bbdf5d65-64ac-4304-bb9a-1a4a5a6fd369",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd9084a5-f289-45c9-9cc3-5a7faecc3cf4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e2547e-0410-480e-a9be-a16a04137ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9f4f8367-b167-4ea1-b6d6-c5bb20926f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1685ce-ab4d-4206-8793-7ea5206f5f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7951c8e8-fade-4f86-95e0-0af1bef60581"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d80a4144-381e-4100-b565-6011cc6d1644",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50a33734-dd2d-4aea-adc3-ec07cfc564e6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef835ade-051a-4e78-b3f0-a29446977a5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d4d2518-7393-4b79-8521-9a6383d30642"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe9faf11-fc71-40da-bcfd-a9b877b96bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e277a6c2-1f3e-4f10-bf01-d667464b6a48"
                    }
                  }
                ]
              },
              {
                "id": "41372e79-cadb-4b81-8005-adfe2b9b46ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adbab0c2-cedf-4a9e-a1ce-ab66ed7ee235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "50d4c8f3-c8b4-4ade-8dfc-8c9ddb67934a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1a095f6-918c-43c9-8acb-c625f698279f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96275877-6372-4bef-a793-fbdfa0194fa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0312626f-a787-47b0-b38a-949a7ebe50b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bef6c9e4-585f-43b8-bf36-05eb292c50d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e77f378d-be5d-4d16-a89e-39509d6b3cde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca549354-cd66-49ef-9c46-8438afc7adca"
            }
          }
        ]
      },
      {
        "id": "f64747b3-a344-4032-8a89-c07567789862",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d083e2ed-5d6b-41f4-acf5-9ae504cdb41d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd64ab89-dbbd-479d-8686-ae6ae1e160dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae769c5c-5d0e-4a18-b0c4-9992b95cbc33",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96809abf-6cbc-45b1-89c5-c43ee238679c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12315332-6639-46e4-9441-8fc361ac0401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02f1a7b-1f54-40a2-b729-d9cea126247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed76f6f5-5cf7-40bf-a408-f164ccdeef06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51fa12b2-85c6-4081-a29e-56b670b17d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e08b97c2-6645-4b61-b7da-9d1370bb8b48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a759ba3e-8292-4953-a1ad-ba8fa47b17b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "357d65e1-d701-4889-adba-40970589a7d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fbf30e1-fbdc-404c-ab06-d2e812d673b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a32faeaf-c6e3-45e9-a06b-ac9352397a70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "800e59fc-4238-4cc5-8913-99d2e30e13b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4881e4f7-a4dd-45fa-8605-fac317f20d2a"
            }
          }
        ]
      },
      {
        "id": "ab3e447f-1879-4e34-bf7b-ebe332f2b88e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "22858a4c-77b2-4122-b65b-d59768bb6734",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3baf31b-1859-41f4-b350-a26a53bb3f28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a6a30c1-fd3a-44ed-90ff-1916496d4b93",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33880adb-ee13-4639-bcc0-513c8cf89f0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b17975d-7b9a-41e1-8d09-4e2e44979843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f700cd74-5a46-4b63-b240-c6bc9856396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3976bc3f-8a22-4101-b90e-e4a6277d1f85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "081e4dc1-5785-48cd-a039-1915ffc0f898",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad1b0782-d16b-408e-8c1f-593eb4a7c623"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9dcce0e-3b7f-4d14-8740-0f214bf3202f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cbf69e0-0232-477e-b56a-e482567212be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01dc4b92-0ac4-459b-861e-ac5c239389d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf449be1-1693-423f-b648-59ecf4d55df8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45a7912f-a066-45be-8545-57c6ae18e73d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "316c91b9-b373-44fd-a17f-aaf5c0a59a32"
            }
          }
        ]
      },
      {
        "id": "e552a562-d0e3-4502-8895-714fabe6993d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "565b4a86-0e1b-4855-a12a-3217778c86c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fefa01d3-65c6-4c4e-9980-0d90522292a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0701c95f-29a2-4e53-a21c-c829084fbbe4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a3a03-8c18-4744-b7bb-21e4f71a1010",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0959b8ee-fe60-4639-93b8-695696d907c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14ddf5-d06a-4efe-be12-d49015daf7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae14b55-2392-4203-97f9-654b81e9972b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d2c5a16-452e-4081-a967-9a9e26a169d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b93213d-1e50-447b-953d-38c2c5f0b42a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3404c158-9c51-402b-b6a9-57e228db3c49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "203cb83c-b75f-412d-846f-aed9a30fd72b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "995d0c44-96ba-45fe-9eb2-720db4c7e20f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6ca12876-c160-4a07-8337-eb759bd3a9e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36578ced-1121-4618-a622-e74eb3754d5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddcdcca4-ad18-4fb8-b346-d33231e14b5b"
            }
          }
        ]
      },
      {
        "id": "3f099e29-2858-4966-8df5-c1d311fa93aa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7477decd-1b91-472c-b715-f79329b85b7a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5859b20c-b0fd-4115-ad3b-3cb32252dd0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ad25e460-e2a3-46c7-8cf9-016ff4b3fafc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c383847-1b0c-4083-8300-c4b60230fea3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9357655f-1032-483c-9c5c-32539b9b688a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 464.4210526315791,
      "responseMin": 13,
      "responseMax": 18048,
      "responseSd": 1689.1419367133747,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698194012985,
      "completed": 1698194159335
    },
    "executions": [
      {
        "id": "8ada5db9-3920-4fb2-82ac-af07ad139e8d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3984cde5-ffbf-4db1-9b6d-815aa4807b38",
          "httpRequestId": "5a8b4d3d-f09b-4856-9d26-2d8f5baf6948"
        },
        "item": {
          "id": "8ada5db9-3920-4fb2-82ac-af07ad139e8d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8224a467-e4ee-4101-95ad-e047f960163a",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "70cb3568-a090-4402-9eef-166dd37b94c2",
        "cursor": {
          "ref": "4e12d1c7-b8d4-4ecd-9ec1-2b86f92084fb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b6676877-0b3f-4117-ac42-8fdeb046cc70"
        },
        "item": {
          "id": "70cb3568-a090-4402-9eef-166dd37b94c2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "42062fad-3ae9-4404-b449-5ec200a54fb3",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "3f629ef6-4bd4-4703-93f3-905f1637dbe8",
        "cursor": {
          "ref": "b20ab685-cdf1-4d18-a4fe-69fb07972aa6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7fac9aeb-64d7-4a02-a919-211e792b5e24"
        },
        "item": {
          "id": "3f629ef6-4bd4-4703-93f3-905f1637dbe8",
          "name": "did_json"
        },
        "response": {
          "id": "fd1a078e-1356-47f5-a58e-2f1a242b715b",
          "status": "OK",
          "code": 200,
          "responseTime": 1864,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3e59d-94ec-4f47-99f3-b8f3454ec138",
        "cursor": {
          "ref": "4ba6a90b-a057-4877-94b3-33a53751eab1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b74ef439-d680-457a-b841-737671beba7a"
        },
        "item": {
          "id": "3ab3e59d-94ec-4f47-99f3-b8f3454ec138",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5cff96c-8fde-43a2-b2ba-b3e11349297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab3e59d-94ec-4f47-99f3-b8f3454ec138",
        "cursor": {
          "ref": "4ba6a90b-a057-4877-94b3-33a53751eab1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b74ef439-d680-457a-b841-737671beba7a"
        },
        "item": {
          "id": "3ab3e59d-94ec-4f47-99f3-b8f3454ec138",
          "name": "did:invalid"
        },
        "response": {
          "id": "e5cff96c-8fde-43a2-b2ba-b3e11349297d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d727e74-8a74-4a6f-8266-7c054455c48b",
        "cursor": {
          "ref": "90c36bda-143c-41de-a0e4-fc7b621ba9de",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bea47ac5-2c05-4ab3-84d2-cddc5b2da288"
        },
        "item": {
          "id": "4d727e74-8a74-4a6f-8266-7c054455c48b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "69434eab-b4e2-4551-836f-1fdaf9756b89",
          "status": "Not Found",
          "code": 404,
          "responseTime": 428,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8958e3-6b8d-4d0e-a8b3-c3aec63490eb",
        "cursor": {
          "ref": "f3700e82-3514-4a7c-baf0-fa4a107d46ab",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e62e3e2e-0ee9-47c7-89ab-5fd9efb2aae9"
        },
        "item": {
          "id": "4c8958e3-6b8d-4d0e-a8b3-c3aec63490eb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1a0e87f7-d00a-4026-a00a-34a7abafdefe",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711730bc-8f3b-4d65-8077-0c4078d5c972",
        "cursor": {
          "ref": "cdf1e73b-7656-4642-b580-d1ba1eea0bf3",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bf6e9c1f-e6be-42fb-9c56-b80f58c6fab1"
        },
        "item": {
          "id": "711730bc-8f3b-4d65-8077-0c4078d5c972",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "703e01d8-8fc6-455d-8de5-f9601f8cb7e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19b4d66-42f9-4086-9385-12004af02e37",
        "cursor": {
          "ref": "6c0feac9-a8d1-490f-ba6b-c1bd5025eae8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0535c85-978d-4a40-97b2-b3d610366dcb"
        },
        "item": {
          "id": "b19b4d66-42f9-4086-9385-12004af02e37",
          "name": "identifiers"
        },
        "response": {
          "id": "81c0ca9e-6d5b-42cd-aef6-591a516dac91",
          "status": "OK",
          "code": 200,
          "responseTime": 1678,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde7af18-46f7-4229-8ace-0a30164314f5",
        "cursor": {
          "ref": "f3ded860-e82d-4891-9d23-515b0c6c1cbc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0fe71e34-aed9-47ce-aa15-fb1657f6fb0d"
        },
        "item": {
          "id": "cde7af18-46f7-4229-8ace-0a30164314f5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "32335880-b799-4beb-95aa-57b98ba22de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c874ae35-8066-4e1a-8beb-7db2deb9e8dc",
        "cursor": {
          "ref": "01f196f2-ee9b-47d3-9e18-610126a7aa23",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2200311c-18f4-4ff5-ac5f-b9b28021e9c6"
        },
        "item": {
          "id": "c874ae35-8066-4e1a-8beb-7db2deb9e8dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b1c003b3-63c7-43bb-8358-eca5e4f7ebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75cc387-9e8f-4b01-9f00-a5fd0ee8e48b",
        "cursor": {
          "ref": "543535f5-84d6-45e7-bc1f-8243f646b454",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "73375832-62c5-49e2-8bdb-1580f4e99353"
        },
        "item": {
          "id": "e75cc387-9e8f-4b01-9f00-a5fd0ee8e48b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "782fc3e3-c9f4-424e-8993-daa365563ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cdf24c-787f-4325-b3e4-5e946e50eda4",
        "cursor": {
          "ref": "f28fab96-7fc5-4e3d-a90a-3c5c1033ea83",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae02f22c-a5c8-423f-be5c-2f06816b4cf3"
        },
        "item": {
          "id": "37cdf24c-787f-4325-b3e4-5e946e50eda4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "76650fc5-2830-48cf-a123-c682b95f4635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d0d4e6-871a-4463-a56c-d81dbcc9539a",
        "cursor": {
          "ref": "c3265820-319e-4a08-8c6b-f611d44be9f9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9ef2d33a-9e8c-4dd7-9183-e98999f79c87"
        },
        "item": {
          "id": "31d0d4e6-871a-4463-a56c-d81dbcc9539a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a7b4988e-3c4a-4f80-af2d-3af71717a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30be9388-6eba-45e0-b0fe-a65813d985f8",
        "cursor": {
          "ref": "db3cdc46-2ee1-4a4c-8d06-3b01a9c4bf06",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7f495f32-a385-437f-93b0-cf32ab78bbe5"
        },
        "item": {
          "id": "30be9388-6eba-45e0-b0fe-a65813d985f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eabab14e-84d8-4f0a-b877-aba644e0acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca21a93-21eb-4f22-97c8-d2dcfeb90b46",
        "cursor": {
          "ref": "9b00417b-7ace-4e60-b704-a6b016deb63f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57d13132-b2ef-47ff-91e1-6ce7d43fe661"
        },
        "item": {
          "id": "0ca21a93-21eb-4f22-97c8-d2dcfeb90b46",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c62495f1-2e0e-4af9-ae52-3060adb40a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71d5ed7-5170-473d-b360-21e91e442f57",
        "cursor": {
          "ref": "d1013653-0fe3-4de7-9db5-276d3b3a62a2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9420878-cb72-4314-8aca-2046043bbdea"
        },
        "item": {
          "id": "c71d5ed7-5170-473d-b360-21e91e442f57",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c83880c1-f1ad-45ca-be05-65473c909159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e6e660-3b28-4d35-84b6-5801168aadd3",
        "cursor": {
          "ref": "08a877ce-d896-4857-9a39-36860da1affc",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4a02971a-39f9-4f92-b038-81c3ade93fae"
        },
        "item": {
          "id": "85e6e660-3b28-4d35-84b6-5801168aadd3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dcb65dd4-f522-43ab-8340-2179350b7c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf8e2e5-5020-4b74-b5e1-789864718fff",
        "cursor": {
          "ref": "e5d47363-308c-4115-95d8-bd388b755e8d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8f740b6c-cf69-4587-885f-78a7680c6699"
        },
        "item": {
          "id": "ccf8e2e5-5020-4b74-b5e1-789864718fff",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ef9cac14-21b9-4392-8bcf-218a3dbcbf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf04a5d-6df9-42a0-88c7-4e69bb0d18d9",
        "cursor": {
          "ref": "b1241974-6c72-45cd-82d5-19cb3b13ef2b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dd6ff445-d3ac-4ea8-ba44-1c085a6ec45d"
        },
        "item": {
          "id": "1bf04a5d-6df9-42a0-88c7-4e69bb0d18d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "509dc53f-0773-422a-83e6-8ccf6591cd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc516bd-9378-4dc3-a624-579057f97d61",
        "cursor": {
          "ref": "a16bb9df-539e-4d86-8ff5-e4efad82736a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "611e94b3-9265-4006-9759-5238b8a26138"
        },
        "item": {
          "id": "4bc516bd-9378-4dc3-a624-579057f97d61",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4e100bcc-1507-4e21-b879-9e5f78e4327f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c5dd8-9be3-4d51-b939-cb293090369e",
        "cursor": {
          "ref": "9e31ee0c-ebc6-42a1-96b9-ee255c86985f",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b73cd583-797d-45a0-947e-61466f8fa615"
        },
        "item": {
          "id": "0a6c5dd8-9be3-4d51-b939-cb293090369e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "06a5fa18-b97d-4a87-8b30-a5777abf26da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f8e6c-00ff-4498-a362-6131e64d3469",
        "cursor": {
          "ref": "3b791f35-32ac-49b9-bd30-e390f8065f79",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e8fb1001-ca48-4f63-b385-4f3cf89bcb0c"
        },
        "item": {
          "id": "b33f8e6c-00ff-4498-a362-6131e64d3469",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c0dbde3-82fc-4042-98cf-13dc779e2619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463cb4af-c4b9-41df-b95a-30091e08b9c1",
        "cursor": {
          "ref": "5801021f-d5af-4c38-ad63-f2fafb7db30f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "466fa1e2-ae43-45f4-a3e9-78a7a45a5439"
        },
        "item": {
          "id": "463cb4af-c4b9-41df-b95a-30091e08b9c1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c0898684-88ce-4296-880f-031fdd061145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf103883-fb51-4e44-a375-62678eddb51d",
        "cursor": {
          "ref": "4327bfe7-523a-4cdf-8135-eea2951421a4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "358ce45b-d816-4af0-b915-9165f71aafa8"
        },
        "item": {
          "id": "bf103883-fb51-4e44-a375-62678eddb51d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "41e6a0b0-3b6f-4ce3-9630-1b56fc9dad41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01242aa-4d12-4bf5-a21f-461048e0fd6e",
        "cursor": {
          "ref": "fde18cb7-7fa8-494b-a012-91e192338ffe",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ebbd720-e26e-499c-9c36-6309e0e2fdd7"
        },
        "item": {
          "id": "a01242aa-4d12-4bf5-a21f-461048e0fd6e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "59f267d0-4b94-4884-bed9-cc10706bf07d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d0c876-1af8-4180-918a-c647a396609a",
        "cursor": {
          "ref": "97720d8a-56b2-44c6-9caf-f8e195c1f4af",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6c880d23-b5a6-41eb-9fae-7c448573f423"
        },
        "item": {
          "id": "c0d0c876-1af8-4180-918a-c647a396609a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3aa3e1df-5206-42eb-8420-a0629fedd001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51efe2ab-30ff-4907-bf6f-2981e9e7785b",
        "cursor": {
          "ref": "3b343e61-da22-4683-b10b-9b8a03006a2d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ad5b7aaf-53fe-4221-ae2e-33090abab8a6"
        },
        "item": {
          "id": "51efe2ab-30ff-4907-bf6f-2981e9e7785b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7b09f0bf-d11a-4d4e-a3f0-57ba84c4533a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997a52db-2ffa-434b-9fb8-bd0c396fe728",
        "cursor": {
          "ref": "6f99f632-56ce-4117-ae8e-2667ac15c050",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "eb29004b-2297-4331-af1e-f160db44945f"
        },
        "item": {
          "id": "997a52db-2ffa-434b-9fb8-bd0c396fe728",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b95db4d9-d286-49bb-afd5-5ded9b732676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c98cc2c-4648-42b2-a8eb-3adddcf4d7c7",
        "cursor": {
          "ref": "578d18e0-8853-4fdc-b96e-c884f497c8f1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "50b01ab1-7c7b-4ac8-937b-de263fea1783"
        },
        "item": {
          "id": "1c98cc2c-4648-42b2-a8eb-3adddcf4d7c7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "06d5e80b-5a8b-46db-81a3-6806a2f358f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69abe695-35d5-49bd-a825-df8e0a991f47",
        "cursor": {
          "ref": "dc3df611-9fe1-417a-b62e-960f50b638f1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9873c187-e757-4bc7-ac7f-37ec8d46f983"
        },
        "item": {
          "id": "69abe695-35d5-49bd-a825-df8e0a991f47",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "91e4af2a-e272-4f90-89f2-70ae9bae9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eb820d-5884-4ad5-a3ca-ac1b5a7fc8da",
        "cursor": {
          "ref": "08bb1222-a261-482d-a29c-135d1e5da6dd",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "acfeba2a-73ec-4f28-90c5-b2f8ef6cccd6"
        },
        "item": {
          "id": "06eb820d-5884-4ad5-a3ca-ac1b5a7fc8da",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "26ed9b62-84ea-4401-851e-9c6e91182439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a66064-9cdc-447f-97b3-52b626587dde",
        "cursor": {
          "ref": "89b2c13d-5b82-4963-8a95-c2e74686ac7d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0619a628-e076-44d5-bc33-5e1ce5211993"
        },
        "item": {
          "id": "e4a66064-9cdc-447f-97b3-52b626587dde",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a8ac7227-1760-4be6-8a61-4ff412cf1135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b672a1-879b-4478-bf1d-c5e3e25e02ae",
        "cursor": {
          "ref": "32bd0f79-3abe-45be-8ba8-7b45427a424f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "84e0953f-42b1-455c-83a8-ea926f1d0b68"
        },
        "item": {
          "id": "47b672a1-879b-4478-bf1d-c5e3e25e02ae",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b8177242-2cee-4f89-be4a-e0bd5e06e856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d4493-763d-4a32-b272-c9c138ef9964",
        "cursor": {
          "ref": "dbbf34b1-0f45-4dc5-a741-84b9a649101a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "822085ac-dd01-45a5-ac4f-e95166f9da43"
        },
        "item": {
          "id": "ed0d4493-763d-4a32-b272-c9c138ef9964",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "82347f48-a8c3-4506-8162-087501326e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882093da-1fd6-4623-9ac7-b1c55c2aed88",
        "cursor": {
          "ref": "d206de82-1a6d-43f9-93e2-ab13179da8c1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1f2734a2-e316-43e2-ad6f-b4381c82083d"
        },
        "item": {
          "id": "882093da-1fd6-4623-9ac7-b1c55c2aed88",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9e0107d6-de17-40a1-9e4b-34c2824f5765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f1f599-2fb6-450e-990a-d3dc9269f5ab",
        "cursor": {
          "ref": "770d9985-66a1-4619-80ac-62524d49dab8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0fe1d3a2-0866-4500-899a-c2b3e3376d6d"
        },
        "item": {
          "id": "45f1f599-2fb6-450e-990a-d3dc9269f5ab",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5d5dda3d-a273-4ee5-933c-73610e9c8020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9057a8e9-6a34-4282-947c-99018486abdc",
        "cursor": {
          "ref": "b7f3e121-22bb-4e40-a234-bb7a0d2c899d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2421bd47-c357-42ee-8b7b-b4cbafbc91f8"
        },
        "item": {
          "id": "9057a8e9-6a34-4282-947c-99018486abdc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "199b710b-14e1-4f5d-8e3d-ab96ccf2ea53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faaf50f-0488-44e7-b9b0-34208416d3a4",
        "cursor": {
          "ref": "f1b6af1d-4490-4275-a057-4f64a8d9f1bf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4a615a16-a21a-41c3-9239-b1df2801be68"
        },
        "item": {
          "id": "9faaf50f-0488-44e7-b9b0-34208416d3a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dcd1a5da-a7f3-4a90-9324-024cc87a042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68803edb-cfc3-42b5-aacd-0d7bfdcbeccb",
        "cursor": {
          "ref": "a0bfea14-d57c-4645-adfa-f1e162e0d777",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8de02faf-74d9-4759-8f1b-99fc815ccf20"
        },
        "item": {
          "id": "68803edb-cfc3-42b5-aacd-0d7bfdcbeccb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d5712988-edec-44ea-8c4a-180ebcb745c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bb0447-4277-4ded-8131-a9f84dae8b79",
        "cursor": {
          "ref": "25784d8d-5397-4920-b54f-587fb24a555f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c422d875-1388-4b1b-95bc-36282185ab17"
        },
        "item": {
          "id": "a0bb0447-4277-4ded-8131-a9f84dae8b79",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "356965a5-ff76-4239-a078-79533b13309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e9ffb1-edde-4d25-8542-4d2c65c2f12f",
        "cursor": {
          "ref": "f66fbf03-d3c3-496d-875e-e8ea00e88365",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "baf9ebf9-364b-40d4-b11c-1ff732f0a023"
        },
        "item": {
          "id": "75e9ffb1-edde-4d25-8542-4d2c65c2f12f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "41bb1fcf-1768-4d29-b8f0-e289b0ff532d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59d3955-405e-4eb1-a225-6ef61fe7d52a",
        "cursor": {
          "ref": "cdd01465-2359-4c88-ae18-466df45c6126",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "91e2851d-fd89-48d4-8402-18176525180b"
        },
        "item": {
          "id": "a59d3955-405e-4eb1-a225-6ef61fe7d52a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "05d5c38f-cce4-49b9-99c1-e9c02e328628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09045ba6-c6c5-4139-9872-0e0bae49944f",
        "cursor": {
          "ref": "b424eb88-d062-4688-a556-b55a83dd2d2d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ba41df55-6959-4937-bce6-0243061af547"
        },
        "item": {
          "id": "09045ba6-c6c5-4139-9872-0e0bae49944f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a55b630e-bf15-46a4-9b38-723e9e64e643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14b4738-614b-464f-b098-1a8e2e3d2358",
        "cursor": {
          "ref": "fe7e3f5a-b56b-4582-ac03-267d3fe3406c",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6af2816c-929d-452f-be95-330a95a065de"
        },
        "item": {
          "id": "c14b4738-614b-464f-b098-1a8e2e3d2358",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ea36221c-f266-4a9c-9e9c-2a464bfe3c6f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2472,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb4caa8-f0be-48e9-ba77-dceb9c3b1428",
        "cursor": {
          "ref": "c9153f34-045a-42d2-80c6-0787d062fc0a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "bc0607b7-d034-4e4e-a1f4-6683f58d6a5c"
        },
        "item": {
          "id": "ecb4caa8-f0be-48e9-ba77-dceb9c3b1428",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "82ae1c51-f4a7-4085-b37a-4ba59c8f0cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95207921-3773-4a94-b58a-7933e7b71b64",
        "cursor": {
          "ref": "952f3ba8-2f5d-41cd-a6f4-bbf851a3996b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "66c4ae3c-b69e-4775-b7b1-a9ec039522d5"
        },
        "item": {
          "id": "95207921-3773-4a94-b58a-7933e7b71b64",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0ff46538-370f-4c6f-ad39-9c52d1334a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5b16b4-b1ca-4610-a1a1-38793886feee",
        "cursor": {
          "ref": "2b2ace67-75be-40c6-b391-49969b0170ed",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "96944b79-c5c0-43b3-ac36-a68f8e41015b"
        },
        "item": {
          "id": "0c5b16b4-b1ca-4610-a1a1-38793886feee",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6b4a51d2-4f1c-4c1e-9457-93f68f26856a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d915171c-067e-4543-9121-91af9c2f1a21",
        "cursor": {
          "ref": "73e88188-d05c-4eff-9693-520d572bb635",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bdcc00c1-a41d-497f-9953-fd0e7631df2f"
        },
        "item": {
          "id": "d915171c-067e-4543-9121-91af9c2f1a21",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2c4f570c-73ee-4f79-90ca-500a326e3f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d366d-bf4f-456e-af71-a2ab86cf4a9a",
        "cursor": {
          "ref": "9811d429-33bd-4610-8de6-84cbab2e3eca",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "33bff631-d962-407f-99dc-4401bc5ce180"
        },
        "item": {
          "id": "8f0d366d-bf4f-456e-af71-a2ab86cf4a9a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81f435dc-4e43-42e0-9cf2-398f80213ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2572f3e8-16e7-402e-a7b6-332f492ca045",
        "cursor": {
          "ref": "91b8cac1-48ca-444a-bcf3-b72cfd166b44",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d01d4133-160b-4138-af71-ac0cf7422def"
        },
        "item": {
          "id": "2572f3e8-16e7-402e-a7b6-332f492ca045",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "558af978-2345-4d8c-bc78-c7fa12450590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab7e880-d6b8-454e-8038-5cdcbe0fc75b",
        "cursor": {
          "ref": "ae791b03-ca2b-4386-9e89-82452ca1e190",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "963b98a4-242e-489f-a461-a1d3fb84260c"
        },
        "item": {
          "id": "7ab7e880-d6b8-454e-8038-5cdcbe0fc75b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d7fc1c9a-1eda-40b0-9723-1cd955dd65fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2432,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d195d7a-366a-4e27-adc8-c8923764ac1e",
        "cursor": {
          "ref": "9d0f726c-1b28-4258-9c31-0d5daa0c5d10",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77711c1f-3331-4ebb-9224-7b8765fafd4e"
        },
        "item": {
          "id": "4d195d7a-366a-4e27-adc8-c8923764ac1e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0ba84d66-42c7-472e-b7d8-0ac721b3796f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da7f544-57ba-4cbb-b244-94e043472980",
        "cursor": {
          "ref": "0353fd4f-7455-4af6-8e30-4606097b012f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4bdd7f34-c519-4273-8b66-c502e9f05f31"
        },
        "item": {
          "id": "8da7f544-57ba-4cbb-b244-94e043472980",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8bd26472-945d-4270-8aee-effb575d1c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84562626-6fda-4479-bcab-6772545027ec",
        "cursor": {
          "ref": "3a623d73-5493-4657-afd3-ef85641c2562",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f454b411-a524-4665-bceb-31495be562e0"
        },
        "item": {
          "id": "84562626-6fda-4479-bcab-6772545027ec",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "99f3b14a-512d-4384-ae71-3371892034dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f64af9-233b-42c2-9ab0-99a1d0e49055",
        "cursor": {
          "ref": "25415d0d-fc8e-489b-b44e-7c54d919723e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "23bb05be-1793-419f-93e2-0e7d7f7f877c"
        },
        "item": {
          "id": "89f64af9-233b-42c2-9ab0-99a1d0e49055",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "718b7deb-8d47-4bf6-a6e4-99423de2ea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db66a2f-e51a-44d3-9ebd-898e05239e75",
        "cursor": {
          "ref": "4f2a28df-9cf9-4c23-afff-c0e2930304fe",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a8940648-954e-45ac-b915-6367a24b2b26"
        },
        "item": {
          "id": "4db66a2f-e51a-44d3-9ebd-898e05239e75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a666855a-b39a-4cf3-9d63-d370580eafac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf91b51-077f-47f0-851d-b184df6473d1",
        "cursor": {
          "ref": "fd4c15b3-c4d2-43c8-88b8-3ee916406f71",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "83ae873e-182f-40e5-b19d-9e27742c03e3"
        },
        "item": {
          "id": "1cf91b51-077f-47f0-851d-b184df6473d1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20ec8b7b-a934-489d-848b-8a028d8b6959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02e72f7-718b-4684-9083-dabe726206f9",
        "cursor": {
          "ref": "5ec7556d-3836-4d5f-8e95-365f7aaa2e8e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f78e1d16-32a7-4f52-b716-e73f6edfe992"
        },
        "item": {
          "id": "a02e72f7-718b-4684-9083-dabe726206f9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "83ac5a2a-6b1c-4cfe-8f99-17288134b0ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c231bc-64f0-4b8b-ab6f-9f65eea149a4",
        "cursor": {
          "ref": "435037db-d7da-42d9-ab96-9707d1f83fe1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d0502484-ca60-4275-8454-408cdb2d8da7"
        },
        "item": {
          "id": "c4c231bc-64f0-4b8b-ab6f-9f65eea149a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7169662-4ea0-4fbf-b87f-a8b5a04e082f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbcb662-e26a-45f5-9f47-39e6593b94b9",
        "cursor": {
          "ref": "835bef98-d11a-4978-9674-f9555e538060",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "21612684-aea0-4600-b9cb-4d819c547ea4"
        },
        "item": {
          "id": "abbcb662-e26a-45f5-9f47-39e6593b94b9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "691ee79b-f3ac-4111-8f54-5724bc872ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f74d5fb-3f78-4efd-9cf9-3abfa790b42b",
        "cursor": {
          "ref": "f3f338b0-f20a-4f82-a9f1-0bbed7b8a915",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b017bda3-f862-4803-8aef-8acdceb239a4"
        },
        "item": {
          "id": "6f74d5fb-3f78-4efd-9cf9-3abfa790b42b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1893e153-db30-4ec8-a26e-80591940afd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a150dc6-c095-44a1-9ba3-0081ae27b92b",
        "cursor": {
          "ref": "3b4f0e12-7273-4343-b4ac-0d3971cc0f76",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "85131ae4-f5bf-4923-848c-27a93b50b529"
        },
        "item": {
          "id": "4a150dc6-c095-44a1-9ba3-0081ae27b92b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "35cc0a15-9041-4475-83ac-c2e83abc6078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd78255-bba2-4750-9262-5115ea022874",
        "cursor": {
          "ref": "6e416be3-7411-4a6d-8e74-8bc9b9652739",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b1a1aebd-f47d-4500-9d35-b03ccdb63bd3"
        },
        "item": {
          "id": "ebd78255-bba2-4750-9262-5115ea022874",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c7202355-c800-4d3c-922b-d8b665757f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ad3e3-c59f-4298-a295-3d633e4b7eac",
        "cursor": {
          "ref": "7ffba87c-f2b8-4e34-b7a2-6dcb15c257d0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "852688d8-0cf9-41a0-bfc2-f7365d87b6ba"
        },
        "item": {
          "id": "cb8ad3e3-c59f-4298-a295-3d633e4b7eac",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a7e76fbe-dadc-4872-bfb5-4f03bc10a112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de8ba3e-49dc-4817-a09f-917b7d49033b",
        "cursor": {
          "ref": "26ee43ea-fa04-4a82-9cc1-6acb30c02ef8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ae49f017-9729-4e86-9983-9fb3b350e561"
        },
        "item": {
          "id": "2de8ba3e-49dc-4817-a09f-917b7d49033b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dab1391c-2def-4b09-9b87-1646458e388b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47323b87-a1b7-4327-a5e5-0315efff6fc9",
        "cursor": {
          "ref": "10d5d52f-c6b4-4f53-a757-05c193eb287c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dc7945fb-c0a9-4473-8c94-92dd3fd13384"
        },
        "item": {
          "id": "47323b87-a1b7-4327-a5e5-0315efff6fc9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "087c49be-e0a2-4799-9a3d-95012155fb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8e289c-72e2-4c9e-b2a7-5f159b0bd594",
        "cursor": {
          "ref": "95bad9f8-ae9a-4c50-a1bf-525fbb15c3db",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d300fdf9-99d7-49eb-a38f-bd830716cc1f"
        },
        "item": {
          "id": "fe8e289c-72e2-4c9e-b2a7-5f159b0bd594",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "33e5ad0f-bfa5-4517-834e-2f69595e9fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d89168-8004-4a1a-895d-1a3533b01243",
        "cursor": {
          "ref": "4ca56105-4118-4c9a-a70d-02c2303f6c0f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44591f14-bb3b-4502-8dee-82d7da4f3b86"
        },
        "item": {
          "id": "30d89168-8004-4a1a-895d-1a3533b01243",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "730ccf36-a896-429d-a0fa-6f94a61e9749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc11be58-9f1e-41b5-8cd5-76cd6d0a8ff6",
        "cursor": {
          "ref": "47d64394-6906-49ba-bf0c-c9efca767bdd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f730bfdf-d512-42f3-80b1-38d1539fbb82"
        },
        "item": {
          "id": "cc11be58-9f1e-41b5-8cd5-76cd6d0a8ff6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e923c02b-e6b9-4b92-94cc-1464275ed143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e011d8-f13f-46a4-ab5d-33cca389dddc",
        "cursor": {
          "ref": "7b4ccbe1-85b6-4c14-9374-bbec68abda00",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "66f30209-bdce-471a-9fb4-407f606a3d7f"
        },
        "item": {
          "id": "c0e011d8-f13f-46a4-ab5d-33cca389dddc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ae674880-8dcd-4600-afc3-6be395b7c1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac7712f-399a-4972-a54d-c8cf66847409",
        "cursor": {
          "ref": "a330b042-df21-4e81-8610-32f4c0d37af5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e959fb13-4ced-44cb-98ea-056ba6b105cb"
        },
        "item": {
          "id": "cac7712f-399a-4972-a54d-c8cf66847409",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d33f256f-81ce-4597-95b3-944f193da5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f0cfc2-17b1-48fd-b659-616e147605b9",
        "cursor": {
          "ref": "ad0b2de6-b296-4da7-a146-862e71b211c4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f0abe5f5-c908-4242-979d-ccd9116d1776"
        },
        "item": {
          "id": "e1f0cfc2-17b1-48fd-b659-616e147605b9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6e86177b-feac-4bc0-96af-28de4f263a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32191c66-eaac-4862-97fd-c895c0e3a55f",
        "cursor": {
          "ref": "8e8ba29c-169b-4bd0-a3e0-3ec749bc2f1b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6474694d-ce01-4e2b-88d2-427c4b252f53"
        },
        "item": {
          "id": "32191c66-eaac-4862-97fd-c895c0e3a55f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "870b5661-73f2-4f24-bc9d-94d5f8236f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e8623e-41ab-4aaa-9d78-4c7bed425b22",
        "cursor": {
          "ref": "0fe800b8-b466-4237-bef1-218e56f8891e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d3ffede7-dc4b-4a33-a140-c88dfe087166"
        },
        "item": {
          "id": "d4e8623e-41ab-4aaa-9d78-4c7bed425b22",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bc5162f4-d053-4027-8fe5-d1836c5baa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e88a1d-d2a9-4d63-8866-45bbcf2d9b0e",
        "cursor": {
          "ref": "af114c97-bf6a-4ebb-b068-7fac1c096766",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "90d33894-a1ca-454b-bc14-48979aa7e703"
        },
        "item": {
          "id": "03e88a1d-d2a9-4d63-8866-45bbcf2d9b0e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b44fda74-3e7d-4266-980f-977d13e477be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0bc279-1d62-4373-8c22-db06f8121f14",
        "cursor": {
          "ref": "988e91c8-46e0-4439-9bcc-f88f3e472d7b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f820145-ab86-4cf2-820a-64ecd5d75ed1"
        },
        "item": {
          "id": "4c0bc279-1d62-4373-8c22-db06f8121f14",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa7d84ab-5313-4598-820a-22f2ba12fdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88140789-74d7-4fe2-bc1b-aef7ad4f26d6",
        "cursor": {
          "ref": "c6c36575-7d64-477e-9d77-e3c83dfabfa0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea756681-9aa8-44dc-b3c8-fd478a429d4f"
        },
        "item": {
          "id": "88140789-74d7-4fe2-bc1b-aef7ad4f26d6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1909ba48-4cd8-4587-9bf7-3481308cfc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3808ac5-97f3-4069-a6e1-4f8a061a9b7a",
        "cursor": {
          "ref": "dc601d5a-b524-4ba1-a8d1-cdb2feb0b63b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "05beab7a-f5bd-4edc-999a-128d067be132"
        },
        "item": {
          "id": "d3808ac5-97f3-4069-a6e1-4f8a061a9b7a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1832ec75-8c25-40d9-bc30-efcf533fd99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02fa5fc-2e7f-44ca-8694-423999c15eb6",
        "cursor": {
          "ref": "7efaa1bc-9908-4e4d-95ac-fac793f38fb4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "614dedc0-d1b3-432a-8d49-f3f023afc5d2"
        },
        "item": {
          "id": "d02fa5fc-2e7f-44ca-8694-423999c15eb6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c9a646e3-4bcf-483a-9dd0-a82ef0c30346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016f9ba3-b762-4458-ba1e-9557fd23e040",
        "cursor": {
          "ref": "76c6e4cc-e98d-4c1b-818d-d29e4361d942",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e95fcb1e-501c-4511-a3f4-7e100a7effb2"
        },
        "item": {
          "id": "016f9ba3-b762-4458-ba1e-9557fd23e040",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "acf1131c-03eb-4514-92be-85a50205e8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7d9959-e34b-4744-9ad0-e38bc30d0e0e",
        "cursor": {
          "ref": "65fd52b9-4513-4192-9ab2-606cc1f0f035",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "64593837-398b-409e-bf74-ada92662fa0e"
        },
        "item": {
          "id": "6b7d9959-e34b-4744-9ad0-e38bc30d0e0e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0f1c1ad5-5031-479e-94e6-19bdcb695ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7654a8d-291c-4025-b5d3-9c84aa59bbc7",
        "cursor": {
          "ref": "56e2d9f9-3d29-498e-9bb6-b697ae25e249",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f83ec946-7c5d-45bf-9d2e-8ae3e253b718"
        },
        "item": {
          "id": "c7654a8d-291c-4025-b5d3-9c84aa59bbc7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "caaf7f6b-2600-4b7d-a582-70adfa6b5e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafde32e-ab4c-461d-b72d-682eae629d1c",
        "cursor": {
          "ref": "4837b770-8b5f-4ae3-8d0e-e9d951147218",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5a414090-003a-49d7-ac4b-6b4e6a5288bc"
        },
        "item": {
          "id": "cafde32e-ab4c-461d-b72d-682eae629d1c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "54a5fb7d-a86d-4c53-8e15-26748fa3d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b0dac-6895-43af-8f23-0c318eebae65",
        "cursor": {
          "ref": "9ef2afc7-21df-458a-8875-33fe4ffc6b95",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e7995015-abf4-4ee8-ac57-e0063a055966"
        },
        "item": {
          "id": "9c1b0dac-6895-43af-8f23-0c318eebae65",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "879232fb-45a9-4462-bc41-283cd373810b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b568f261-c72b-4e5b-908d-3bd72348a411",
        "cursor": {
          "ref": "ec1f9c3a-5986-4ef0-9196-dc81963c185a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c7927b5f-900e-4d99-8b97-d06ed1c7bee1"
        },
        "item": {
          "id": "b568f261-c72b-4e5b-908d-3bd72348a411",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acd4e384-7927-4be7-a5df-facdb07f2193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033f5259-bf84-406b-aae0-1d30c40d9424",
        "cursor": {
          "ref": "27850aa1-42dd-49c7-bcfd-4f1c87db7bc1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6167a9dc-c012-483d-8222-d0ed2a472410"
        },
        "item": {
          "id": "033f5259-bf84-406b-aae0-1d30c40d9424",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5c311fef-1349-4fa8-aa33-ba0360ca5459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ec28a9-fa50-4923-8c4f-15f1765728f0",
        "cursor": {
          "ref": "285d3bf1-72dc-4a5e-905e-bcd2e4dd0fe1",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ea6e90b6-030b-4bd5-92f9-bdd40da80b64"
        },
        "item": {
          "id": "97ec28a9-fa50-4923-8c4f-15f1765728f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d6bb3fc8-6f63-41b7-9996-cd2f523c4503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32058e26-d7ee-4eb9-b354-b5baccb35d93",
        "cursor": {
          "ref": "d5367db8-3c98-4d98-b606-819b8e0f78c9",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fccb32a2-95f7-4db9-84c7-cbf30146bb87"
        },
        "item": {
          "id": "32058e26-d7ee-4eb9-b354-b5baccb35d93",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4043d71c-4a87-4bd9-ad38-8ade765756af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1489d3-2173-4f93-8e34-8fca41a82cba",
        "cursor": {
          "ref": "4858c167-ab59-43ef-82f2-2e847a7e5284",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e5b5e5a1-8835-488f-b19f-2fe317d11864"
        },
        "item": {
          "id": "4c1489d3-2173-4f93-8e34-8fca41a82cba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a074dba5-7bde-497e-9b91-24ed4920c921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f53a89-a1da-476c-89fd-d9925645b1df",
        "cursor": {
          "ref": "9948cd0e-7289-4d30-ae37-25581cc54079",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b9aed28a-bdb5-4e57-9d3d-fe5d5e6ebab0"
        },
        "item": {
          "id": "57f53a89-a1da-476c-89fd-d9925645b1df",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "72054925-4d4c-448a-a774-feffbcd0638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1853833-c159-4ba1-93e7-ec18c6d08125",
        "cursor": {
          "ref": "772b4c87-6a8d-46ca-b937-d67be46cedb8",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "473ec91c-8b1d-4547-944d-5308be1de401"
        },
        "item": {
          "id": "e1853833-c159-4ba1-93e7-ec18c6d08125",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "317397cd-b404-408c-b28e-273eda046ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2e920d-1255-4bef-bbaa-1f16617bc3df",
        "cursor": {
          "ref": "22c9bb7e-10c6-442c-ac26-68adada1c8bb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1c01e9b6-5607-4823-9023-b68e79f296f5"
        },
        "item": {
          "id": "5d2e920d-1255-4bef-bbaa-1f16617bc3df",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4280c7a7-e259-4c34-a1a0-d1b9e7656912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b73a65d-9dda-44ad-9531-06bc1be717b0",
        "cursor": {
          "ref": "257d35b1-d06a-4e20-bccb-9ae68bb77b90",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bf18e7cc-aebf-48f5-9698-a72fc4db5e9d"
        },
        "item": {
          "id": "8b73a65d-9dda-44ad-9531-06bc1be717b0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8ad698b6-fe4d-47d5-b744-c1fa05829e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7e5796-9835-4d36-8d1c-5538038fc445",
        "cursor": {
          "ref": "59934cbd-db8b-4410-a01d-4f3572cc9aea",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "65eb20c2-b60b-4143-9956-d076351230b9"
        },
        "item": {
          "id": "2a7e5796-9835-4d36-8d1c-5538038fc445",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb82f7c7-5a0a-4639-9c12-dad4a72bd846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a3db27-d380-4310-96f5-c13330c4b874",
        "cursor": {
          "ref": "d52245fb-37e0-4dc9-98ba-c78458095bbb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5cbe4a7b-7f85-437b-9c74-e1625abad7c5"
        },
        "item": {
          "id": "e0a3db27-d380-4310-96f5-c13330c4b874",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "adc2d779-281c-4993-9ecf-80dd96079d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf571833-f0fb-4c58-a028-4ea9b2604359",
        "cursor": {
          "ref": "87bbd7ce-4af6-4f26-8ae3-292ae09e2a45",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bec4cb5b-821b-4caf-a608-b69143dbb2d5"
        },
        "item": {
          "id": "bf571833-f0fb-4c58-a028-4ea9b2604359",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "560c55be-6fc8-4872-8a48-270d4e625bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38bce38-89f2-4b9a-94c1-0c4d6ff3d2cb",
        "cursor": {
          "ref": "3304aa41-1202-411f-95f8-eb4245301a91",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "baf67187-3b69-4314-928d-855184a38337"
        },
        "item": {
          "id": "f38bce38-89f2-4b9a-94c1-0c4d6ff3d2cb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "50d91e57-27a8-4062-bcb5-c2eef828e25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70296c14-519d-4930-b262-c18db6966977",
        "cursor": {
          "ref": "3a16623e-993b-4d41-93de-0425b5ebfcb8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e6343c7b-1b94-43be-a850-054195d31425"
        },
        "item": {
          "id": "70296c14-519d-4930-b262-c18db6966977",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "80c18586-e251-4303-8ac3-70229b380ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138838dc-e1eb-466b-8cc9-3259157f5180",
        "cursor": {
          "ref": "ef901d2c-2671-4d39-9d12-196062613575",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "29b890e0-594e-429f-b116-deaddd952301"
        },
        "item": {
          "id": "138838dc-e1eb-466b-8cc9-3259157f5180",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fe432b02-e9e3-4635-a7da-4187a7f09055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d390237-f726-4ebe-ae8b-f98c3554e6cc",
        "cursor": {
          "ref": "4f79c576-569a-4871-ab2e-e63989113667",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "53f49d6f-df25-4845-8ba0-cdf9c4818c69"
        },
        "item": {
          "id": "0d390237-f726-4ebe-ae8b-f98c3554e6cc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e88ab6fe-4c8a-4df9-8581-8a1e273f5e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6445c6-8828-4dd6-b745-9f8ca8497136",
        "cursor": {
          "ref": "947cd91a-8c29-42c4-bea6-a9622945b572",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a386c65d-3665-4110-aebe-9cffdf1b460a"
        },
        "item": {
          "id": "fb6445c6-8828-4dd6-b745-9f8ca8497136",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5ab11131-bf42-4ed8-b246-d6c1030c9ff1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faed8b73-56ea-4a25-bb19-45fe36b76605",
        "cursor": {
          "ref": "e96e6594-fb47-43fb-8220-86c29c6a29fb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac27df71-5b5e-42c8-8c0a-75085970ad5f"
        },
        "item": {
          "id": "faed8b73-56ea-4a25-bb19-45fe36b76605",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "17305c6b-ae44-4c36-a844-17e6580dd962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7d5bdfc3-5d64-4d3b-abbd-293d6bcc06f9",
        "cursor": {
          "ref": "30658c78-d7e8-4264-bd8f-56c88892bbe5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "34d444a2-6409-469a-8411-35ace4fb76c2"
        },
        "item": {
          "id": "7d5bdfc3-5d64-4d3b-abbd-293d6bcc06f9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "78135a2b-c9e6-4b2b-ba95-b6cad5bffeea",
          "status": "Created",
          "code": 201,
          "responseTime": 11664,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06a0f32-5364-44e5-a404-e41c443058ef",
        "cursor": {
          "ref": "13fac633-c548-40c3-9732-a4d7405d0439",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7162a5c5-d0d6-4a87-b68e-ef8b91a7895f"
        },
        "item": {
          "id": "e06a0f32-5364-44e5-a404-e41c443058ef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "718baf83-641a-4ec5-a0ef-ac48280ae87a",
          "status": "Created",
          "code": 201,
          "responseTime": 11469,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04144330-8367-4742-9f00-64f36a41bf95",
        "cursor": {
          "ref": "e77bdb6d-f60c-4885-9625-9abb007e35d9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bedb5621-71b3-4d83-b551-c73caf152b9e"
        },
        "item": {
          "id": "04144330-8367-4742-9f00-64f36a41bf95",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b078d92c-e7f9-476c-9374-c47a1d771885",
          "status": "Created",
          "code": 201,
          "responseTime": 10957,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907f108-c6cd-4764-8f8a-12e40de20ef1",
        "cursor": {
          "ref": "b08c9b6d-546c-4fc8-8231-25df5666e70e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8432f113-d7b8-432c-8966-ca219ebd2148"
        },
        "item": {
          "id": "d907f108-c6cd-4764-8f8a-12e40de20ef1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "04195520-417a-4fea-8dee-8f9bb2446ffa",
          "status": "Created",
          "code": 201,
          "responseTime": 11002,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9312e38b-12fc-4de4-9d33-22e27e3d7f01",
        "cursor": {
          "ref": "99cc8887-1bdf-4c1e-a26e-ac99ba539a09",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7972f7b8-bd0c-455d-8322-8c8d1ed19885"
        },
        "item": {
          "id": "9312e38b-12fc-4de4-9d33-22e27e3d7f01",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "16cc1dfa-20c6-4db5-8edf-4031557d3799",
          "status": "Created",
          "code": 201,
          "responseTime": 18048,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07a61c2-6178-4855-a133-198c5b54ebe9",
        "cursor": {
          "ref": "1b441d8e-65c6-4c30-bd21-8e4d9669817c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6e56a047-1099-46b9-ba67-a0c8eb8bf693"
        },
        "item": {
          "id": "f07a61c2-6178-4855-a133-198c5b54ebe9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "485e2195-1866-4954-a111-ba9774d68009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7b6db229-38d0-449f-9b87-62c81932cdfe",
        "cursor": {
          "ref": "5d9f98cb-17d0-4d55-a2f2-77bbf0b862ba",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "24c629ec-c44f-4a54-9bba-ef342e347c3d"
        },
        "item": {
          "id": "7b6db229-38d0-449f-9b87-62c81932cdfe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b3c12286-ae2b-443f-9b02-72886ed33d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42ac71e-611b-435a-8268-9b4523d35652",
        "cursor": {
          "ref": "71883f67-c55b-4335-ae57-c2a6ee013477",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "865b43cd-902d-45b7-8ffd-2bc126058697"
        },
        "item": {
          "id": "c42ac71e-611b-435a-8268-9b4523d35652",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83c98e10-0650-4e12-b962-eaf79afb2dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548e1f1e-78f3-469f-b35e-d997c2a320b8",
        "cursor": {
          "ref": "c413ca6a-7eb4-4be3-a294-d18ee2a2a5c7",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dc066707-918f-4e9c-a211-5267fb8f4831"
        },
        "item": {
          "id": "548e1f1e-78f3-469f-b35e-d997c2a320b8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9cd92ae5-7a08-4e03-af28-c6e3cafa0be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6f2ced-3359-4478-a391-5d2d919b896b",
        "cursor": {
          "ref": "94800d73-c7c1-4ce4-a7fd-1b1187024208",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "18207eff-04c6-4afa-8cc9-130d08ce877c"
        },
        "item": {
          "id": "4e6f2ced-3359-4478-a391-5d2d919b896b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ebc8dcb-99db-4a0f-8236-5396ccbfe9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590667ae-e148-4657-a29e-87346f10c77a",
        "cursor": {
          "ref": "3cd0003c-59c8-4036-83b8-103f0797942a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6f308107-8022-43de-ad42-31c7e93adca5"
        },
        "item": {
          "id": "590667ae-e148-4657-a29e-87346f10c77a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "20479d09-7b43-4047-9b1b-c1f901a4c08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2868d727-1c68-499d-8383-96d10e8217c1",
        "cursor": {
          "ref": "1aea7c40-a251-4ae9-bf2b-2884e34a933b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a126e84f-e456-48d0-8f74-5a90fec39f98"
        },
        "item": {
          "id": "2868d727-1c68-499d-8383-96d10e8217c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e11deecf-34a9-4f11-bd92-d4b6f08eb4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b04be5-e8b7-4d06-9e8c-f987fc492fd9",
        "cursor": {
          "ref": "c3439453-afc3-4dfc-952c-7e44f7829c76",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c0c7ea9-5ace-40fc-8b13-2e6e1309fb47"
        },
        "item": {
          "id": "20b04be5-e8b7-4d06-9e8c-f987fc492fd9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6db8c5e9-0305-4826-826e-695f5eeb4153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba084cbc-c13a-48b7-8c78-dd56e310d0f8",
        "cursor": {
          "ref": "cc564483-8df4-440b-b4b6-c50e23885229",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "de8a9766-46b3-41be-927f-2e77c58b6110"
        },
        "item": {
          "id": "ba084cbc-c13a-48b7-8c78-dd56e310d0f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "79c66226-e143-4dc7-a1d1-b1e45456824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407106a1-5b3c-4d53-ae1d-387f98d3fe21",
        "cursor": {
          "ref": "e10d8e35-39c5-474e-b1d0-e577a17c14b9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2900fc99-946c-4644-b133-5fd7f943b4f6"
        },
        "item": {
          "id": "407106a1-5b3c-4d53-ae1d-387f98d3fe21",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a8e3ede0-9e7f-4bfc-8004-21860b2ac125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a455a2-9f5b-4f99-9c26-4225e0cc8bf6",
        "cursor": {
          "ref": "65fcec40-bf37-4e1c-8006-f78ddebbb765",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8ccf94f4-aae5-4c59-b2b3-c7cfc29225eb"
        },
        "item": {
          "id": "c9a455a2-9f5b-4f99-9c26-4225e0cc8bf6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3bc07a6d-5f96-4ee2-a610-930ba62c355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4c1f8-cd85-4373-b024-aa7af185d3c5",
        "cursor": {
          "ref": "806b2a07-b22c-47a6-98d9-621e3c1e9998",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "101f2e27-a433-4c66-bd14-bcace5d2d874"
        },
        "item": {
          "id": "a3e4c1f8-cd85-4373-b024-aa7af185d3c5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5b8973f6-9e30-4a44-a388-09f23db063c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccfb9f1-1c14-401d-8f82-2bf3e7cf0965",
        "cursor": {
          "ref": "67867e65-dd53-4a21-8e05-28dcac7a31cb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d45f41af-4575-4809-a8b1-8963daaf00f4"
        },
        "item": {
          "id": "0ccfb9f1-1c14-401d-8f82-2bf3e7cf0965",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "beb557b0-06dc-458f-99a3-2c0e165d7619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa70d54-fdbc-44b1-982e-dae635dc869b",
        "cursor": {
          "ref": "2a0bbcc8-1aeb-4a76-a6a8-1d8188490f32",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "21ca28d9-eccc-4523-8909-cc0d2c4d3043"
        },
        "item": {
          "id": "4aa70d54-fdbc-44b1-982e-dae635dc869b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cf431b29-11c8-4d02-8ae9-4abd685d015e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db4790a-b9e7-408e-b6f6-cdd338645f29",
        "cursor": {
          "ref": "65a717f2-e709-4c7a-b628-cc2f4fd86d6d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9590a9ea-ef4e-476e-b69f-8ba0634cb056"
        },
        "item": {
          "id": "5db4790a-b9e7-408e-b6f6-cdd338645f29",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e9bdd6e4-9517-4e83-a5d1-a36e8bc33193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f57f599-dbcc-486c-9b28-62ec9703320a",
        "cursor": {
          "ref": "01d36ac9-439e-4907-948a-7d5a3c4fd287",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "84590094-5a8b-40b2-8da2-d565b4c5e74c"
        },
        "item": {
          "id": "6f57f599-dbcc-486c-9b28-62ec9703320a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9baf0446-a7d4-4e56-96c4-a72bf5f462e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613ed7f5-564c-4575-9060-c3f61e9f15db",
        "cursor": {
          "ref": "aea77ab1-8924-459d-9a87-bec855930edd",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d8642e0-6562-42e2-b3ec-278e2f7129f8"
        },
        "item": {
          "id": "613ed7f5-564c-4575-9060-c3f61e9f15db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bdbf9f86-9910-42cc-bf59-b1975588feec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792768f3-5249-4b90-82ce-b92b3e953dca",
        "cursor": {
          "ref": "5273135e-65e3-46a7-98b0-8e56677e037e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0d48150b-9e7f-43ea-ab97-4fc27c39befb"
        },
        "item": {
          "id": "792768f3-5249-4b90-82ce-b92b3e953dca",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "25fcdc65-c86e-41d4-ab66-6268c1d6978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53e11f5-1a81-4303-9d1d-794f40ab97f1",
        "cursor": {
          "ref": "518c0f8b-42d9-4da8-865f-d8c2541deefd",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c9850e5f-7b08-41ea-8603-cb028f24a873"
        },
        "item": {
          "id": "d53e11f5-1a81-4303-9d1d-794f40ab97f1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "16293528-6c3c-4b0f-a7b8-ec07fb267302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb863e92-05fb-4e1f-87a0-6037b7d8bb03",
        "cursor": {
          "ref": "b58a76ee-a363-4ee6-8daa-249abc246e64",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "617690fc-db4b-4354-bb5c-83e5b4d13591"
        },
        "item": {
          "id": "fb863e92-05fb-4e1f-87a0-6037b7d8bb03",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f298490c-81ce-4e6a-9bf4-4e70df92aa85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b993871-9356-43d7-9608-bd6f0575dc41",
        "cursor": {
          "ref": "6566ca68-1898-4c97-9d76-f9bcc250d912",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "187c99b2-703c-4e32-85b8-7d377005312e"
        },
        "item": {
          "id": "1b993871-9356-43d7-9608-bd6f0575dc41",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5062a3a3-c1d7-4ca3-b9fe-ad4209c31c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c72a34-7af6-4d64-9ae3-1a94b4f86a54",
        "cursor": {
          "ref": "c6f90b8a-daf8-4899-aeaa-53aebb9e1378",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "715b316a-233f-4d01-b82c-cbbd60efbdec"
        },
        "item": {
          "id": "f5c72a34-7af6-4d64-9ae3-1a94b4f86a54",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "83f5056d-7908-465d-8ed4-d233f66eb845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc5322-e4fb-4ed7-a9fc-27b1bedf945a",
        "cursor": {
          "ref": "b2e6e230-2165-4786-8df8-acd47a241680",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "df69a00f-6b82-48a5-b24b-ac12dabc9b8d"
        },
        "item": {
          "id": "a3bc5322-e4fb-4ed7-a9fc-27b1bedf945a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0e2cba4f-829a-456f-b4f1-3a0a9f73d021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fdb5d9-9d68-430b-b496-b9fa505c68d3",
        "cursor": {
          "ref": "4cc2bcc9-da0e-462b-acc6-79fe59ffd47d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bd720a1f-4454-4046-9353-8330d0c7de8b"
        },
        "item": {
          "id": "06fdb5d9-9d68-430b-b496-b9fa505c68d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "25463fed-c5c6-41e6-b830-1000031a8016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9636e6-fc4f-40e6-b42d-bff6d3b0a9c9",
        "cursor": {
          "ref": "77c0ab7a-269f-4dc6-a764-bfd8e65643de",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03cfd009-2330-47ed-a82b-a429e6b607cb"
        },
        "item": {
          "id": "4c9636e6-fc4f-40e6-b42d-bff6d3b0a9c9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cc6f6119-7d37-4ccb-8f04-5be36949c38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5dcb99-2cd0-46b5-aa83-5451ef8cf7ae",
        "cursor": {
          "ref": "e10b8e62-a56e-42c0-a35c-0b1257d0d81b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a35f35ad-c32a-4c25-9e4c-30ef15d98d36"
        },
        "item": {
          "id": "ea5dcb99-2cd0-46b5-aa83-5451ef8cf7ae",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "533327ec-a6c9-4191-8aab-7b931e48d8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8b7112-e2a7-4482-b12a-e2c3ef2602d7",
        "cursor": {
          "ref": "aca20d3c-ee0f-4123-a57c-02ab644c50eb",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "045201fb-3660-4b4d-8eda-845a9fa131b6"
        },
        "item": {
          "id": "4b8b7112-e2a7-4482-b12a-e2c3ef2602d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d46e0319-bf82-4f0e-ae51-f1a5ccf383f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7aa3d2-ad14-4a40-a1ef-289f2b931b73",
        "cursor": {
          "ref": "24b84e9e-dd2f-4618-a6c8-89b41d98f550",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "655e3fb9-2d59-41a0-9b41-14b6b09d6074"
        },
        "item": {
          "id": "9b7aa3d2-ad14-4a40-a1ef-289f2b931b73",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f49d0a5-6ede-4750-932d-651857dc5bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbbfd33-1491-497e-a76b-255a48de1b08",
        "cursor": {
          "ref": "9330ea82-879b-4d7f-b07c-6ad428ce2046",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3fd1900c-01e2-4a1a-9a51-03065cb24564"
        },
        "item": {
          "id": "cdbbfd33-1491-497e-a76b-255a48de1b08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3cf32c19-b729-43ae-9019-44533ed9aadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8a35d6-d20b-4c77-aaca-8b542e23f323",
        "cursor": {
          "ref": "c12af902-f6d7-4acc-b4e6-7a700ed2eaea",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d3d801ff-33e6-4290-8c17-d0be15081960"
        },
        "item": {
          "id": "ea8a35d6-d20b-4c77-aaca-8b542e23f323",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6e9e975d-f9f0-49b3-a3af-6d2f3fadd9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e0332a-2f9f-4712-8bf8-c3750f7b071b",
        "cursor": {
          "ref": "3562d1ea-c48b-41f0-a627-81949d8d04d3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d24381d0-5efb-43b6-a9b5-ec090c66eac7"
        },
        "item": {
          "id": "36e0332a-2f9f-4712-8bf8-c3750f7b071b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d0a03ad3-3e22-46e6-b146-bddeb0d1516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1aaf283-7b4b-4e58-b09b-9ac9a6a9e8b4",
        "cursor": {
          "ref": "f83e9665-d38c-4496-935d-f8340caf5d88",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "22a39122-b8db-4667-8e0f-753610315f3d"
        },
        "item": {
          "id": "c1aaf283-7b4b-4e58-b09b-9ac9a6a9e8b4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9b41036e-6c6d-4e41-aef3-e5530e16d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebdc1ff-2bb1-4f2b-aa22-49f5dc9146f4",
        "cursor": {
          "ref": "b4a36581-2a27-4c48-84ae-0dee74111b40",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cfbff328-2a79-475b-a4e2-d92bc94231ee"
        },
        "item": {
          "id": "5ebdc1ff-2bb1-4f2b-aa22-49f5dc9146f4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d3594ae7-50f4-4f35-90f5-205e73011760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9befaa40-7b2e-4106-9bd2-35bfcf47caec",
        "cursor": {
          "ref": "4e4ac313-b0a6-4fbe-a592-3af34fd4d48b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "098a52fc-7dd5-4795-ac04-1dcda9295597"
        },
        "item": {
          "id": "9befaa40-7b2e-4106-9bd2-35bfcf47caec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ed53acd-83e5-4bad-ac2b-f4e841188f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9da234-8535-4873-8185-cad1957a2884",
        "cursor": {
          "ref": "c600fdc2-a5e8-4409-af60-f57b4ae6556f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7e3d1478-d6d8-44f4-8d8f-29c198111bd7"
        },
        "item": {
          "id": "8e9da234-8535-4873-8185-cad1957a2884",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ddd2af92-76b3-47ed-af20-59fc6dd08999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ce9b8-71d3-4a2d-9ac0-4a899fac048c",
        "cursor": {
          "ref": "c7c466b3-0e0a-4b54-b20b-62faf83e7bab",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e94d0d9a-57e2-4058-ad73-f2703d4565e3"
        },
        "item": {
          "id": "e08ce9b8-71d3-4a2d-9ac0-4a899fac048c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "294745c9-239c-485d-88a1-20c2e39fa546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b465bf8-5fd6-490f-be98-0b986074fd16",
        "cursor": {
          "ref": "41bb6436-20b7-4cf8-9623-9eee37279d36",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "05c4fa44-5e1f-4a8d-8852-c5693f015388"
        },
        "item": {
          "id": "9b465bf8-5fd6-490f-be98-0b986074fd16",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e7404dbb-bcb0-432f-8a29-1997ea3bc01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b4339d-437f-4c6a-b072-083d600faac3",
        "cursor": {
          "ref": "f4b91af1-c655-4947-b47d-028d242a0278",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a2d5a23a-115c-4e1e-8069-c699f81e9e40"
        },
        "item": {
          "id": "90b4339d-437f-4c6a-b072-083d600faac3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "95dab3a1-82bf-4a3a-b0fb-3ac455a32b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635a98d2-4d05-4727-818a-2ce6e17c648a",
        "cursor": {
          "ref": "f414138d-6537-4867-8ede-0720c6be09e2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "84e8f05e-f099-4a5b-875c-1413386ceb5e"
        },
        "item": {
          "id": "635a98d2-4d05-4727-818a-2ce6e17c648a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "08691d02-3950-49f0-9c4e-d95ca5695c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c814823-67d5-4912-9e6b-e1593c27b6a8",
        "cursor": {
          "ref": "af0c98d0-350a-419f-bb46-53264072b931",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "44250117-a5cd-43dd-963f-2e4ff04f4c1c"
        },
        "item": {
          "id": "6c814823-67d5-4912-9e6b-e1593c27b6a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f9c14e0-214d-400a-9d00-0cbbf87a2aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68cfdbe-83d7-4548-9858-348e9aa15702",
        "cursor": {
          "ref": "08b2ffe1-5f08-481a-8323-5becabcddfa7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "df30a6b1-9db7-4655-b01c-57219d0c663a"
        },
        "item": {
          "id": "e68cfdbe-83d7-4548-9858-348e9aa15702",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "61bb9523-cd33-4b97-ad32-fee726e2fb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7bd8b0-7f70-4d85-87f5-aa9ae81477df",
        "cursor": {
          "ref": "809b4ade-7fee-4e2a-9ffe-27368ec120d3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "966245ed-a038-452e-a03f-d5f2272b9f19"
        },
        "item": {
          "id": "3b7bd8b0-7f70-4d85-87f5-aa9ae81477df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eee121b1-b7ac-4856-a9fc-37ebfd34966b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabbb3a4-1860-4626-a3d6-d1d307eefb95",
        "cursor": {
          "ref": "41cd1504-0af9-4bca-a57f-69c5811f1ac4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "75bdba31-31d2-44d2-803c-0e43d9e6d622"
        },
        "item": {
          "id": "dabbb3a4-1860-4626-a3d6-d1d307eefb95",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "389db697-f1bd-4067-a7c3-1d4991469b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22418a-a28a-43cc-ae3b-1e06a8ab9095",
        "cursor": {
          "ref": "53043ae3-afe4-4046-86e4-7c8fe35bbd3e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d8df07d-d756-4058-b56c-e36ee286eab4"
        },
        "item": {
          "id": "1e22418a-a28a-43cc-ae3b-1e06a8ab9095",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bd1d2cd-7494-4978-97eb-e464061b4bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e1b556-1e45-4235-9a1a-ee348bd9ff69",
        "cursor": {
          "ref": "f661f304-3e4b-417a-ad3f-352a12b7b3ca",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dcd02058-9d0a-4cc0-bca2-f9c275672624"
        },
        "item": {
          "id": "e6e1b556-1e45-4235-9a1a-ee348bd9ff69",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7da843d0-4f4b-433d-b853-ac6512ccce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cc21bf-c9bc-41fd-9b35-219fbdbf408e",
        "cursor": {
          "ref": "785dcdc9-729f-496c-b53c-6d9d8546de2e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a7c12d65-ed22-41b0-ab18-05db102e4cf0"
        },
        "item": {
          "id": "a6cc21bf-c9bc-41fd-9b35-219fbdbf408e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e8b35274-a9c9-47a3-8e17-fa0d5173a729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66543b47-82d3-45d7-bfe2-7177d874b937",
        "cursor": {
          "ref": "85325089-5b81-411d-bd4b-2d5a3dff8804",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3c87c5a4-a75e-4685-9a20-90747b41b005"
        },
        "item": {
          "id": "66543b47-82d3-45d7-bfe2-7177d874b937",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8da52366-1d57-4921-ad1e-d5901915d804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3198af-9618-4a0e-8d9a-78021d859d0a",
        "cursor": {
          "ref": "6293d6cf-bc7a-4d31-b7bb-453058b39516",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3db7bd3e-6cda-4f7e-a751-ff3a6cf1e7b5"
        },
        "item": {
          "id": "5b3198af-9618-4a0e-8d9a-78021d859d0a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9e65464e-d8bb-4ad6-bc01-769b27e2428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf3ff50-996a-46a9-bda2-1b43da426230",
        "cursor": {
          "ref": "6ba44b67-c9d9-4c4f-8e4b-9e34231a2603",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2fb40de9-d269-421a-a315-84e2d21042b2"
        },
        "item": {
          "id": "4bf3ff50-996a-46a9-bda2-1b43da426230",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "09bffb96-8108-4f9e-acb0-f6811bd00dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b01d1d8-802d-47a7-94ac-f35eebd116ec",
        "cursor": {
          "ref": "47d38b41-cd7e-41c8-9807-54caff885628",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e25a0501-307e-417c-a4a9-280cf0036c97"
        },
        "item": {
          "id": "3b01d1d8-802d-47a7-94ac-f35eebd116ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d57b44be-d4c3-4c8b-892b-c06060af16e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb69c35f-5e0d-42df-aa9b-39e5bd59943a",
        "cursor": {
          "ref": "e63d7e62-3bb5-41b4-9157-b006dee45dc1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "27e38a00-3958-4768-847c-a4150e9eaa26"
        },
        "item": {
          "id": "eb69c35f-5e0d-42df-aa9b-39e5bd59943a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "039ce593-2dd4-4771-8c01-694cf859691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8231310-d8a9-4be0-b203-3515611961e9",
        "cursor": {
          "ref": "254319db-6cc9-4b11-b8f8-537e62e5386c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b7680f45-85d6-480f-ad71-f2d9eb67f1c1"
        },
        "item": {
          "id": "b8231310-d8a9-4be0-b203-3515611961e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "af4a7e36-afab-439e-be16-96ed78029d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c119ab-f107-4a8c-9c8e-edbc9266083b",
        "cursor": {
          "ref": "2052eb31-a64c-44cf-9fa2-3901535ddc44",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7966b1c9-2f39-404e-b937-f0454d261778"
        },
        "item": {
          "id": "b3c119ab-f107-4a8c-9c8e-edbc9266083b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "36b10510-b458-4116-8b45-fcf99af9c66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97afa45f-e3eb-4649-9a25-9dfff869acc0",
        "cursor": {
          "ref": "2c6f8701-9f3e-4e34-b432-f3dc82bb46c8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9cacf8fe-e988-4270-92b7-ef089fa8cd7e"
        },
        "item": {
          "id": "97afa45f-e3eb-4649-9a25-9dfff869acc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "61bd04fb-9fc3-4fcf-913d-539c607bfba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb0d7ba-9e0d-462f-a77a-45efbf672ed1",
        "cursor": {
          "ref": "81d4c320-ad40-4082-848d-e4ca4f1903fa",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "79ab05de-d060-4987-a2d7-56534a2e3f96"
        },
        "item": {
          "id": "bdb0d7ba-9e0d-462f-a77a-45efbf672ed1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c5db803d-faf9-40d5-ba39-28940930dfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc8764-0d82-4ec4-892d-1eb2b3d4be99",
        "cursor": {
          "ref": "096eb62f-c0b7-4c37-b304-b95cb4c12264",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d28a20f0-476b-4ea6-910b-404d6855a0f5"
        },
        "item": {
          "id": "b8fc8764-0d82-4ec4-892d-1eb2b3d4be99",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5ba168ef-ca2c-4cf0-993a-e931ad69e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aede2144-c4e0-4cd0-a200-9f858a396f04",
        "cursor": {
          "ref": "f9276ca1-1f46-4131-8789-02fbb73ca0cf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3bd93d7c-eb6f-4a08-bfdf-ad7f2fbe6da9"
        },
        "item": {
          "id": "aede2144-c4e0-4cd0-a200-9f858a396f04",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "491c45e4-2faa-47be-a1c4-61aa818aaddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47539d21-2466-4f94-b76e-5c7198b0fb2d",
        "cursor": {
          "ref": "6b2d8a0e-686f-4182-99c1-57a5fd8b4214",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bdeadc03-5bfb-4716-bf50-cfeef8e0ee2f"
        },
        "item": {
          "id": "47539d21-2466-4f94-b76e-5c7198b0fb2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e354ec0b-951e-4591-856b-4076a8884b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af028abf-4047-434e-807c-e28a4093b1da",
        "cursor": {
          "ref": "21b5f894-316b-4e32-9e15-3c27676fa893",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "db3ecdea-8221-4262-b177-4c7f8777c0e9"
        },
        "item": {
          "id": "af028abf-4047-434e-807c-e28a4093b1da",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c2b3ec3-b25f-4d7d-a989-15ccd7953774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b19eb-7f50-4ea0-91ed-ebddc5daa291",
        "cursor": {
          "ref": "a4972a80-6c69-44f3-b934-3756a5096b49",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7f0fc65c-9823-46ff-a498-46af4caa4a59"
        },
        "item": {
          "id": "eb8b19eb-7f50-4ea0-91ed-ebddc5daa291",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a90c90e6-e888-42fc-8b0b-5e39a6ce7302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba864552-eb75-408f-b725-7f176582392c",
        "cursor": {
          "ref": "eb64910d-7cf8-4185-86e2-69dd37cf78fc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "70e4d3a2-90c7-49d7-ad1f-3c376da72364"
        },
        "item": {
          "id": "ba864552-eb75-408f-b725-7f176582392c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "95f773aa-8300-4ee2-82da-92dfdb667ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db3cc6d-e512-4be7-a4e5-dda00e7e6ce0",
        "cursor": {
          "ref": "f7e0e154-dea4-423a-93aa-b8eb9a858468",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "21ed0a67-b557-4b58-864e-f8b709acdab4"
        },
        "item": {
          "id": "4db3cc6d-e512-4be7-a4e5-dda00e7e6ce0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5719ecee-a860-4bfe-8c26-c921aad7cd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5e41ef-7d7d-439b-b5db-199fb59a07c5",
        "cursor": {
          "ref": "bdf77a30-3029-4e2a-94b7-0aa5f58b6713",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f275bc30-6e8a-47e7-b381-4d7c4785a416"
        },
        "item": {
          "id": "bd5e41ef-7d7d-439b-b5db-199fb59a07c5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6786b1a2-2d55-4834-9b41-37c4833a0baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d9d8a7-9281-44db-8d1b-67616ce445e1",
        "cursor": {
          "ref": "7c22e052-3818-494c-8207-33e5fb6448c5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3305841-e4db-45c9-a922-da6c15f10d47"
        },
        "item": {
          "id": "e0d9d8a7-9281-44db-8d1b-67616ce445e1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "87cf9840-7eb8-44b0-a249-3f55e781f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d181f1-324a-47ae-8231-00b84fe79c00",
        "cursor": {
          "ref": "b261ef79-12c4-4ef1-9e3f-2f9fffcb71da",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9e3b2317-d2b7-465b-a3ae-678dce721104"
        },
        "item": {
          "id": "25d181f1-324a-47ae-8231-00b84fe79c00",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "858fff06-ae29-4e45-82f0-d6f24fc21928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac383e6-8094-41b0-84ad-d5b3d4bb8bb9",
        "cursor": {
          "ref": "7ccdc8bf-b85d-4339-9645-75ca53362860",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7cf05c0c-6790-4dfb-8312-59046cef0893"
        },
        "item": {
          "id": "1ac383e6-8094-41b0-84ad-d5b3d4bb8bb9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "775b7eac-26ac-4c55-8a8b-84e3f8f7a1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b2eac9-e791-44b7-926a-ebfc40149365",
        "cursor": {
          "ref": "3e80bc83-2bb6-4993-bc78-370fe96de3b0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "34c7cf0d-5247-4b21-b9a3-3b683a0e7221"
        },
        "item": {
          "id": "37b2eac9-e791-44b7-926a-ebfc40149365",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "dc359b22-b349-438a-8841-0e2ca35a4f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b70d82-7963-4bdd-8308-de5d445083bd",
        "cursor": {
          "ref": "0726bc43-f611-4f65-b168-33c784a2c1e8",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bcd6514f-cc1a-4423-8251-fa4627dfc746"
        },
        "item": {
          "id": "a4b70d82-7963-4bdd-8308-de5d445083bd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ecba180a-bf1c-430a-a745-f26227b27cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac560b5-858f-41fe-a6a6-aa376d7f7519",
        "cursor": {
          "ref": "9c60e2b4-b9d7-4c4c-96f4-39edf7989fd2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7724f86d-21e3-4e5a-a327-9b365a8af714"
        },
        "item": {
          "id": "6ac560b5-858f-41fe-a6a6-aa376d7f7519",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3c566998-ef3e-4273-96de-1023e3dc7745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f676ce3-8abd-4288-8800-205e8350a651",
        "cursor": {
          "ref": "ff955d0d-1e54-4165-8576-74b19891c47b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11334812-46ff-4282-b50f-9d532a804dc6"
        },
        "item": {
          "id": "5f676ce3-8abd-4288-8800-205e8350a651",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "09cc3b89-fc49-427f-9878-e724ceb7de3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603aa944-607d-4145-9fe5-c1ddd9640302",
        "cursor": {
          "ref": "2190e873-50d8-40eb-b6dd-e8e5bc61a658",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0b02ceb3-2cda-44a3-bec0-a4b06b7c0647"
        },
        "item": {
          "id": "603aa944-607d-4145-9fe5-c1ddd9640302",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cb89b1d6-eae0-41ba-b8af-95bbc6a63c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f55b6a0-f168-4a74-a693-e3c83a882d23",
        "cursor": {
          "ref": "4ffc0d43-11db-4c42-b191-5e3e76d8cd71",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2ce3ce51-282b-4da2-b9d8-d952cacf31a0"
        },
        "item": {
          "id": "5f55b6a0-f168-4a74-a693-e3c83a882d23",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5873d6e3-29dd-48ef-af14-d127210bc1f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bb0bbf-d719-4e0d-9c20-359fc262f357",
        "cursor": {
          "ref": "295dbce4-be65-4a7a-abca-786c1261ea05",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3fd27032-a5b7-48ad-b23a-758ccaaf2701"
        },
        "item": {
          "id": "48bb0bbf-d719-4e0d-9c20-359fc262f357",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64cddb7b-3d2e-402f-807a-c6bca22a962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1fd3ab-0787-49e6-bf57-3259034f7ed5",
        "cursor": {
          "ref": "3e4995bf-917e-4256-95a6-75ff05c34772",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7943f059-908c-4597-97c2-175a53d504d0"
        },
        "item": {
          "id": "cf1fd3ab-0787-49e6-bf57-3259034f7ed5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5469b55a-4489-4d1d-ba81-5a2be1fe3b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475ec19a-6b84-4e19-a570-d722bc4d385e",
        "cursor": {
          "ref": "dbed1aef-6d42-4e13-a9a8-0139c5ffd6f4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df2a9afe-4651-4e58-b135-081832777302"
        },
        "item": {
          "id": "475ec19a-6b84-4e19-a570-d722bc4d385e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "568082a2-b306-41a6-a63b-9c66958b3f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b284f4-172b-4bd7-9699-98c159326bac",
        "cursor": {
          "ref": "3b305aac-3bbc-4ce2-9702-6095a3bb50e3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "75910e09-97e4-472d-bccd-eeeae9688033"
        },
        "item": {
          "id": "00b284f4-172b-4bd7-9699-98c159326bac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "443aebc2-59af-4b56-813e-f50725c3e337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770bbf77-c59b-4ada-943f-ec07461f7b8d",
        "cursor": {
          "ref": "918ebb4f-7bae-4f3a-9088-4a71a3fce7be",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7da0011-3dce-4b7c-8a9f-3f2d51e713f1"
        },
        "item": {
          "id": "770bbf77-c59b-4ada-943f-ec07461f7b8d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6536fec9-6417-4533-9bcd-e6737a50f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8717586b-aa8e-4c0e-b401-bb9b5d1c9e28",
        "cursor": {
          "ref": "92654de8-c3fd-42ae-8666-23b678fa2376",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d400751b-fa8c-4715-bba1-72896635c416"
        },
        "item": {
          "id": "8717586b-aa8e-4c0e-b401-bb9b5d1c9e28",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8fedd780-5627-4736-bf4f-6bbeb8593e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc8f7e5-e650-4cb8-9287-01ecce948fbe",
        "cursor": {
          "ref": "0c18e846-20d3-42b7-a149-afdd9af8f8d8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d9e3b617-ac79-40db-ab21-b1b46b7c7ce9"
        },
        "item": {
          "id": "6dc8f7e5-e650-4cb8-9287-01ecce948fbe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e0db6c19-266d-4a5e-978f-d1804e40ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beac2f6c-57af-49f2-bb00-188d5156a881",
        "cursor": {
          "ref": "351f2d2a-bd7a-422b-814b-cdd7c2c86a54",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f6568fcc-c005-4067-9821-d95cafe309fc"
        },
        "item": {
          "id": "beac2f6c-57af-49f2-bb00-188d5156a881",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a0b2cd7a-9cde-4781-b6a2-f7b1b9e22d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddb4e47-9177-48c5-8a15-398a9156d429",
        "cursor": {
          "ref": "33d0388e-8502-44fa-8aa4-e559b8c97201",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b753f43-48ff-4b67-b197-89dc593c2035"
        },
        "item": {
          "id": "7ddb4e47-9177-48c5-8a15-398a9156d429",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fa5833e2-5ba6-42b7-bcda-d8b1b9b05d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d23d1b-bb24-45cb-a3c0-705cb0be2175",
        "cursor": {
          "ref": "4d21be7d-a123-429e-b5af-7bbecd4f86ac",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a54c41d6-0721-4e03-9da2-2ad750879aa9"
        },
        "item": {
          "id": "a2d23d1b-bb24-45cb-a3c0-705cb0be2175",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "363f4731-0b50-4836-ad54-974b2308a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720e3b7b-58e6-4843-9295-7f201bf96e21",
        "cursor": {
          "ref": "f10d996a-6c00-43d0-8870-447edda96c67",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bccef91f-3462-48d3-b194-760c731d89b5"
        },
        "item": {
          "id": "720e3b7b-58e6-4843-9295-7f201bf96e21",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9362a037-5dea-4e6b-b20c-bb5b62c53c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c704b323-c471-4650-bd2b-43239ebecfac",
        "cursor": {
          "ref": "c54023d2-9ca0-49d3-bc4e-8f9930d903e4",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e1c776ed-166f-4439-bff3-f4ab1a60ae7b"
        },
        "item": {
          "id": "c704b323-c471-4650-bd2b-43239ebecfac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "589bfee2-304a-46c7-aabd-322d1cef14e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eefd3a7-418c-4ecb-b816-6ef794ee4696",
        "cursor": {
          "ref": "83860337-b2e9-4749-88d9-61858fd5127c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c79a3c72-903c-4580-b4f0-7045a0806ec7"
        },
        "item": {
          "id": "6eefd3a7-418c-4ecb-b816-6ef794ee4696",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4ce3fa96-3ff3-4687-a3eb-1f529cb212de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fd2ff5-73a8-4570-a049-66e01b3ac386",
        "cursor": {
          "ref": "a15cefc9-3dcd-48c2-b2f2-7c1756cc7344",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f8868d80-cd3a-467d-aa6d-5c7fdb6eaeae"
        },
        "item": {
          "id": "e1fd2ff5-73a8-4570-a049-66e01b3ac386",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f071398b-74e3-4d73-b52b-afd1b69d7527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79c5768-8926-4a9f-8f3b-a84e2d4dcd71",
        "cursor": {
          "ref": "2de5a362-6e89-4156-b402-6d89b7fb30dd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cfb7d11a-a7a1-4c62-be0b-bc9280b33653"
        },
        "item": {
          "id": "b79c5768-8926-4a9f-8f3b-a84e2d4dcd71",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6b6faf99-66b9-4496-8314-1f7aabdfa448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf3eda6-349d-4206-a620-cb1e02c88462",
        "cursor": {
          "ref": "12597f63-602e-4209-8090-500e124139af",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "988beb46-f64c-4485-a71b-c2d5f4406c03"
        },
        "item": {
          "id": "fcf3eda6-349d-4206-a620-cb1e02c88462",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d12a482e-c884-436e-b774-58d3bc4aaeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8e37f-3eb0-49f3-9011-df9c872300f4",
        "cursor": {
          "ref": "3f94211f-2ef7-4fc7-a644-d52e3b7a4b14",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e68b241b-c1e2-46cd-9da0-b4fc4a17e91f"
        },
        "item": {
          "id": "c1f8e37f-3eb0-49f3-9011-df9c872300f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "258045eb-7380-4aef-809a-697e8eca66bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8159c093-add9-418c-9634-271293cb5e62",
        "cursor": {
          "ref": "1c252586-9bad-4614-8939-9efd8e5ffe3a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e290a220-1a59-457f-8d16-a7d4579e8983"
        },
        "item": {
          "id": "8159c093-add9-418c-9634-271293cb5e62",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3ebfc75e-f200-44ab-b2cb-1f04eb9c490e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82501b7-92e7-497f-85f1-a3038f126db1",
        "cursor": {
          "ref": "c726d5d9-205f-447e-bf0a-e397091b1c40",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c1a8ec58-7583-4e47-905e-7b7b62523916"
        },
        "item": {
          "id": "e82501b7-92e7-497f-85f1-a3038f126db1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "615efcb8-5f5f-4183-ab7c-c179195cf6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aea5f1f-b81d-4069-8f6a-95fce8d9ab9d",
        "cursor": {
          "ref": "12ae7985-f382-4a94-a740-528631b806ba",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3bfad66d-e15e-4403-9d0d-83cf913f400d"
        },
        "item": {
          "id": "1aea5f1f-b81d-4069-8f6a-95fce8d9ab9d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "12685939-a26f-426e-9e05-7caf949b7ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cebcdfb-a1e1-4c5a-8df2-a8e22d469c32",
        "cursor": {
          "ref": "81472d0d-ad9a-40fa-9a05-cbf974d8b641",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "463fa1b2-08f0-408f-ac1c-9272caf342ec"
        },
        "item": {
          "id": "8cebcdfb-a1e1-4c5a-8df2-a8e22d469c32",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8587bf7c-8d12-4e8e-95cd-02253740006a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4750537c-78e4-40de-ab12-31765b7a7e9d",
        "cursor": {
          "ref": "2ea8b932-3bf6-4aa0-88f5-9c7e635da498",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1503602b-7560-418b-ac48-03e0dce9c8dc"
        },
        "item": {
          "id": "4750537c-78e4-40de-ab12-31765b7a7e9d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a93fc80f-339a-4186-a316-35bcd6f2c6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12be025d-f958-4cc4-97a1-cf7a5e433c76",
        "cursor": {
          "ref": "dbe28e17-1410-47b3-82b7-3112ca870843",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21b82d7b-e15c-46e2-b0ee-7ace44ed241b"
        },
        "item": {
          "id": "12be025d-f958-4cc4-97a1-cf7a5e433c76",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "46e04a7a-2a2a-47a4-acb1-03c559d4de70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ccc378-52d4-4db8-8011-d5f5aa305b01",
        "cursor": {
          "ref": "e171f0cd-6933-49eb-8417-907b98829ad0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "069ee636-9fae-4f1d-906a-c9f33d36077c"
        },
        "item": {
          "id": "85ccc378-52d4-4db8-8011-d5f5aa305b01",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8db95977-a2a8-431a-99bc-9a852c4f6216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b217c39-82ed-4d68-a14e-71c578cd3d04",
        "cursor": {
          "ref": "0daf83e5-8cc2-4b4b-a53e-9bbba149738e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9c37af21-5eb2-4b97-9565-9b26164db6d8"
        },
        "item": {
          "id": "3b217c39-82ed-4d68-a14e-71c578cd3d04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "06122257-a5a7-4a5c-ac14-d8da7beb9428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f4487c-0949-46af-807c-9034c389d505",
        "cursor": {
          "ref": "03f6d3a6-63e9-4853-beb0-5049410b2169",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "661df961-8764-4aba-b234-f5213712d26f"
        },
        "item": {
          "id": "14f4487c-0949-46af-807c-9034c389d505",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5848111e-8302-4b7a-8cac-ef91723145c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ee4620-6881-46f0-b690-fdb7e73e0c9a",
        "cursor": {
          "ref": "ddd8377f-e887-4f28-91fb-555f9edbfd40",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "577050ef-3d75-407f-879e-5de8bbc14d4b"
        },
        "item": {
          "id": "95ee4620-6881-46f0-b690-fdb7e73e0c9a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "39d69c92-f5b2-4644-993f-bbd7de4e4cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2682bd1d-2700-4fa6-ac01-09ca5d10b289",
        "cursor": {
          "ref": "d4338d90-b4fe-44f0-a90f-f7dcc06e5b79",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ec051ab8-c1d3-4f8b-8fc5-7fe41fbd1c3e"
        },
        "item": {
          "id": "2682bd1d-2700-4fa6-ac01-09ca5d10b289",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c423d8b7-85ee-46a9-942a-a2b06af9812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769c15c4-72f9-4457-b3b3-455cb2d93792",
        "cursor": {
          "ref": "e8aaa8cc-a557-4526-a88a-9a4a14c68ece",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3d36cbf1-87b2-41b5-91f7-de8e98d275c0"
        },
        "item": {
          "id": "769c15c4-72f9-4457-b3b3-455cb2d93792",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "434a5dfb-5194-443a-a706-47c4d809d939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8759a0-4f75-4d1d-950e-87134e28ca7c",
        "cursor": {
          "ref": "691e3fc3-8122-4695-b2b1-acde1d1f1c78",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "324c2f85-13ff-4ba9-9399-862170bdab98"
        },
        "item": {
          "id": "1c8759a0-4f75-4d1d-950e-87134e28ca7c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5857d33f-7a56-4764-a4d2-7175ed18350e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d045b02d-58d7-445f-b00b-1c0baf091697",
        "cursor": {
          "ref": "c1850e31-896d-4ce7-94bb-9cfbcefd646b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b1e13919-41e8-4447-baaf-906e9e5396a0"
        },
        "item": {
          "id": "d045b02d-58d7-445f-b00b-1c0baf091697",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1629ab4c-b38f-4756-b9be-4c2484d15e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33ad0f8-69dc-4840-b062-863042d0618f",
        "cursor": {
          "ref": "567cc6e5-8a05-4f74-bb29-1772ed6a42b0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e4084d12-d3ac-4cc2-beb3-8454c68d8f16"
        },
        "item": {
          "id": "e33ad0f8-69dc-4840-b062-863042d0618f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cba46f9d-69f2-4d4e-887d-7de0fbf27c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31c9da2-59b3-4c66-b7a6-96b85aafd096",
        "cursor": {
          "ref": "8567d4f3-7ec8-489d-a5a8-5705ff8db25d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5c6bb540-645f-4e24-89c5-a848874e224c"
        },
        "item": {
          "id": "a31c9da2-59b3-4c66-b7a6-96b85aafd096",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7d948485-5f6a-4f95-af31-d7e44a128283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8f20c0-7dd3-4a0b-92b1-bc4f39ff9bff",
        "cursor": {
          "ref": "874c88d3-2da0-4b1a-a0ba-7ed2f42edb70",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43ca2f04-d70d-4835-81f0-5014f9ee7621"
        },
        "item": {
          "id": "de8f20c0-7dd3-4a0b-92b1-bc4f39ff9bff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ac8f5ccd-bb5c-4c57-bfc9-de8fafb8446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d58898-1a72-4ea7-a323-455e7385e59c",
        "cursor": {
          "ref": "42c5c1d1-e000-4d90-844f-c5fb0505b6f8",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "466f3404-20af-4d80-af7f-3b4db29a3909"
        },
        "item": {
          "id": "02d58898-1a72-4ea7-a323-455e7385e59c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fa61032a-a2af-4da3-9346-6e07a87fcba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2a0974-5314-4195-b12c-69a5d79464e4",
        "cursor": {
          "ref": "3418a43e-2a8e-4337-8c77-eb78d05f418a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "833738ed-6145-4cce-a3b6-19b60c4df524"
        },
        "item": {
          "id": "3f2a0974-5314-4195-b12c-69a5d79464e4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f2080802-d135-4d3d-9ca4-8e0ef1278ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aeade86-2ad7-4abe-9a22-2b5dcec9f565",
        "cursor": {
          "ref": "9e6ee334-8dd1-4b83-bca7-c5e5b83f9762",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b0eee10b-87e4-4e28-a823-d45727a11181"
        },
        "item": {
          "id": "2aeade86-2ad7-4abe-9a22-2b5dcec9f565",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c8c4610-c9d6-498e-841f-fab950696d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db4b60d-1ef5-4e7b-bdea-5f69663d8ba5",
        "cursor": {
          "ref": "a45f0d46-03e6-4188-8ec4-1f1bac3bf2b8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9fd1112a-a35f-4642-b96f-7fed8349da92"
        },
        "item": {
          "id": "0db4b60d-1ef5-4e7b-bdea-5f69663d8ba5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c3541589-211f-496c-85ba-d43d7ce9a92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16c745-a3a5-418c-825b-d14ea2aaf3a4",
        "cursor": {
          "ref": "9007d9e7-d93f-409e-ae8d-04dd3853580b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ee9f3c0a-dbe9-4b2c-b05f-5b2008953095"
        },
        "item": {
          "id": "ae16c745-a3a5-418c-825b-d14ea2aaf3a4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e3654b84-5f19-4fe6-82f3-aea679d9670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5196364b-e489-48fa-93c9-eaa4176b7864",
        "cursor": {
          "ref": "1f47a5af-e265-423d-97a0-6b51872578b9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "48b3b9eb-93f6-4a97-b816-477309795b67"
        },
        "item": {
          "id": "5196364b-e489-48fa-93c9-eaa4176b7864",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ad9df183-eb63-4924-bd4e-564ced191982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef7c490-1523-4d2a-83ee-1dee02d26156",
        "cursor": {
          "ref": "71c736af-56e1-4771-afe0-393d5411be07",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c483cfd0-838f-4fba-92d5-c93205b835ca"
        },
        "item": {
          "id": "2ef7c490-1523-4d2a-83ee-1dee02d26156",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c58865c5-351b-4271-bb1d-604cb4613d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929141bb-5ce9-47f2-a55d-e4e473826220",
        "cursor": {
          "ref": "6937e6ca-57d0-4d28-b9d2-d78e58eacee8",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4e0cbda5-1cab-4d00-bdf0-122c4c7044de"
        },
        "item": {
          "id": "929141bb-5ce9-47f2-a55d-e4e473826220",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed8b02c7-678c-4e59-93cf-ea868ee1398e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae090ab-8e6f-433f-9818-b3683e3d1501",
        "cursor": {
          "ref": "d24ad8d5-1161-434c-9005-d6d424bfa3c4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cfb0b94b-e5cf-47f8-b1e8-57dd1c2bd069"
        },
        "item": {
          "id": "6ae090ab-8e6f-433f-9818-b3683e3d1501",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2e13896-d561-4202-9267-1c3c81809ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb3376c-1646-4dbb-8d6e-551e5afdd7e0",
        "cursor": {
          "ref": "ac2b86c6-55db-44d6-8311-c0230202d66f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "02d2bb93-6864-48be-84ae-28b9b60ceed3"
        },
        "item": {
          "id": "feb3376c-1646-4dbb-8d6e-551e5afdd7e0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "386ee123-8f8e-4e85-b1cf-40f4cfee30db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bf9353-5147-4772-8b2b-991c54e7d957",
        "cursor": {
          "ref": "0eeecc4e-1e7c-4081-a67e-bf53d303063a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9e5f27b6-bf22-45ec-8b8a-77fe5a8c4ee3"
        },
        "item": {
          "id": "60bf9353-5147-4772-8b2b-991c54e7d957",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3749818c-b572-4b87-856e-1c4a553fd3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09706c2b-2c3c-4922-b373-1ba1565c6e0a",
        "cursor": {
          "ref": "c9d78a00-faf6-4398-a823-2303c98178ff",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "edecae39-270b-453a-9fe2-aad76f886611"
        },
        "item": {
          "id": "09706c2b-2c3c-4922-b373-1ba1565c6e0a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1696a11a-1907-4e9a-827e-4da805dc17aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbf4bb3-6c26-4682-983d-4bb38255e2d9",
        "cursor": {
          "ref": "cc882002-4f5b-4598-915f-3be28b4f8eee",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7f6c008d-7d57-4a54-a4de-0d358a76b263"
        },
        "item": {
          "id": "7cbf4bb3-6c26-4682-983d-4bb38255e2d9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f9e63c5d-3562-4007-860d-903ea6d96e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc73f5-903a-418b-93c7-b8ffc090d587",
        "cursor": {
          "ref": "c8e457a1-2b3e-49a7-ac55-596a62a12b1c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef358372-9048-4697-80fd-2cd0dca31488"
        },
        "item": {
          "id": "58fc73f5-903a-418b-93c7-b8ffc090d587",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dbcc000d-9a7c-47ce-912c-97e482073b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70181ee2-82f8-4de5-b664-ce9d87c8870e",
        "cursor": {
          "ref": "4b9f469e-2cd7-4e89-b825-7366877a9b21",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8887fa48-c951-4cb3-a91b-d761788c7bff"
        },
        "item": {
          "id": "70181ee2-82f8-4de5-b664-ce9d87c8870e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8968ece1-d97d-475c-874a-2ac383e8299a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5207fc-09f8-4af2-ba05-a14caf39c76e",
        "cursor": {
          "ref": "2777eb6b-eccb-4540-9d69-8eceb42d9e67",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "44ad27ce-c3bd-4c24-8135-34ec669182eb"
        },
        "item": {
          "id": "6a5207fc-09f8-4af2-ba05-a14caf39c76e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "96473c96-4827-4a71-8d2b-1900ba7c9940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935b4b4f-9780-4d64-9a3a-05e8814bd9ed",
        "cursor": {
          "ref": "30fd5c5f-0019-41e3-a02b-2c4c9e783b6d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8630c014-1fe0-4736-a6c7-bea2745b649d"
        },
        "item": {
          "id": "935b4b4f-9780-4d64-9a3a-05e8814bd9ed",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "99b907ba-f0d2-4db4-a2aa-a324c5c49276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46319cc-2c5e-475b-ae06-116e99c07269",
        "cursor": {
          "ref": "fa957272-f03e-4346-87c9-6b6ba817c4da",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9515d13f-9cdd-408e-b2a5-43e15f6fe0ec"
        },
        "item": {
          "id": "e46319cc-2c5e-475b-ae06-116e99c07269",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d0ed1dba-0138-40b7-b3ee-e586c5a58365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccb4e4c-43fa-4f5d-b1e8-91879d91cc73",
        "cursor": {
          "ref": "5289c3fc-45f0-4b2a-aca5-30c44533240b",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4133784d-be5d-4acf-9c65-3fc0fb72f2eb"
        },
        "item": {
          "id": "0ccb4e4c-43fa-4f5d-b1e8-91879d91cc73",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b2653995-0b47-4093-8a28-6ded4f64e1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f4ef3b-9dd4-415d-ab5d-b15e81c042cb",
        "cursor": {
          "ref": "bcae8b4c-37be-4046-a343-e129f97013a3",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ebbe499b-700d-4ee0-81ae-7198f72961b3"
        },
        "item": {
          "id": "64f4ef3b-9dd4-415d-ab5d-b15e81c042cb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e7eb5da3-2758-4b7e-b93f-a03b1438e22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8a2d9a-3af1-4bbb-b267-3534dc18ee31",
        "cursor": {
          "ref": "e3d9b959-99e4-4a86-81fb-5e9c11587120",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5cb1dc90-3a36-498e-a7db-527c3c09c836"
        },
        "item": {
          "id": "0d8a2d9a-3af1-4bbb-b267-3534dc18ee31",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "90717196-6b24-4519-bb5e-a4d20ce5e2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7337ff-75b9-4194-8ab0-5d075e7e0b53",
        "cursor": {
          "ref": "9cdb2bad-f9c8-478d-9300-56c462306eff",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da57d454-068c-4d50-a0d3-2ed630f85b25"
        },
        "item": {
          "id": "cc7337ff-75b9-4194-8ab0-5d075e7e0b53",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "27eeec23-2503-4268-b13d-14473964a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0fd470-8993-4901-bf08-74fa2609c7e8",
        "cursor": {
          "ref": "69f3c42b-49c8-486c-aca9-62071ff034b8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0963221f-7426-4d97-a137-56017c14dbec"
        },
        "item": {
          "id": "ed0fd470-8993-4901-bf08-74fa2609c7e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b27ba957-772f-4bfd-a01f-9c2d39f6211c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3767256-1cd0-46fc-89b1-f788eae95003",
        "cursor": {
          "ref": "cf7be2f5-50ad-4dd6-98f8-7415bacccc9f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "80abd5db-22cd-49ef-943d-3cc768f4c3d9"
        },
        "item": {
          "id": "c3767256-1cd0-46fc-89b1-f788eae95003",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e32263c0-fb25-47b6-a72c-4da99dc6e23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e24668-5023-4593-b3e0-ad99eadb751e",
        "cursor": {
          "ref": "1880bde4-0032-4ed9-9040-68d3633dbf54",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75034bc2-804d-4495-961e-2fe6f4d44d51"
        },
        "item": {
          "id": "30e24668-5023-4593-b3e0-ad99eadb751e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e191d5bd-b45d-4b92-a8f3-ae021f3dbdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3297d2ed-26db-44a2-b9aa-bee51fd2de80",
        "cursor": {
          "ref": "b205eaf7-4015-41dd-b843-c9490ff6abb8",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "773b1d77-86f7-4541-b077-368ce7cc5924"
        },
        "item": {
          "id": "3297d2ed-26db-44a2-b9aa-bee51fd2de80",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bb9e5c62-a3f8-4d00-8160-cc1389dc4a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfce516d-0c78-49d6-8b9c-f6252294c8a7",
        "cursor": {
          "ref": "d0cd42c7-e9ce-4683-aa11-70515b4428a4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "23fc4382-dbc3-427e-aa58-d66b5e0638c8"
        },
        "item": {
          "id": "cfce516d-0c78-49d6-8b9c-f6252294c8a7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c7e1954e-0863-4fa2-bb2c-bfd5f0e91de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3104250b-f7f9-4aca-a3b7-3e5fc432f68c",
        "cursor": {
          "ref": "f970fec2-3758-4c43-91ae-c46d26ee8007",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0c0d8836-afac-4c9b-848a-7dbdeeea1233"
        },
        "item": {
          "id": "3104250b-f7f9-4aca-a3b7-3e5fc432f68c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "99352cd9-3565-4fd3-9455-74b4ddd0d64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b47797-cbd0-429b-9f8a-01d9af6b4288",
        "cursor": {
          "ref": "9eb424cb-c588-41f3-949e-4565dced1e3e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7c3af102-14c4-48ae-bb74-88c6ec463ff4"
        },
        "item": {
          "id": "83b47797-cbd0-429b-9f8a-01d9af6b4288",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "227022f8-d4aa-4f16-8c7b-196bdb5bdbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c733ec2e-2fff-4599-9463-7ca7a3f40f27",
        "cursor": {
          "ref": "2039206d-4ee9-40c4-ad2a-4c52c5a56e31",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d812296f-f5ce-4e74-8b3f-6127bd9d20e2"
        },
        "item": {
          "id": "c733ec2e-2fff-4599-9463-7ca7a3f40f27",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "539db778-b9e4-427c-b045-4f60be2ce5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecfe6dc4-50f8-442a-8fda-13b1cb63cb76",
        "cursor": {
          "ref": "2c3307d7-9c46-457d-898a-3d1f4984417f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bb2305d7-17ec-43b2-8fd1-652fb0a2244b"
        },
        "item": {
          "id": "ecfe6dc4-50f8-442a-8fda-13b1cb63cb76",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cf233ed5-161a-4136-bc43-a01645d31b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c5cc12-d9e6-4814-a132-17dbc67b941a",
        "cursor": {
          "ref": "cb10437e-ba09-4d3a-89d1-9c0add5a330c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92e0a18a-b917-44cc-b648-7b152d38112b"
        },
        "item": {
          "id": "02c5cc12-d9e6-4814-a132-17dbc67b941a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "63cc46c7-cb86-43e2-a005-3a79f73d4a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba8ea37-5678-445a-b375-38b1d18f92e8",
        "cursor": {
          "ref": "69555f94-b888-4a73-bd32-eccd9312882a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8fe94cdc-454b-4e4c-9461-ff730bc8ea4e"
        },
        "item": {
          "id": "7ba8ea37-5678-445a-b375-38b1d18f92e8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e951c07c-d02e-42b3-8e79-321c18427f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3768c710-80e1-4069-8c08-7f941a75e74e",
        "cursor": {
          "ref": "497574b1-aaf4-4fc5-90af-243f8fa19294",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "16b6b766-e2e3-4fec-9a7a-62f86fb43512"
        },
        "item": {
          "id": "3768c710-80e1-4069-8c08-7f941a75e74e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3c5de175-71c3-4b64-8ef3-1ccfa4b5c5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8876f844-9f8b-47fa-8b7d-8d31e2c441fd",
        "cursor": {
          "ref": "0381871b-2963-4e50-a166-fe86e7a478a7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "56117801-ed15-458e-9c97-ed2655dcaf24"
        },
        "item": {
          "id": "8876f844-9f8b-47fa-8b7d-8d31e2c441fd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fbd6d3c2-2bf3-4eb4-a92b-ae4fda94b12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219d0b40-d477-47f8-9596-b5fd72d389f4",
        "cursor": {
          "ref": "c2bd9287-41de-4029-bde5-f9c818ced312",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "167133cc-5e46-4a4c-80ca-2be27ff4653e"
        },
        "item": {
          "id": "219d0b40-d477-47f8-9596-b5fd72d389f4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "983b4fd4-6396-40e4-8683-7bc236b790aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bf8490-c5b3-4c06-ad40-5bd1e3371349",
        "cursor": {
          "ref": "e88121a2-1ffc-48a2-a920-902418d850c5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5acf3aa8-8b73-4e3c-87c9-18b7dd4fcd83"
        },
        "item": {
          "id": "08bf8490-c5b3-4c06-ad40-5bd1e3371349",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0bc59829-ab39-4575-9f0c-afc016f3d6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca56feb-d231-41a6-b7a5-068b85f39dce",
        "cursor": {
          "ref": "f8014897-b5ca-48d8-83da-8340a55a1d62",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b666652d-e508-4e91-9d4c-64f2f7588063"
        },
        "item": {
          "id": "2ca56feb-d231-41a6-b7a5-068b85f39dce",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e5575ff-a6a6-4af8-b32f-8263dc552e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bdb94f-381f-4b08-bdec-edb1dfc072c8",
        "cursor": {
          "ref": "9bdefd65-767c-42f0-946c-abb37e110b22",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "745b7ef2-c088-44ad-903b-8ade2398c45d"
        },
        "item": {
          "id": "e5bdb94f-381f-4b08-bdec-edb1dfc072c8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "08b3e708-510e-4d9c-8017-394e0f49295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4034d55-32bb-40b2-9a62-a9973bf5054c",
        "cursor": {
          "ref": "62c46cee-effd-4408-858d-32add4d5109d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7542283f-0813-46d7-a4f0-6f252aa473ae"
        },
        "item": {
          "id": "f4034d55-32bb-40b2-9a62-a9973bf5054c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0455328f-8248-48b4-9334-6edbec5a72dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94947c78-feba-41fe-b9a2-f88f24b3a0b3",
        "cursor": {
          "ref": "21a2e2b5-7d99-492c-9754-4c2868a7f670",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ddeeb778-b1f6-4777-a7a7-91478b0442c6"
        },
        "item": {
          "id": "94947c78-feba-41fe-b9a2-f88f24b3a0b3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "67230733-30e9-4b6e-b600-cb870d7584e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c99f86-a093-492d-a52e-ede34bc6d1bb",
        "cursor": {
          "ref": "755b8dde-eb76-45c3-88e5-5f5ad19d23e6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0c4ea9ae-49a4-4a9e-9fab-a811a84800fc"
        },
        "item": {
          "id": "a5c99f86-a093-492d-a52e-ede34bc6d1bb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "20e22053-759b-40f2-a1c7-c3f4d3a8353e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512dc4c0-61b0-49a9-b4a5-710b4bb0a95a",
        "cursor": {
          "ref": "4ac51221-19d5-41e9-92c2-8704742d75ea",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ee4bd6ff-f6d9-4d28-b69b-6cb29807605b"
        },
        "item": {
          "id": "512dc4c0-61b0-49a9-b4a5-710b4bb0a95a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f4faca56-ba40-4bf0-a8cc-a8f571ccc6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59f0547-b97f-4ccb-bc06-8f0d06b1b8a1",
        "cursor": {
          "ref": "3bbd5741-8f01-4ca7-bae0-99957b0276cb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d5bde044-9f5f-4413-9a47-623d00773477"
        },
        "item": {
          "id": "d59f0547-b97f-4ccb-bc06-8f0d06b1b8a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6d8bb651-9329-41f0-8918-21ff71bdbc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733977c7-5712-4490-b4c1-c9d4449df3a0",
        "cursor": {
          "ref": "177f156b-988a-499e-9fa3-0e12c48c2153",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b25a648c-fd69-4d26-9011-3ab0e379fb2f"
        },
        "item": {
          "id": "733977c7-5712-4490-b4c1-c9d4449df3a0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f1aea116-d590-4e38-8da3-8585c338c3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db0a53d-2a13-405e-b8b7-6e3774b6a0e7",
        "cursor": {
          "ref": "7e8248b4-e91b-45ae-87f1-619a05c940c5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b8cd25cb-2897-4f1e-b7b2-d05aa7f39152"
        },
        "item": {
          "id": "3db0a53d-2a13-405e-b8b7-6e3774b6a0e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "89bf64f2-313f-45c6-aebf-c627d14c1841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037ae577-4611-412e-8367-37ff40fcf88e",
        "cursor": {
          "ref": "e8a8a26b-4938-48ba-abba-e3a6f62d2709",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0fe59726-8077-413e-ac2d-bd2dc689a8a8"
        },
        "item": {
          "id": "037ae577-4611-412e-8367-37ff40fcf88e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5ddca194-5bac-4fe6-a4d2-8c400abf07bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ba6415-2ba6-40b4-a83c-8a4ca3371460",
        "cursor": {
          "ref": "9d3f63af-bcc2-4e66-8b2a-231f993f9de3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e0411113-dec8-421f-8426-b14b2e947e35"
        },
        "item": {
          "id": "05ba6415-2ba6-40b4-a83c-8a4ca3371460",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f9b3de02-8738-4b4e-b1a7-5d6c0641f2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfda90b4-3bf3-41f8-861c-7d5bb7b680fd",
        "cursor": {
          "ref": "66e8480d-be70-407c-9279-76d8783e7d28",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8e58e87c-c93a-4669-af82-6d0ae7395b6e"
        },
        "item": {
          "id": "dfda90b4-3bf3-41f8-861c-7d5bb7b680fd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a9064949-47d6-4752-ad54-609f20c93797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6762621b-8547-44e8-bf83-869a307ae471",
        "cursor": {
          "ref": "e6cc5438-6d7f-464b-8f9a-afcab8aff761",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c5dd6df9-d978-45fa-bfed-36a67ebf4755"
        },
        "item": {
          "id": "6762621b-8547-44e8-bf83-869a307ae471",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0ce84da6-f364-475b-9a51-ed9147a46277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14315b2e-0ed2-47a5-83a4-a0fb7827eb52",
        "cursor": {
          "ref": "c82ac60a-3093-4b52-944f-dd50b8cd65dc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a8db63ef-28bc-494f-bedd-1c2897d7dfac"
        },
        "item": {
          "id": "14315b2e-0ed2-47a5-83a4-a0fb7827eb52",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "78da42eb-6098-4ec6-863d-d38770004c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2537b1-bcc5-43cc-ae15-6c797b61a369",
        "cursor": {
          "ref": "e1747adb-0477-4d03-b8e0-7a8351a62397",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "19a2cc75-0659-44bc-8466-f3777d533245"
        },
        "item": {
          "id": "5e2537b1-bcc5-43cc-ae15-6c797b61a369",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "679fc5f2-8089-41b3-b4ee-3a9364596e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6d9dc6-f352-47f0-ac41-3b2dc6b06a33",
        "cursor": {
          "ref": "7534d88d-285d-4787-97eb-c6509e710b1e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2be156bb-1f65-4390-ae1a-2ea866d6adcb"
        },
        "item": {
          "id": "cc6d9dc6-f352-47f0-ac41-3b2dc6b06a33",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "252d2122-0893-4e85-93ef-cc24cddbf172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304e06d4-75cf-4f79-963c-8ad52ec05596",
        "cursor": {
          "ref": "ad13eeb4-6ead-47b1-ae12-5040b4e0f29a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6216bde6-f57a-4327-bfd3-d8413960a9fd"
        },
        "item": {
          "id": "304e06d4-75cf-4f79-963c-8ad52ec05596",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae343d29-e43d-4d11-b224-c4e94d4ebc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcac10c-4ff2-4d9d-9651-6654edff20d1",
        "cursor": {
          "ref": "acc91bcb-d2c5-4644-8d7a-165604ca80e1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "774bdd25-e9c5-4254-867d-26a16e477493"
        },
        "item": {
          "id": "8bcac10c-4ff2-4d9d-9651-6654edff20d1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c79fef6b-208e-4c78-8d16-0b16994f92b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa73102d-9c3d-4914-acc6-8d8e98adf130",
        "cursor": {
          "ref": "491fc876-eefe-4453-93dd-e5830a0c80b9",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cfb92b25-dbf4-45d8-b298-65e5aa0be462"
        },
        "item": {
          "id": "aa73102d-9c3d-4914-acc6-8d8e98adf130",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6e66dc99-12e0-4e62-a4ac-cbea8b779498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87d0c9e-e335-4b5c-9950-c18b6d1e2a51",
        "cursor": {
          "ref": "7dfe9a88-d801-4386-92bc-342c949d2c79",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f4992d2b-aa82-4444-a2d2-c8879762645a"
        },
        "item": {
          "id": "d87d0c9e-e335-4b5c-9950-c18b6d1e2a51",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fff02563-07d1-4a25-bf20-d6b39ca29904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17042e70-1cdd-4535-bfe9-6f3077ade8cb",
        "cursor": {
          "ref": "95d61eab-87e2-4a14-91c8-2220ba6a1500",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8febe29c-9b75-4c09-9395-ed0af9e11780"
        },
        "item": {
          "id": "17042e70-1cdd-4535-bfe9-6f3077ade8cb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "43b58a40-db62-4bde-8360-09293f502f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8c2e8b-906f-4fd6-a6a8-173e7f37bc05",
        "cursor": {
          "ref": "26c3f04d-82bd-4c05-8e6b-b680e42b643a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8c31ac3f-f072-4417-9784-dad5b01cb82b"
        },
        "item": {
          "id": "3a8c2e8b-906f-4fd6-a6a8-173e7f37bc05",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4dc58197-5066-41fa-93d6-33ba2b472dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f711e1c9-b8cb-4b55-9ec2-1080d3434f69",
        "cursor": {
          "ref": "9c61e6ff-64ee-49fe-9e67-2f4beddf97e3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "03ff25ba-e430-43ef-8907-c44d9065ec87"
        },
        "item": {
          "id": "f711e1c9-b8cb-4b55-9ec2-1080d3434f69",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e23161ff-da67-4bde-8d0d-964b86abbd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38409ed-7907-4330-9278-179b62128c6d",
        "cursor": {
          "ref": "b56bef01-41e8-4389-9dd0-e535aca375d7",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fda4f165-8848-426e-8227-6bea9fb0bd94"
        },
        "item": {
          "id": "d38409ed-7907-4330-9278-179b62128c6d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8598535a-4935-49f7-8e34-053cd0035ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89db986-cecc-40b0-b57c-755ae95395df",
        "cursor": {
          "ref": "a2256618-34c9-4522-9d19-2e564c722ae7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "64bfd082-8cfa-4463-a750-79ce370fdb69"
        },
        "item": {
          "id": "a89db986-cecc-40b0-b57c-755ae95395df",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1ff48ce6-041c-4a2a-a1cf-0c6bb6ed4c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5067d5af-6ca1-4058-ba5b-00a09b6348e3",
        "cursor": {
          "ref": "bd19585a-e718-4ad3-9cab-3b1575594bf9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fb3d9416-621b-4f9e-9341-fb3d384a3e15"
        },
        "item": {
          "id": "5067d5af-6ca1-4058-ba5b-00a09b6348e3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7eab4122-cea5-4b54-ad09-195b0cac37ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4213eb-e214-4e15-bef0-8a62eb03c6c2",
        "cursor": {
          "ref": "320e8e7c-561f-44c5-a110-266567f8e600",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "891dbdc5-4cb9-4c44-90ff-e58560611df8"
        },
        "item": {
          "id": "5e4213eb-e214-4e15-bef0-8a62eb03c6c2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "06375cc4-62d1-497a-bc2d-b903bedcbefc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 174,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9084a5-f289-45c9-9cc3-5a7faecc3cf4",
        "cursor": {
          "ref": "99541eb1-f3d4-48a3-942a-50f4aeed6dc0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9ef752f4-8d78-4559-8e47-4d4f37594666"
        },
        "item": {
          "id": "fd9084a5-f289-45c9-9cc3-5a7faecc3cf4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c236851-0c5d-4f2a-9683-d0aa999c8df9",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a33734-dd2d-4aea-adc3-ec07cfc564e6",
        "cursor": {
          "ref": "38b460fb-dc52-42cd-9038-1f06ddcc6d61",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3bf6a5cb-006b-4fe8-8665-16aa20804b1e"
        },
        "item": {
          "id": "50a33734-dd2d-4aea-adc3-ec07cfc564e6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c495aed7-92e8-4661-95ab-e6c80986f9aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1633,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "41372e79-cadb-4b81-8005-adfe2b9b46ee",
        "cursor": {
          "ref": "c829cb54-75f7-4477-bf76-1c2465769a42",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "7808d647-350b-4e5c-bd94-b60e0df7f8bc"
        },
        "item": {
          "id": "41372e79-cadb-4b81-8005-adfe2b9b46ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c5dbf8ad-da41-4126-9865-4c79c79e6ab1",
          "status": "OK",
          "code": 200,
          "responseTime": 1363,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae769c5c-5d0e-4a18-b0c4-9992b95cbc33",
        "cursor": {
          "ref": "d0efb0a6-812c-412d-91f8-331643875568",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa91344a-eb7b-4bc4-b361-7e57a8fa4443"
        },
        "item": {
          "id": "ae769c5c-5d0e-4a18-b0c4-9992b95cbc33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "16a5eda9-5abb-43c9-bd35-d06678c34987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae769c5c-5d0e-4a18-b0c4-9992b95cbc33",
        "cursor": {
          "ref": "d0efb0a6-812c-412d-91f8-331643875568",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aa91344a-eb7b-4bc4-b361-7e57a8fa4443"
        },
        "item": {
          "id": "ae769c5c-5d0e-4a18-b0c4-9992b95cbc33",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "16a5eda9-5abb-43c9-bd35-d06678c34987",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6a30c1-fd3a-44ed-90ff-1916496d4b93",
        "cursor": {
          "ref": "9836d7fc-ccbf-4796-accf-3f3059b38b0e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f2c5c58d-1f7a-4da8-9a35-d4f7c4234322"
        },
        "item": {
          "id": "0a6a30c1-fd3a-44ed-90ff-1916496d4b93",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f740a895-0f19-4e16-a339-3d9420072716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0701c95f-29a2-4e53-a21c-c829084fbbe4",
        "cursor": {
          "ref": "05cc2a3f-f341-4238-bef9-1b64a528621d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a93af9ed-5678-406f-8661-10c7e29c6f73"
        },
        "item": {
          "id": "0701c95f-29a2-4e53-a21c-c829084fbbe4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d930cbf3-5fa2-4010-8e1b-358d8cac6ae4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}