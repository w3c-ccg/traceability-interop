{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "385034eb-aaff-42de-bcec-1883a4617e27",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d105327-ef24-4fa5-a22c-b7203b6b0856",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35824865-edef-4361-a32e-53c6defec9f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d717a85d-dbd8-4fc4-86e9-1bf43a25257c"
                }
              }
            ]
          },
          {
            "id": "1f19857c-955e-4ee4-82c1-15772465cf3b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffe8edbe-e2ff-4c29-9582-80c5e63087f0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01092a87-e994-49ff-8e7d-f69221ec8423"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "010da5c3-cd46-4de7-a05b-1ba88d1d8c5f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c5a54558-09d8-4700-8d2f-1a257318b7e2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c061943-7baa-464d-be9d-54e68b93cd70",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bf02a6c-13c9-4cae-a321-bd2533dd9b18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b07e1f6-d7ec-4a0d-9d19-69d65e35ea96"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64e2bc07-69be-4b1e-ab2e-d38d202714d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "107de417-8c59-4a32-ba8f-f02d8a4b43a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb308b91-75e4-41e7-8e0b-ae6cd297f0c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3fb2ad2-8c86-4007-b76d-cde94db70692"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39a197ce-ce8e-4ad7-9f55-2e1b39dd412b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "41b718fe-7959-4933-9a4b-e7d95dfc8878"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd888a55-f5c2-462a-831e-fc6b50161ed3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eafd8cf1-5398-4adc-a336-c66b97c4923a"
            }
          }
        ]
      },
      {
        "id": "d9e77fbc-02c0-4e9d-ba19-bdfcb1b415c8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5eda92db-f972-411f-bc88-eda19f196eb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e2d3695-d278-4f12-bc07-41c37eaa2e45",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "192e44f5-22af-4796-944e-cd925d0e87f8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f4da9-a946-49c3-a0bb-9084e105a2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "559b706a-f967-4026-8025-e11b11edf042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab7e45e-285e-4319-b8e5-893393ce0634",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd484387-eba0-4a9d-8a51-3abfe915b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f0ea44c-9f37-4159-a207-2ce1cb210897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb1151a-5247-4bd2-91c1-0485496a0de3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c78da91-4449-44b9-ba34-fe3963354e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f40cab98-ecc6-4f8e-8510-c269bbe218ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb90b768-bdba-45cc-b0c0-bc193e9a39ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04bd1e25-b914-490f-8528-1a4ce7e15828",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e94c81-6f99-4d74-8fc1-1c2b77c927a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64e11678-4b98-4b3c-adab-e45e607c3eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a2d243-c757-49a9-85ca-bebc57176d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cabc57d-23a3-4478-82bb-4ae41344fd2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f6512cd-fbd5-4e47-a6c4-8e36d7611666",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10383f66-26f5-48a3-abde-75b42de31921",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4e364bd-7ec0-4d1f-a194-f2e31ffbbc29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2aa170dc-7f23-4358-a80b-23d67026e226"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b68d5028-47b4-45e3-adff-d419b6bb608c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d88e1dbf-786f-4230-bd34-8b9a2d3dbba5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16f04459-49e8-44ce-92d8-4dae236a6d34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4d87c73-a671-4407-9562-5cd15d92c06f"
            }
          }
        ]
      },
      {
        "id": "ddae37ac-cde3-4232-9c52-6c3ca042debc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "952aae3f-399d-4ed1-bc91-d991a46ccdec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99be8303-e2b5-46df-b11b-c30c590f1cdd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a2fe6d98-6008-43f9-843d-2958e6b92b9d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7b6928-854f-46b9-9fcb-4c2b74bb6745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a32b350-ba0e-4a44-9d90-e48ce63010c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c53226-3d1c-4bde-83cc-246af026fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de26143-01f7-4a9a-94a9-ecdf6a77b2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33a6f22-ea27-469b-9a29-72d9b72e4779",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eada15-d1cc-4b41-b3cf-56863725ed89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532d8c7f-c89d-430d-af12-9cb37f3b4790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895749d4-54e9-452b-aa31-e6226409ddf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa90faf-a607-4c1f-be32-4ecd2277deb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5256d90d-0274-4fbd-8b81-34ce4e0a7bda",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc07119-3643-4c99-898a-269c7193ef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe74bf15-8a91-4451-afea-d0dfd9952663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546a6a76-823d-4b8d-8bae-3de7c20cd80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb08b34f-b0bb-4795-baec-f21d9c0d405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18c70d7-6921-493e-b001-c085ca2b8ea5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adac3901-45b4-4e0b-8763-c4006329f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2da77c-79d3-41ae-8d4f-adc63d948b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc505f8-14b1-4f49-a61c-93e38cd5d6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c83da52d-41e4-48c4-9b48-f44f4a50f9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348edee0-869c-490c-9696-931dc41c2a45",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48106049-5be7-4536-8bbd-8d6f381be5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4a65db-bb86-4ff6-b7a8-d9473b826559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f062958-d62f-4c72-a1fd-81ac30158448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6405b5c8-394b-4de8-bd45-66b846a8543d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c316c8a-100b-4f6c-968f-58a923bc27da",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb5d4af-b05a-484a-9aab-d351284e7261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0a039-6653-4196-a72b-958606886d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ba151-a8ef-42a2-8130-3095d4f57a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7211a0f-d434-48c4-842d-d894010a9cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ec30b6-79d3-468a-b6f6-f304f11d95c6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979ed6ee-e456-4258-884e-4f8ab6f31d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2c6bf1-4fc1-4f2a-b2ce-6f3da49f5854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb8278d-091e-4284-8df9-c05f3a92029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "415bf943-45d2-4408-9b83-81835796b7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805e470c-8d91-4c54-9ce2-703f69ca92e2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ea9044-04d5-43b3-a2db-4e63f48a3a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0418b6db-efad-4e63-8660-e366ab451e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aad580-0b7a-400c-b14f-ba69fa698f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49c27d82-8629-49a0-905e-e7f31b0ecf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0c4a24-0f44-4465-9013-b6c015b4264c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaaa9c4-c5b9-4179-ad0e-650754306a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d465bddd-cd5c-4500-b2f1-b65ae5f9b469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fb1e17-7547-4adc-a1ae-be21feb80eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d35fb34b-acd1-4ade-b105-1a19f0aae42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1471bc9e-3c59-471a-9163-156844bfd40d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca665c3-10ca-4d70-b28e-fc0a06e65041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0a0b6f-79a3-4516-aa74-804c13f39572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ff3a86-03dc-4332-94e5-355e5fe5657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9352302d-9d44-4045-ad26-b41cabce7efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5553ed76-da2c-4b6c-afad-41f1f60c6dea",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365f612a-737a-443e-bde4-b924142a9c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ceab186-49ec-42fb-bea2-5a1264ba09bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1609bb-ecda-4178-a578-3cefee0f117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eea6f8a-b800-436c-85f5-0a4715363bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a912896-e7b5-43f0-a827-95b823870bf1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f0090d-c7dc-4034-a359-529429244691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e652645-251e-420b-9b8e-4f4bca5c9b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ec2c45-985c-42b4-a2a6-3139191629c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6ed6cb1-9b1c-4fe1-befc-35c09a0319cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031f96f5-bfdb-40bb-b2f0-2d6e778fcb99",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d408ece5-3ffe-4631-9f03-d9d0a1e3bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330dfab7-90d6-4f06-b316-4c3c39ea1795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d589ac65-eb7c-48b0-ac25-0551b277aa90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9166fda0-9b68-4b3e-ba63-ca0ddd30d7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fbdd49-d53a-49d4-baed-003dd1447298",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be1e92b-5154-4e10-813a-3b3e6439fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77dc223c-59a5-42b9-b320-06a3fd0b10c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2263033d-28f8-4e8e-ad36-26342430b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e257d85-e550-4602-acf7-4adcf76747a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafa0df0-2b8d-4163-a304-b3b25466e378",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77710073-8ff4-41f9-8f46-0c535285d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcffbee-287f-4c62-8fbd-23a4c5d62b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4850ba6e-f519-4c57-b9d3-3904867fb186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "586c283b-5964-4150-9729-768f9e04a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81835d4b-2817-4743-afac-a05b15b0b391",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8b663e-d23f-4842-879d-c3af3d388fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b79f47e-de70-4303-8203-04599ac2b225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ed327a-d7b8-4e3e-b101-2bfa0ea342ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81ce8d53-5580-4f21-a6cf-d6e979f4445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ef5156-12a2-463a-a7f7-d166c5fbf4fc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d469d474-46d6-41a2-923a-71e0c4b7bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32efc9a2-7de3-4972-9953-e4869fa89079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d063e58-aa70-4468-a2af-68f8664489f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc34c614-0548-4032-9c5d-08d389bf73eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1e2b79-5cab-4b2f-81a4-8bab106969c2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f083573-641f-4d19-924b-0872a4d5f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2d7441-84cc-4e6c-b406-97c5e0c5a78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c77eeee-5e50-4f13-afb7-61d85052be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1dca7-4d21-477b-9e4a-e6970eb8e8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa6ed06-ef1f-4b14-85d0-6a53b50d761b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ab27e9-0458-498d-9a7a-8a0e3239df39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767ff43b-381b-4326-89a5-5f697bb8d3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff220414-60bb-4944-9627-5a22d452db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4db867-c5a0-4b67-8948-0577a535e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ea6a9c-6223-4acb-b935-2e712d2b7c19",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43563492-6284-481b-873e-d49b91f07ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c209c698-e100-414f-a02a-3a94bbd4faa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d55c50-6be8-4744-827b-68e035587d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91b7cb5-ccf4-499d-bfae-221d4137cefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc594eb-b7cb-47d6-8a20-96765fc4bfbc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e03c0-6f88-4642-9be5-6612ff7aa9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8465f2-962e-4e55-9d86-4786a7bdb6b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ab465d-310e-475f-8dd6-7d02bed5d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bf1fcc-94fe-4034-b7ae-25ca97735da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233ff01c-0316-4c2f-9a78-4fa6ec6c0254",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd88c133-4b11-4a9a-bea1-1536d7be1c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493a0de1-dbf7-4278-b3e3-61248d331081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7dbbbc-783d-477a-b804-138c50430942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3c839b-f245-4e97-a147-6d2cb7d205ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8fc50d-c027-40a4-8b35-fda6705eab34",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fbfe37-5baa-4057-a567-0228147d7372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95677561-aef5-49c1-980b-f5ca6285ad77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b115d235-4363-4f13-a77e-940b2e12dfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63db4384-6963-4b9d-97aa-58b10a255600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409d79a5-586f-496b-af86-3faf9cbf29e9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538db66a-fef1-461c-8f27-4db16e507e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02553613-91a2-4a1c-b84c-93e898c2556f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed641f6e-18eb-4f8e-ae40-c8f8662977ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "51466e07-aefe-494c-b3ca-87918505a466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a18e7cc-5402-4205-9b30-4b342c4c8a02",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070ecb0a-ae9a-4c9f-be81-0269b6800d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d859ce6e-df5b-4ef9-8d38-c071178d814f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e51108a-52e2-4785-83a6-257eff89cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84022d12-e8c8-44be-8b43-c91183087c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e802eb-5ab9-4b66-aca0-a7ccc9e0c824",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f80ce3-e82d-4470-8775-8f30dbbdbdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892e2f7e-fa6e-4186-b5bd-5377c2aa6f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58c485-08e9-4429-b870-1968cf31d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "655f3504-4da5-4210-80ab-795786afbb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fa05a5-6bcf-4282-85ae-800b6f3f4b38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f1474-3ad4-4577-b579-bf3d6c6bdcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae2eab7-c154-4989-968c-39c9df12968f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c140996f-def4-4999-b0bd-9b44918f66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee9896a-ca7f-4e8d-a012-3f6260d8ed1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4449904-a311-4fc9-8ab9-5d1f622df291",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ac804-b335-46cd-9eef-b80b2ec66478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78125ded-2aad-4514-909c-6840fe4575a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a61a38b-6e07-424d-a35e-e28734696aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a02af2c-3869-4ba3-b27e-5f14b9d9c57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e1a68f-e3ef-4c73-a6c9-6b511e9d8d26",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018fc022-7fec-451a-92b2-906846a1781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245fbda9-a683-4510-9957-1c01b69f654b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01f795-ed99-407a-bf14-df9a811cb155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9bbb1f-d320-495a-ba4c-4fa04a426876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14171f0-f44d-410c-90e0-38687c63203a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3027f4c9-dfc8-4d8f-9d3d-c451554d80f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedf1c19-a0e9-403a-9c60-d62d67dfcfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7400a258-64b2-4eff-a329-0af75a2bca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ddeabb-45d7-4926-88a0-52f0644fb58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82892802-a045-4b1a-b1f7-65da3756df7f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fce3394-08b9-4c8c-b565-30337a0b0875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9d5b23-293e-458b-8bd4-4228e1149938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c52503a-7169-4002-84f9-0cec41391b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "244f8992-1e58-4d1a-ac43-8e915ea15051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521de660-c0d7-481d-932a-2781b46447ec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6008e486-fe85-46db-af92-840329656077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c33ed9-22e0-4939-a398-7d11b1f402cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8735d1a4-a0dd-4c35-8611-62cace8d074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9988fe-34ed-4565-b375-cbb6bffe6ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51000030-0b45-4564-821b-2c70393aff59",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dcd5a6-dd99-47bd-8b2b-5775cb01a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89593bc5-346e-48f6-8671-b05675c2d5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed83fbdd-49e4-4bbc-b92d-3a5364e2faf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe04eafa-7cf9-4718-b41a-66f5440a419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17376db4-5331-4bf4-b08b-31d95ba7e432",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6c0111-6d5d-464b-8b2d-c1fa9185baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a574c8-c8e5-49d6-9516-716859baad3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe59a8c-9bc0-47fc-bac1-6b1fe342a0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6241b3-dce8-484a-b44e-1ee42eab16b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f7134a-1381-4303-a96c-05eee2f55772",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcabb27a-c629-4505-9bce-122cb0dbb29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adf0aa7-0307-4b95-8630-1b536f0e69cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f410ff41-1f7d-4e6f-bd7f-f9e6ca05bd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f0377b9f-1bd3-4410-aec9-8286f42515b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dec26c-0c7f-4f37-a956-27bd105c576c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906ee96b-7f6e-432e-a582-56432f1c3801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c314e05-c190-43c5-bdc0-8242b4513e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc731d3-a04a-4607-85f0-0f4b925e75f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae14342-cd8f-4df1-a6fa-4bdd7e461c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae68d6-682d-4cf4-b472-611978e71cb3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7968fcd1-fdcc-40e6-bc70-5212fad69073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68d4e799-5b3d-4656-9674-dbec1a79e73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84317df5-1fa8-4215-928a-96af316a8f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ceb4ec7-bb6b-4477-84cf-63b9e024e359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718fa6b4-f1ab-4caa-872f-234385d2108b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fb97d8-16ad-42a4-a509-b33e3d422deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d30c52-f381-418d-bac4-58772f105b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1116d8ba-49b1-49e0-a0c9-ee0413b2e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccdaa56-e522-4dc6-939d-333e3b5d38e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dd172b-0ef6-4fca-a7dd-826c4087ffef",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31031511-bdf0-4725-9ef8-e9ff01ce08d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1aca308-0c6d-48ec-82b3-f56382b280c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2c9adb-2d5a-40c6-ba04-c456c3363e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f69d4e0-8e0f-4899-a318-bb4fad836dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844791ce-c0f2-482a-9ac7-73b2ef8662e9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316085b8-b207-4573-8cdd-0ba4c4d1e445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50158b9-0bc2-410e-96ed-95b675daad0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eb4037-b024-49e9-b58b-8f65d8f0440d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8acd11-c7df-450d-9deb-115869f2af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b60225-968b-4ccf-8809-77740e60bdac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbdc0a8-a7d6-483b-a1f1-1b004f5706f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7fdaf7-d7c4-4c12-8e16-bb532d88b891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e324c-45da-42ac-b3e8-37b4c8e59c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a397a4b-a768-4c13-89f0-ab0363040d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccfd269-29ea-4a0b-b033-37b5828a8a1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc83044-9164-4ba1-a03b-7653a687f42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "143c2f30-07cb-47f6-8292-3c4170c97117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174c9e8d-ff92-456a-b0cf-992c870e64fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "114ea2bf-ccab-460a-a39b-c0014dfeffff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2988928-9dd1-4685-aa9c-54e6dc9a1697",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eb2738-3494-41e8-ac44-c6d599236cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abbf648-acc8-4b01-ab9a-8a88b2e061c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825bc64d-ee55-454d-81ec-814cedbd9857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9bc3559-201e-48db-8728-8a8b7ad9c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6226f658-fb71-4bee-9895-085f3986725f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9412e4-75b2-47ae-b649-68ef947d98de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7783198-af19-46d4-ad25-cf8b2a4131cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbfb1a0-5382-4d26-9066-db046a61be59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "597fcc55-0426-42a6-bc78-3eef27d5e0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a386ae8-b357-438a-8195-0728889b7705",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f27f88-b436-4de7-851b-f7b7492a576e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4f34c6-45dc-4455-90b8-95c317c100ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7445912e-52c4-495e-b538-7013f99761e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aabeda82-676a-4117-ac31-8c655ca016c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de11318-91ac-4891-a0e1-9352f8da6b7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c03e21b-4676-495d-a7a4-1b97289a8daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e784d6-9ecb-4b42-9d43-8747d78ebe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0354eefe-7b12-4783-8b47-7f8951f1513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40534ebc-ba7a-439f-9d03-e63506a00c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8d0856-8e15-49f5-9aea-8c2da839bb9d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762f4ac9-406f-4a02-a4ea-e21542562ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db00caf9-0718-4eb2-9b57-a2740ae84169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3598307-f967-4f49-aa26-7477f843f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68ab881e-8f18-4920-9132-a4dc4087c432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a9edb5-d369-43af-8899-bfeae31d45a1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c504dde-1332-468e-ae6e-65916f5a7c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7a9669-2075-4bab-b019-cb98944724a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f92f543-fbe1-492b-bad3-1554408db967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "462661b7-3873-4267-b1e6-9b2771b8a2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e228bfa8-145d-45ea-be97-94d358e5f7cd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b101dfe0-7e9e-4275-a48c-a2f3a72c6913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d55b62-c730-4590-8984-506c902f6bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8153752-7386-4568-9cf3-34825a3b9f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20049935-3f0e-4339-9e8c-278dcd733969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5414a9e3-7b3b-4871-b25e-0932db611e7e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96b8e12-e9d0-4ea4-885c-a8bd808c9195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883f100c-3584-42a8-a309-1752dec931a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8196ca-a9c4-484a-9d77-d5764ab44dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee109af3-6145-44f9-8d6b-c51cd3e2bb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636a2e9d-80ca-4beb-9b06-db2f638949cb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30607fc-e395-4bd1-a7e5-76a354fd76fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ede478-58a7-4619-9ad3-e9469f354384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8311af91-fc1a-40e1-b9f1-d32f8ff5e7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e9dc1d-0120-444b-96e0-2084e5cebc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6e090b-af99-4de2-b952-b5b1e4f6fd6c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884137c4-df0a-4f31-beb7-51aa11f10611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f36f5f3-33e1-423b-9109-ff8639c7b674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df52c25-a425-4296-bdbc-787c9721e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6045e86-e9b7-47a5-b26d-36a6b4cc4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3b33d9-aeb6-4011-aad1-4cb5c0e4b929",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c038ad9-8493-491e-8d84-8458fc02dc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56357ad9-ecbf-498f-8adf-509edf57197c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef856d62-14eb-4cdc-a95b-ccc6a5911aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb33294-e900-4417-9a67-f0158ca478e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692162e1-dad5-4c8f-9045-ae952ddfa225",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7cf8fc-552f-47dc-b0a3-22fd15c4615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0a8239-c47f-4d51-9cce-5bc8e7cda668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f6f70a-743c-4aa4-bf68-785871b6c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f742351-8a4c-49a0-9a0a-59e3a444adfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf93db-34de-473a-8d81-59005646e237",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4068697d-32a4-4095-93d7-4294324679d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b837ac3-3b65-4d1d-87bf-ffc458231ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2abbd72-8f60-41bb-b061-986d2fcc81e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdadbd8-d034-436e-942c-c064e4f71b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d830f4e6-e629-4617-92ba-cb849fac3b73",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda88be7-8ebc-4203-b714-8d8e8b43e662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1616c02d-845c-4b84-9732-8ea9525bace6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89eb501e-5bbc-4228-93f8-0d93eb0cd230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b7253f0f-1b44-41bc-9e5b-f43f8b4b389a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96eadd7-7ff7-4982-9682-7c2452fabf71",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38135e41-cef9-4935-8fa6-45c220112b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dfd2de-9916-4e95-89e7-e8ab56be0515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbb09aa-f56b-46ea-ba60-c103646078f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb1aff1-a8b9-4609-baae-9da8b500b4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87843c4-1429-4261-b054-7c68e2d99f33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3e5740-f271-46a8-a4f7-7a5db3016ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4819c5fd-c9bd-4d13-a8bc-034977938748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df12abe-fee4-4a53-8196-a0a641301bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee36d886-1dae-4614-bbbc-2543be68a258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e72d0d-8a7d-4c97-9e23-b17abf0db758",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79956a6a-2603-4bc9-9456-d9c086eb08a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4f001d-5ec1-4e23-ad9b-4876a1393789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9eed58-6936-4067-9f66-03cf48b54adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df499b7e-ed2b-430c-8ca3-d942d75b379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764f1119-728c-4226-8bab-21112cae57ab",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bca1d6-8e7f-4278-8ad6-86cade12a708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5255126-1879-4ae9-afa3-e65abeeb50e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5c599a-2948-4424-85d7-194bbb2a4eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1215e35-36f2-4517-a146-e10ecd586997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e177cc3e-1388-4725-a2ca-5d1f259573b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318d6424-40f3-4366-a9c2-921eb721ec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89a465c-c468-4874-b45f-816842e7997c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f027a937-3d87-4deb-9ead-3049eea8229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1ec682-fcd1-4f86-b7d4-cba3cc35ff06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bfe5b2-c927-4f8f-a85e-0d75ba45d7a1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0232dc-a4e9-4ab2-a680-88d808357026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a386bec6-61f9-4881-8b12-edd98d2f9845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb842f9d-1391-4c46-9a99-56ff677a12da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac2a878-4cb1-4bc1-bc41-0facec62f936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9d02f8-2e28-4654-a5cf-28db6eac0579",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c94ec5b-7380-48c5-8550-65afa996f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b23043c-47da-4f28-8ab5-b099229bbbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a1dd8e-690f-4c80-90e9-1dba8cffe109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07766e2d-9ba9-4ae8-8e63-464bf207faa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82eb619-5e9c-44f0-b4d6-fe2e933f7c85",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815042ac-914e-4010-aa13-55370e2e42bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e07e67d-83c4-4cbc-9756-872ec60756bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4599ddf4-8821-498d-9f1d-80cc4002ca67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "299b01c4-88f9-4d6c-997f-57023e2e9565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346693eb-d0c0-47dd-930c-da50546ffbe9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d847c30e-89ff-4fb4-aaee-65b9e3e3f413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ff5c6-8de1-48f3-b4fb-e06a7830f61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e572128d-f187-40b3-b7c4-1357f508907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7635fd97-6082-4a30-a96d-fe0e48eeb546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e3e400-2a7e-4936-8c88-72df10357391",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940853f5-577d-4305-bfd4-16af46e79ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29bb08e-ab16-4cef-8497-c42db76daeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80904c47-6d5d-4a74-b40c-a358bea666dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2770a7-406f-4c0b-81e3-272c880a26ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0e9103-24f7-4872-92a4-7f6c60f31562",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f11a7f-ad45-42dd-9e3a-e4cd061e75f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fdd858-c6b4-44e9-8e71-dc0c7a44df89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f055285a-bfd0-439e-8b43-dc9b14c8e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bdfea48c-5d4b-464e-9359-6f26cc0b774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2cd9fb-50a4-4fc7-8d01-e23808d1bd76",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8193ca-3023-4128-8a85-23e71c6e08a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1376e877-cf68-4589-9518-45dbde90d62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d48b1de-574c-4ea6-9357-4f8298b05847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "40eb9b26-f7d0-426f-b838-0ae67bcdf3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dce6fc-cd54-4261-a16c-db325591c6cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73488afc-f82d-440c-b0c8-9d0ebea6ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247437d4-fc05-4270-947f-7dd160dacb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71cf06d-72d5-445c-bd09-4c0614e54ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74b544b-4bb1-4426-a98b-87fe6073a321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a59098-0fa9-42b5-a41f-a409217c324c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a4c41e-5b7a-4cfc-b934-e253bda019f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774722f5-d0cb-4f67-ad57-337b06802c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e596c618-ad4a-43cf-8ece-9a7a45503e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5f50c4-a757-401e-b609-26390070e463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9423bc8a-3f2b-4793-a9e6-ba451c788cff",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec781e6-280a-4752-bc34-df7083dc4054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8026d6f-0eea-4095-a0d8-25c20e43c49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499e610f-838b-4133-8912-f199b3941ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecb8a0e-3b32-4427-9bf6-1ab2e521cf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a810c1-1f54-4c7f-bfb8-8aa8297a2a53",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba63303-409b-4120-b6fb-480bd1a0928f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b8fb7c-6884-4cd8-b0e6-f097369b24c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed417e0-2950-4dad-b082-50462a642db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b788e3-194b-44d6-8034-c5fad4f76317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5d9625-fd55-45dc-8201-da7f7d10b019",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5593e1-9eba-4676-9d39-cc57464a49ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce86bb1-0f1d-4ae4-8209-cddd69ed2946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a595ed27-d00d-42c4-8078-d8fc96fd3488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "195775bb-8331-4d17-b1d0-3c34936ae91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e8d50f-3c4d-449c-998f-6be7b1dec1e3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dcbf21-cd48-4f85-8f7b-a3958e79054a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8da18ec-9a85-4f97-86fe-9a57cc5e0303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56543e0-e62a-401a-8d98-f81b9cde0f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "836c9de4-7399-424a-bcb7-d3b346b3568d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab05df0d-c9be-4942-822c-3ed06f37dfde",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b80d1d8-7202-4236-9adc-168b9e71de15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5206752b-0ca5-4d8f-a86b-7f7acbe47ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5921ac42-362a-497e-bf17-3c9497558966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f545fb7f-2d22-41c8-b0fc-9245af9d491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb5ad9a-f162-49f5-8865-b6c7496e8d04",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8d3d3d-18a0-48a5-9983-43250f900518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7297122f-8084-4556-9f62-b54258cfaf67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc2f87-cf09-4c07-85b9-410d5094fdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "def8f447-746c-4e8b-9b2c-21ac70b37ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bc1c7c-70fc-46da-b46e-3b8fcedbb9be",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b4843d-5439-4391-ad65-88191fc2547d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b020799e-ab1e-4b79-beba-d33bb446f6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eafa86-fbad-41c2-a457-0128888eb36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f22325-180c-46e6-85ba-8215a998612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4edc8f-2102-4f8c-ad65-7394e21b5b28",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0eb473-f824-4d2d-95c1-d86070956b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3a8e39-8cf2-424b-99cf-998472ce8754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84190b-7b90-4b45-bb58-322648cb6d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2737734f-77f5-46c8-9267-7f4c23ba4a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977c421-5266-40e8-9b76-d5e037c3c63d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253d9985-9c18-425f-ada3-d766dcdcc607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b669878-5a77-4181-b306-5dcccfbd1055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ac8726-d126-4233-b976-8c96c8ba1297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc085448-0389-4e30-b230-58d19ab81631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a5b137-b7ef-43b5-9ac3-90becf188f49",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db0d7b-4b5c-407a-9083-d82a5a99be04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af52757a-c70b-4286-98e6-09a33273949d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ceb04db-f1d4-4e8f-976f-1754a4b497f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1de129-a8af-44e7-941f-b194b0bc17ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4963ad32-c246-421e-9c22-9bd414f850eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38880d42-8f13-45dc-8176-f664fd74a20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48eae20-577c-4dfa-a534-2b30598abb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b5f80d-0355-48f6-b38f-27cb62533335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb7b805-5860-4ef1-b0cc-3cdb89d44017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371f82ed-2124-4a82-a60a-e6fe560fa6f0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6a7511-0af1-4874-a637-89248a3affbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc42898-b9b0-40ee-9b5c-dee0decc2ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f779b55-4b96-4599-a041-71b0d3d94a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "649b1b4c-0add-4b47-b15d-13a6f7146d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3cd13-72ee-460a-9e98-fda105d7f577",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daf61b0-4e48-45c7-90d2-caf8d6d40159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d59f3d-7be3-43f6-92dd-8fd99aa664a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff23616-0c14-4e0a-a34b-01dd585d1984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9976c0-b6c9-43a3-93dc-eae248e8b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cdf4cc-8ef2-4558-9656-9676967d8611",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba0c78-725f-45f5-b033-e05f34e07790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22174bf9-7de0-4575-aceb-339f990824bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b761e01e-4952-40b6-bcc9-546d9ffb92cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f38236b-e77c-49e5-a1f7-0695838fbb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153ccc00-71bf-4851-a03d-b4f8dfad35ee",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cea894-fe5f-44fc-a396-76796a3fa599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f9630f-1992-494f-a873-71a28ec54ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdd40e8-8efe-4ce3-9ce7-2dc0424730ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd9933b-dda7-4981-8a36-e3867b4e19b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4277845a-9239-4baf-a820-240d257b1165",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7694782c-e9b0-4b00-802d-cdaa9ebf1f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db782877-c6e0-4ec9-ad1f-3b26b6e03d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717f7374-1b6b-47ed-8648-031191261734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef99042-72a8-4478-9ffd-966b952a2296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb3725-cbb3-4443-93d7-32b85587bac0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b4350b-a3a8-4ecf-961e-6799b3383ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcd0f23-25b9-4653-8ddd-f57ea7c19910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c744050-d781-4d7e-b1de-369be1cfe455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eccdb056-601c-411c-8de8-c5218575d806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d032ec1b-965a-43cb-b1a2-10a08a37e472",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4918b9a0-bda3-4b58-8b30-dc5dfa9f185b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8eab99-50ea-42a0-afd5-bb6a249e293b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b428fa0-e317-40c7-9bcf-f2b06c440b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd96fb5c-ca84-464d-aa15-74a2ab36041c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd21c7d-73d5-4bb7-a5c6-4d895ebbe8c5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0eeac6d-e505-4142-a3fe-5baa0effe8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af9cd69-9689-4077-a89e-236342c16ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291ec3e5-dddb-4ac0-95df-67f2753d35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96840cd6-6cb5-4350-9d3e-bbfc19786046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc8b69d-3a7f-4d0d-8328-8e61be693f20",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f8ca2c-20d1-4bf9-b928-250190545d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7acf6a-ddea-4edd-8a36-6caba6f93c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1822caa-d330-4dfa-b521-057aa02fb3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e202af6-1ac3-4600-9b78-2feba753f0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1d0d10-f946-41d5-8129-23f9813294d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30202f68-fb75-4cff-b599-743183bf62e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d212f18-6f1d-422b-944d-5fcc1d2b1510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f227136-4629-40ee-908d-bd4895d3c20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bb9216-7739-4f35-ae8d-f0911af4626b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a42ef6b-ddcc-4bda-9517-45fe5934adef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d848123-cc7f-4066-85cc-b5aa6e056875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4afe7106-503f-4f47-a99f-7b059c768962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17475476-4e39-41ae-9eff-d52d8e998132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d797512-9bfa-412c-8f8c-a4e1f58cc9c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21d4c9a4-4266-47db-8575-e739228c49aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c5a841a-68d9-4644-bf7f-eb304bd313c6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e9d72-213e-4ef8-8df2-2dd76f539adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "671adbc3-17ca-425d-8ba5-1a511f59fc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02776f04-c7ad-4ca3-a40a-6987acab586c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c820462-7054-43a6-a381-e6ad8b97ee9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f714067d-b51a-46d8-a105-ae0e0d77fae4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90ae670e-0e27-48cd-a19b-f3d77b415606"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e0377a8-c0c7-4868-ac51-2e098818f4ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fad8aa3-7d3e-423f-beb9-1247e48c8aa2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9869852-8e8a-4d2b-a5a2-28002ee33699",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d5811ea-61de-49fc-89f4-11db33e8a4a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d47e766e-a3a4-4ec4-bacd-cab6cab3fd7d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4f43300-b2be-4346-816b-ad6f4b4db3f9"
                }
              }
            ]
          },
          {
            "id": "a27be866-81b2-44db-8db7-a4d707043074",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9bc3b909-df0f-4afc-9246-3d4d90cbe2cf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "520b8fc5-b74e-4041-960e-fbaeb95d3515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7686f29a-7ce8-439f-8ee7-810a83a2f7ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5758c518-c484-489f-8f7c-bc9099ea9057",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd96195a-6c4a-466a-9470-22cfa3a19c81"
                    }
                  }
                ]
              },
              {
                "id": "9647d076-9975-434c-bd75-2a7163c69c88",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3a96e2f-d97c-45cc-9445-1d050072b72c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4155d8ef-d28a-462b-8e32-f4339eff6192"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4188f1cb-e294-4e35-b0eb-4889f4e34a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f8e15657-194f-4ad4-8a31-20803fb4df50"
                    }
                  }
                ]
              },
              {
                "id": "1ffb0548-04a5-4427-b096-b4a000cc57bb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af2d409-48ab-4d6e-9462-acd555c05689",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6fe3078f-e73e-45e3-9b56-f287803f5d96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ed7878d-dfdc-4929-8000-2f5d673ef489",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba81d9de-c89f-441f-bc02-90ef1e4fef46"
                    }
                  }
                ]
              },
              {
                "id": "9011354c-73e5-48a0-b542-00d1dfd71332",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb210ac-038a-4046-bc74-bdc9d78dd0d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5de33c41-b7c9-4f7e-8178-7977bb31cfad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00d9af84-2470-4eb7-bb65-295d23b3aac6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bcf59aa5-02ab-45d6-940c-4fe8dc6dd7b2"
                    }
                  }
                ]
              },
              {
                "id": "cb745a7c-0597-4279-806b-ffb452d52206",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f8b6a5-3bb3-4f0b-8122-e435d49c29b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "320b113c-e70b-40d9-9092-750e4aa17ab1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb278cd9-f015-4b60-b46d-b52306169a43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e2f8280-d887-4adc-b81b-25887ad00b09"
                    }
                  }
                ]
              },
              {
                "id": "eaba1493-ec02-4f1e-bf74-27dbdc0e47eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc1d67e8-5e0f-44f5-8e5c-fa11d30a6898",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb674375-0c55-4ae4-a150-2a29accf592a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b64f92-b4a3-4448-8086-68c5ebd8f310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00a72bae-844c-45a2-8a69-d92ed2e1eb54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "06e60475-494d-48c7-b747-6b45a4100377",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fcecaa2-c1bf-4ae5-a614-d8f642d1202b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f8bfb12a-9379-4640-83a6-408c84504739",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81643706-da72-4bd9-b895-13aa5dce3380"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198f47f8-2214-4e49-8452-6b87eb1a0e76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d7585c11-ef49-4480-976d-2b5b59695f0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6419c6eb-130c-4bf2-bd21-4a9d3bbd3366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "075b00e9-2045-4f0f-a7a0-da6dd3572908"
            }
          }
        ]
      },
      {
        "id": "35fa9f17-1039-4efb-82e8-27fe3e115c3b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7825bbb3-b040-4de5-b029-36e71b95b75b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9256f72f-faf1-458e-a156-1e43202afbc4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "847768cc-509f-4cac-b4da-afc2dcd0cad5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a933f64e-3902-4c89-bbe1-70d5d9baef0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d9d535-6b9a-4ce0-b4ca-7e96829ee098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284031b6-3103-4cff-9129-b7a90596e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fefb7d98-6bdb-41c5-b2a2-900c5d6918a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beab14c5-db9d-407c-a0c2-29218f40a7b4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8963b16e-d5e7-4ce4-80ac-5b5bb560287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b572172f-6f8f-464e-bdc9-7b76cdc6d594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0caea34-2672-440d-aa39-7c7e985c4b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49bd2bcd-8c36-4c5f-902c-caf3b0e713e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c788fa-926e-476f-8548-f5d4824d02c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a96064-b6ff-4e2d-b515-30d3e9c6e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec1c3cf-96b2-4e7c-8fe8-e0830eaa41de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2ea5b3-467f-4899-8af2-4255648792b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5abca517-1f18-4c47-b02f-d8dab7ea303c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556e2e28-c742-484d-b470-bd2d3169e6fa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fc2388-1eaf-4b1f-80b2-07a284b4061e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6b6246-9d5c-4e01-97e0-db74af12309b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f451e823-61bc-4821-b320-eb18ccccb743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38539ebc-f1f5-49b6-8d84-ab49665eb517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc5befe-2b1a-49ea-8063-f4e7f3d5306c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cf7659-933d-4938-807d-4bd6a3db0de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf77a40-e3f3-4ef9-81d3-2463b8ad1b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a463c2c-6d81-4377-b8b7-28970b8ae85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c861aa2a-9209-423d-8fbe-774dea2d368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f96d64a-2b16-4e63-9253-020b139b7b5e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eda155-e68d-41f5-8341-2d37e3508fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183a7209-e5c7-41d7-9df7-7d84059c31aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8240e9-b79d-4d7c-bab6-371864dcd153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0f9254-2c97-4920-a878-df8d015bed55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac4e21e-cb02-453b-9ed0-30afc9b097bf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6440d9-acd9-427c-a060-7338f5438b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e5dfe2-31a1-46ce-9e67-4cd62fc26b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0436a30-c325-49f6-98d0-1552c75f7c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21648b2-280c-40f5-820f-82f3184ad536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c087518-4ec1-4f36-bd05-c635fe7dd3e1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6742bb93-e007-437b-9adf-199ecb93a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03a3b98-1bbe-4ff7-88d5-59d87c102c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c133c837-f6f4-4a8f-ac7f-ffd58a9c3537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "125525e4-bf37-49e9-96f8-3c6f7b035b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b22d92-ac2b-4f9b-ba24-97ea30f54a66",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d008e8e0-ea53-4ebe-861c-13091063dac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c598cf-6580-4c1b-a1d6-0b789eaf8654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd60a7-e470-41fd-90f7-3ff73c848486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe1f9df-f866-4a69-99b4-2f4d117a435e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b07d98-4166-4e35-b4a2-3acfb53f59b8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe1ac86-8510-49a8-8644-e7d3ef17c631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921c28be-a1f1-4a58-a2da-2611c5880792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3ef7c7-c2e4-4a10-b37e-36ba3c12505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a420fe47-d324-47f9-b4e9-bb6a29db6deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d363cf7-0c70-4800-8f22-30eb94e35449",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea6c07-ccf8-4891-b4dd-335e6b56744b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f0591d-5c01-489a-9c95-9bef738e5255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb76294-ad35-4aee-9f4b-9be9ebbdc0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f237cda0-ed04-4472-9834-a88df25d9a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc0e505-a19e-46a9-b3a9-ce06a84c3c22",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcd924c-aa61-4d9e-9bc6-978836f8a850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d97c48f-3cc0-4ec6-82ae-e5758596c4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aabe3bc-c72d-41a9-b47e-793c1032d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f91c7472-4c70-4acf-8b93-ede39726546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7a074e-ac13-475b-a3c6-d216b9c50cc8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b07ccc3-10a0-4c69-b176-59fc53bf0e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdcf39ba-ab6c-48a4-adab-f6ca9b2682c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114a7921-8395-4c1a-874c-e794513fc9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77db8b14-2d84-4e99-af40-454d1bff1121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f4b73-063c-41a6-8b52-4d5c14a615db",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c10e2ad-9e55-4e42-9990-28f6a7f6ffe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bd55af-25c6-4c1f-94da-cfa47e56dc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61a6f12-e6c3-4e7e-ace0-b832b55a229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4633de7c-d17e-464f-b3f9-e5657d704adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f859a424-2377-403e-991b-ec9a1266dd42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a9b055-5074-410c-84e1-da9744e35a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2889f23-917f-4141-ba62-4b786ff963bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a415f-5ce3-40ef-8a3f-28db4bb9d98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1442d332-5e6c-4da8-9f65-d2aa5d48f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd1c8d-e597-4edc-9efd-ed2a3467193a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a80ac11-428b-410d-b35d-a10134fb5543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1894b353-1383-4a27-bc86-a3eee19d7b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb981a4-396a-43e7-bf5d-843b32cdb8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "45da33f8-1dc3-45c7-8d19-9d1836fdb045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ff512-314a-4263-bd16-28f0aab4b6e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf1fb51-c305-43c0-b8f1-120954efc58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2a897a-4798-4e86-ada1-addd48555c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4629e92-1a78-450b-a3b7-e25ce5e9db38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3fe82c-e4d5-4c14-81af-be28016f7239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2fe078-3702-455c-952f-7e9a2ed89935",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426df970-0a0b-4216-a60d-b6e3cdff7660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132ef275-2920-4684-af2c-901f48a32dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd05d73f-28e4-4669-bd0d-5061a18ee1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5037b1cc-26be-4b66-ac8a-0562334e540e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d41aa5-9519-4374-a7dc-d966123f76a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a540af-8c1d-4e14-b4c3-b8d14970d2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e18946-44d2-41d2-a271-b33faacf45c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f495d307-b6b5-49a6-b456-7d365d3ae912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "755f47f3-2c59-40ac-a87f-102f0158bae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a7ef6-0639-401f-b450-d1b11d4509c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadde28d-07d4-47cd-970c-107184689c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec83b4e7-945a-47e3-bc71-c325a7827231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f4b0a4-ae04-47f4-bf23-ca5631ec446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "897aef1b-bc51-48b1-bde7-489b389ff9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8dd8bc-8102-4595-8263-8910b54b9619",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abb48b1-2329-49e6-adec-0b44f3c1e67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a09453-65f7-4483-9325-5c11d342abe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4fb89f-f49e-4dd7-baa6-a967c9e5728d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be86ab5e-8b1d-4aa3-a8c8-906005229527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf366ac-7ebe-4aa6-a6e3-72e835b4b7f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8b64b8-3501-49a3-b5e1-054e79fd1bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60ce78e-0a8e-4573-8453-033ac1cb6890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c68d23-6427-453b-943c-21faf8cfd104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e96a7f39-5a23-4a64-b108-9310f91016d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f1088-3712-4290-9c46-880ce91ee842",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85751517-0875-44f0-ac52-c468e906bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b91fdad-97af-4dcb-8f5f-ae6196d1c0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1591c5dc-c8c5-4c16-9626-b3c8b4c228c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36fceccb-ce88-49cb-bfa7-5458bde71a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4464ddd9-656e-4d62-bb76-bdf512abef6e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cad8d9c-5f9d-48fa-8103-2c8b5815c605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0615af3-e499-4896-b2c6-59a57292b4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d2471a-698e-4c88-9d10-9f3819592b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01969584-71cd-459f-9bd7-bfd2f8faf7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe4b39e-2306-4a2d-98e1-9bd7169c4a25",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a16772-26db-46fe-9c1a-da1035141fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f55e9e5-3139-434a-8f1e-26a8f204aa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49e76cc-aed7-4983-8e4d-dec267645cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9685b4-54ca-4f76-891f-81cdfcdadb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4529f54d-4771-4840-ac33-a95fd5d6e937",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5b2dcb-412a-448b-9e34-18c940e22a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bccdd49f-2dbe-4a5a-827b-29238eb058a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d6c41-764c-42f3-854e-ba4cf7128086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476f1e6d-555d-4f81-a907-89a266318b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a35370-f057-4dc4-8036-e0b80d2a0238",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e66cdc8-49c1-4115-aded-5ef313bb348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5199ab-1044-43ae-bc29-018dce7f7210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffda41b7-e51f-4d77-9f7e-0ace5f33d2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ebaba-689f-4422-a599-24a54340e607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d680c7-e680-4ceb-84be-1bb1aee163e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985210f8-fee2-40d4-a9a0-7ba54e377ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946897a6-25d5-4bf3-9abc-6d19a933761d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8235d9-7f82-4397-9f4c-2f9e3194ed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e68d2ed-512c-4778-89b4-55ce5cf2e101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb10b37-560e-4ffd-ac45-c8e6124c75ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c737294-95bb-4e86-b2c3-9fd853f11abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd38663-5e8e-403c-b336-45110011d205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ff11c9-2428-45d0-82f0-57cceb3692db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91aa39d-a44a-4d4b-a859-7aa15166980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9079bdd0-dc0e-4f44-a1d5-27b47d15fa5c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e201f3-ef09-4fb2-9de3-479a0f82e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc71d045-3f35-47c9-985b-b23863e7b466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0db6e20-5910-4eb5-9fc8-d4e02993617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "139db2f7-363e-4b5e-802d-04a8a3b28cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea181a4d-6942-4e04-b1ef-9888a3fbdc06",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19aa9636-6d49-4d37-891f-07840ebc67a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4c315a-8512-447a-b9bf-3aa801fd1846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e7d9ee-e142-4f66-984e-71afc1eb94da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "236a09c2-c615-471b-981f-cc6ad0388f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50dd044-c6dc-4612-99ee-be12f9212ffa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e07d57-2faf-4e25-ae22-9272765ffdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2e29d5-b4a7-4482-974d-e4243cafb835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef67648f-c5dc-4f3e-8665-fc048851e8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5098ea48-18bd-4385-b7cf-681cfc335fb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92b087ac-9205-4874-8f7e-f727f1414be2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3bd1977-11f2-46ec-848e-b7e8026d90c4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80af7fb0-c544-4f61-a889-49c9287485fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb33e558-a156-4e7f-a691-9337341424a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80beaccb-e13c-4028-814a-5d183344fa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e14eeef-f97c-48e8-ba36-1f182bf7b8ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85871e27-6830-440e-a198-0ef4f2bc6f3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46ff1d53-ae50-4ed2-a585-aca909fe40ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e39214d-b738-43ac-b6db-83a8f087a1e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c32f860-bbd1-424b-b627-5c1866cf0f85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cea4e099-6f2b-4893-b7c9-c0513fe98492",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8694358-2099-4a2f-98cf-45b99fa0a275"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fe4b7e4-d20c-4d61-9c90-a054bf5efcb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5628f430-ebdf-4354-9196-a6acd5426c64"
            }
          }
        ]
      },
      {
        "id": "39313fe6-1eab-4a50-a075-86bc78b85faf",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1f37f93b-5a33-4273-86f3-7959a16b9045",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e7af870-baac-4205-a126-e655622a62e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "331e8061-de20-4118-a86e-b1eb0af82e9f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f42a17-aa5d-4a22-b569-6e9c751b5291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4e2028-6fc7-4281-acef-436ba2517add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828b1a4e-9ddb-4184-bc31-a6dd3f15c9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc1fc45-7500-43fd-9cba-0c74abed67fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec772a8-eedd-44ca-9fd0-510c6749acca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7946476-9917-42bc-8b68-2bb8aea12fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d3d83c-4f91-4255-b96c-c98087111dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e523bb3-f2b8-4304-8c9e-1e0e34045cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed8a702-f54b-4cd3-aadb-b2bcbba6799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8525ccf4-98b9-412d-b812-30ebe4065ca1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f4552b-36c3-43c4-ab0c-20c17312bcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5103f7f-78f0-4889-bdad-dc7ecc667cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1570854-7c67-4020-8fa6-4a58cda4667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d8e00d-e793-40e6-9712-f013c9554932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce0acd2-b3b2-4ed9-bf9f-ee928536758b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11e6104-8f54-40fb-9a99-6ceb18d3dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43d69f7-0404-4d81-975b-413435484e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a7b940-bbe8-4af8-8ba5-5f20ae98a980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78eb08ba-7079-4d0d-bd11-e90e1998ffca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ec9a17-de4b-451f-995c-b27c14d2c4b2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0344ea94-346b-4363-a568-11da44370975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241b7b47-29f8-4416-ae9a-85bd6940837d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1842cb6a-bf21-4ea1-9459-0cf225e3344c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a517fe1-f87b-48bf-b55b-745f776e70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b16fce8-08cd-4845-825d-98a564dae15f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041804f8-bd32-48de-af82-4712e22af117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c6cf2c-735c-44ad-9ab7-ec3927c72271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7270ed-19c5-48e6-ae1d-6d0ae523cce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0abaed8-ffcf-438e-8e97-9be5e2f0bf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef3616a-f755-42ba-ab38-1d38ae5702c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5521971-87fa-4e28-89d4-969390f0adb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fe1543-bb63-4e5d-bea4-edbc869bbcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f3d7de-4c67-4e5a-a49a-cf3d1116b496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "570e51f6-17ab-448d-ba01-8c9b0690bd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b642e94c-e8f6-4825-970f-8ab99eddca48",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ade161e-6c96-4de8-9af8-9b877e2826ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a281d7-745a-4aa2-88e2-9a5d351ecb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c94d56b-d991-4147-9101-d3557c0a34c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82e9c1ec-73b7-4528-aefd-0050fc58548c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca31f359-9cf0-4a7c-8abe-92c4ec72528d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6429f87-c1d2-4592-8959-be51c902ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d39a546-9571-4a9b-9766-f40c840e9ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d4f21-e27f-4441-bed6-8c82c9398417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4113fdc-ad64-4253-a2ee-68a447b26ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90c7cfe-8c33-4215-b50b-41ff9c5be3e2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb281d2c-a031-46cc-8bb0-a811ef42cf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7418b5d-5788-4e97-b020-0a3aabea835b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462a9723-ad73-426f-b7bc-3cd3d22b8080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc01b20a-4052-4ebb-be1d-f6b4faa9ba56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d19be10-3953-43dd-9308-003bde2c84ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b86218-611e-474b-b831-bec472bdee67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a83946-96f4-4a53-a5ca-f618cf2faf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd97fb83-b69b-45da-8244-2ca172781c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c897bfb9-e89d-4bef-9b2f-6cf65ababad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400f5b42-612a-4cf2-b1fa-f2800468aeef",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c93a33-ab0e-4fca-b383-8438fef24ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b8d4d9-0731-4219-bdac-8fd06a79636f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b078ed4e-ef77-4a34-b3d9-187ee41dff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12be3d44-8e1f-4692-9483-74a847829d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db15a1ee-9ea7-4f6d-a7db-19be19444ee0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48076337-5805-41fa-8e33-0e32b9ae1feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefb8abd-569a-4230-8ec7-56f87c59e69b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d952dc5b-24de-4f02-b98b-4c3b9e98a52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "661d8e45-4a91-45de-825a-7cd60853cda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b88d3f6-4b42-46e1-b341-b27ab434b770",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d59d22f-3171-4627-8fc8-790f033a9340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a298d12-c13d-416f-827c-0850366a3ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dd8f86-0324-43d9-8104-bf8d3e0553ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64ebb44c-5714-4ac6-b75a-19f24d034570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca104a-eb4d-4433-bbd0-e906b1eb163e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b9c912-17a9-4700-9c8c-39c5d3a0683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e1da7e-f60f-4b41-969d-6799b8761ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f0c289-e749-4b9c-b254-e53789a9e1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd81301-9c8f-4ce3-9f62-876eb0784899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0226b46-decf-41f5-a8a9-e70d490d4cca",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad8dc87-2125-4f76-93a6-37d478a415ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d9db49-826e-4b4d-ab26-a768ed8f1c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de46176f-30ff-4187-8877-4cef9e3b713c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7474ba-9f73-4296-a8fe-2ddace128bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6385b1a-ab51-4c57-a213-f7a61cd56ad7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58576e3b-9e42-4c8f-9a3e-e68f1b6d052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f42ce-baee-4cce-8720-72e39760fe84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243123d0-a8d3-4f14-b7ac-a766c570ef03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36c8508b-2ec2-4e0e-804d-2decfd87d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceac57a3-e61a-4d25-926f-80b146728096",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64db69d6-0a8b-46b6-bcc8-399cd920c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a37b4e-be76-44ee-accc-ab15ac5c71de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98700fed-9ec5-4044-bd79-42a364517e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c9293c-b922-4bd2-93c3-e24bdc89dece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15ca2dd-3f1c-4c55-8cee-3d26f5d8f259",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75081add-2324-4cc1-b8cb-f1196d1ff6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5729f3f7-54d5-4a66-a40e-58655d47f73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09338ff0-fa0d-4ed5-be27-b3f0788f9bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac7027a-36bb-4fa7-93a1-1f03d3440e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4551d4e8-2a96-4e78-9774-78a0cd531ded",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691ffa59-7c8f-4e3b-ad4e-095a0943b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a782415-58a1-4dbd-b5c2-42348f63fc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff35555-0a35-4051-a3c4-cb154fdca266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92fe5bd-90a5-42ff-8721-a6efba8bb721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2611d833-0d82-469c-bd52-e36cf6ff9861",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f80bde-7971-4226-a8d2-4b9982f87f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d85ba3-21a2-4eb4-8a03-f0940d0cc0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07b91eb-5d18-4be0-bf0c-2d12c8699bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55539df0-2d5f-4162-ad03-1f1b097e8f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c57e30-90a5-4c34-bf88-380757b9e679",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d7d54-b353-46e6-84ee-d4fcf1186b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd959153-49c2-41d7-a7ee-0e3e832580d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba2bf76-8d8f-4cd8-a086-7eb65d74d71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf3d5f0-c5f6-4b26-81bc-4fca1174c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac4a861-0e09-49cc-a2b6-38b05d613ba5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cb9324-02b8-4731-b983-df2200754286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a578983-0de1-48e8-8217-3de9d8fd775c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b09a0cb-32a5-4ec0-94a9-a4e9bdc74574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "699e32a0-e2ba-4ba7-850b-c8e79aefc70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33dc859-9ffb-41f2-8f2a-84810e762b47",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633c120b-04cc-47ac-8c75-49a43608ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3ef06c-72b6-452f-ad50-b9b66bb4eade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debed16a-c3d8-4ad4-b2f0-1824a25160cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1fb77d-7b43-4364-8238-7c92409d372c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fe0117-1f54-49f2-a154-f49f9f67009e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827cdf7b-aefb-450e-8a66-e443fdcc03b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa8a8f2-e85c-41d1-9983-3ab1a3d15563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5ca586-2235-4344-8bae-91158593a83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d55a635-9ec2-4a87-b7f5-3c421553d666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc36284f-3bce-43d0-a685-2dd24c37e987",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8df2d6-2727-487f-b2ec-6679683d1f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc08d005-8183-408f-90da-f7223ea3bed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc2046-1244-414d-bd57-bb0434c2f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee8b48e-69cd-4b4c-8e40-2954a5164377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318043a0-95e9-41e5-8536-3898e7123bf0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9681b968-ab28-42c0-8636-50c02382e6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86350bd5-9753-45a7-a346-882cfb9e9459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a47222d-301c-4a6c-9d60-cbb903d98ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3537eabc-8dac-4451-8b14-ac9574f447b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003fb1f2-d29b-4dd3-b430-7bce1ec730d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ae7b76-8c44-4f09-9ef0-bfd80b287c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e0755e-fbb3-48b2-9b48-94b99d6c1708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c065e8-917b-4ae1-94d2-7beb0b1ebf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced2a026-e4f7-4abc-bb3e-7c49c8c3ac36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb1a04b-0ae0-44f9-8e14-6b055fd5d698",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cb9dc7-16b4-409c-b0fa-90ea6c6ef954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df95400-2029-413e-9d95-bc3a29c79faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6668db-9ea2-4a65-9ba7-1d5bfa8755f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "650cbdea-17e0-40ce-92a8-ecef355cee1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b3bf5e-896a-40a4-bace-c667e57c70a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e30f45-bcb7-482c-bde0-939a710d2f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3e0527-9fdf-4c5b-9117-bdeb3e138ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befcd41d-d2f8-4f61-8fc2-5e0dfed937e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c64535-6862-4f1d-9064-9c78cb4e159d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bab9b4-ba26-4179-a4e2-4ddf276a2324",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e788f18-292f-4a45-8679-8b1122c7a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5008bccc-4f42-4c36-8b1f-e74a0d3c1afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654cb2b0-7481-4d31-80a5-fe7256298f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc12fe3c-fa7f-4078-83be-0c11ab6a2046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62ef50e-85cd-4f8b-a9c8-8877aca77983",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d084b2-ca08-41e3-b2dd-2c4a1e2cc079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653973b4-5954-4597-82ac-d4ea0347494d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af0f387-b021-472d-a9f8-6b7ae21b65d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340844ad-c0bd-4855-9239-4f6c7af876db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c96c32a-5683-4757-aea5-ea9c8e897987",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789ac2a8-f473-463d-bceb-d01300acdfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a804a4-be85-4430-a50e-93621cb7af2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f94ea-1af7-455b-b74e-b1cf912b76f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f1593c-114c-4c5a-ace1-71ca25086312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa4f7ba-361f-4726-b4fa-927559634683",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57008cd7-4e82-4f99-a252-fbccb7d7045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233bcde0-673a-4a71-a23a-bedbbab58b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5501531-bf85-465d-b2a3-1a7dba0f315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf0b15a-7a7f-4560-935a-fd53efa56c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435dd6d6-e3f3-4481-8773-28993532c500",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1a1743-19a1-4279-9eb7-531ada9a8987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417f69f1-c61c-44c2-bcfd-659216337293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfb3b92-bcb1-4cc8-9827-15573fd309d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c211351b-6234-485e-9e7b-1ce6986c856f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ec40e-b8a7-43e4-963a-156bf759d842",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ed9087-db87-4607-99ff-e36d886a3842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa631da-10d8-4f01-b3a2-98a9e2c66b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089d0b68-f2f9-4405-bece-474bd5e2e992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6435ecdb-a0c4-40c9-afbe-f16259c20b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26faba34-3d22-4357-8ad3-90813b89b711",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdbad61-f2aa-4f79-b6fe-7999aa3ff1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b240bf-eea9-43b6-9513-c2ed75c498f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b889fefa-6870-4b88-80b9-5055afc27230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d89d28cf-b67d-4257-b9d0-958a330aa948"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a50f3bde-9cbd-45c0-8745-a121fe1fc68f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "539b301b-9687-4cb5-8247-4b24e343ae49",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e658e0-68e1-49d0-8ba8-512838081315",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "884579b1-2055-4cfb-a094-47b9725e2ff1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36300986-35fd-43e0-aa3b-a459b834f8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2370683c-ef97-463b-b295-67d7e56f903c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d05f607a-6135-469a-a61c-41431d3f6dc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac2e4a5b-44f8-4167-a411-1518275bf799"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7baa102-93ad-4f05-97b4-9c93ea9655af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7602ddb4-3342-41d3-a2f3-1e64a0cba368"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1737c7b7-e3c3-46bd-a27a-eb389f7afd10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0fe1b139-5f28-4390-9ade-238a781d5ee1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb998232-31e6-426a-8006-70986e91c2cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ac35ae8-3057-43d7-a4cc-34136e872756"
            }
          }
        ]
      },
      {
        "id": "018e9907-b234-4f1c-a8ef-01b8e26a4ee6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d30dd5ab-568d-4e0b-bed1-ad19716092a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4662a3bb-a3d6-4014-9a8f-fc8f96246820",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d533928a-196b-4acc-94f7-d3b8f4c58c60",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac63cc6-5f97-4865-8670-6fe679030197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a888af09-0cf3-4e63-b709-66c46ffbc0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8f461b-e17f-4d39-bc9d-8f8d216ba611",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1de9dd-9c12-4dfe-8dd1-6df5f440ba43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064bfb24-0909-47d6-9f8d-c97f6db057b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144bd60c-76a3-48ca-be91-27d57656175d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45334013-b0b1-4232-8683-4142e29f88a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49bbe92-29d6-41f7-8bc9-4cb44221ca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe0a89-afd5-4dd7-9b52-41454086b8a3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca24915-bc9b-4bf5-b4f2-ef2cd0265870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a64e5be-4d0c-4d64-bfd2-3b3fc7df6e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb95bb2f-c282-41dc-9478-9311aaf7a8d9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbb8ca8-a1de-4980-83bb-641b00ce2dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce534dc2-6040-4d97-8a43-5b58b5046e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2989dbba-a040-4c21-916c-075b294aed94",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7f75c-bcda-48c2-9ff4-2b377c413edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc826284-1e15-41b6-b1a6-667c14827e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09fd866-de21-4252-b480-7714f0e90dce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0a62b6-2be0-41f2-afc6-2cb366dfbe1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15fdb80-db76-4f28-b476-faf77c3387bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8478f92-1658-4144-97f7-5c89580fd3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b4fc86-8f30-442f-83bf-f656e03a4cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61405108-a1ab-4dc5-8db2-1b22741f33e5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbeabd-3a27-4aae-b104-19cf7d58b01e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b196e401-f730-48b9-890a-77fa176abf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c90ccc-2a3b-475c-b9bf-9df48ab63fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a72ef36-059a-4143-9559-70db3d27865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686428c7-88ea-4a2e-afd2-41e230339694",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cdd86a-0710-4f69-94bf-91358890db97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fde2354-41a2-42a1-8970-324c11b63ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1366c581-36ab-4a53-acbd-87aa6bc68206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0963f030-5dbe-43ce-8e28-f452ab47273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a25ce0-b2da-4ca7-8cbc-fa2b368655c9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503502b8-f772-41bc-bee2-d09eeeaad225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b886372c-b52b-4737-b9df-09353b77a74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacc44e6-97e8-468f-9721-78d289d41a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23643347-6452-446a-a430-dfbe407ed99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970cb3fc-91eb-4f5b-bca9-4e5fd52309c9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c16da4b-b7f9-4c40-b8f1-1d1a18a7037e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965f88bd-9930-4d70-b2b6-cae26abb781c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eebdd61-ceac-4265-8c83-f3831c548de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda248a7-b0f1-4e1e-915e-a4a6cc66c80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fddbbb05-1de8-4506-888c-9b28ce1eee15",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e8e747-b582-46a3-8b59-aeb184750184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa792fd-b932-4cbf-83c2-90ac37c92269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e4983b-c06a-4b0f-9ac4-ab108ffce0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387197a2-5bca-41d7-87d9-90a0964658c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf02141-3937-443c-a60d-6f66c444ef54",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d129a32b-28ad-4b32-89a2-75a87929bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baabd59e-3c61-4ffb-a0af-4c22ecd3c5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba94615b-72dc-4019-a56e-3c74cf764556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406ffece-d11e-46b1-9f9f-59f799e4e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8512f0df-c99f-4edf-82b1-d242b1147b9f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f327de4-4985-428f-ba27-bc8eb054b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044a1c73-8a6f-406b-a490-74d7ae6d9d42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf42226-980f-4504-b71d-bac7ad704c66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a36012-61b8-4e2a-aec1-d8e493608c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e01924-3cff-4b6c-8446-0978cf2d450d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61032ee5-94a3-4e2f-9b89-7c9e42770a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2c371a-728d-4903-83be-f0ac6007edb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b4218-8eab-477d-9b94-fe5cdd3baefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15d3ac9-0115-4937-ba9d-1273b44f7faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1a8ae6-8a33-436c-8fd2-0561c5d65761",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6079f3-f0de-40d4-8205-fdb915e95fed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c87e80-cfaa-4061-9cdf-2fddfc51a9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe4c4a4-45df-42c3-9caf-157ba4b0288b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11a7aaf-78d9-49e0-96f8-57c998aa4627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246ca6d7-1be1-45e0-9f8d-4c8f0e0425c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e678d9e0-f8e9-4aa0-8e6c-c3a3d3c9d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35741ea4-4e8f-4daa-b7a7-1d5d3a6da602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bba1419-738a-447c-9a66-5029b37bc6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "362deb0c-d9a5-4b79-8d9a-a7be373caa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1a01b-4fa7-4fd0-9a36-c675bf217ca6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd581bc-17bf-406f-a32d-42569a320094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75a0688-8d54-483d-90b3-08080346cbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c8ca5-00b0-468b-9aa0-a584fd841fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8817d9-d0b6-41c3-a705-5bd7b84d2c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fc799f-17e3-4d63-9d86-3816ee3393ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9247ec99-f822-4e31-bf9d-b9b60dd367e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbaed145-bed2-4ab5-920d-36820ff948ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d724541d-74cb-4a02-90c4-35f00359bd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67fa8e4-1edc-41b9-9a00-b94b84be38f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f2b4b4-c28f-4043-8b33-cb1f3d059e97",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8a15d9-8093-4988-8217-7cd1fa3c2746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90976855-1fda-48df-ac4b-dfe551ebee15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7151fcc8-a36f-4bb5-97ca-d00edb3d8a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8b2e06-1453-4bae-9585-5c6d1c6d5627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcf9d94-bb57-4713-9efc-c98c4c7c0c42",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6594229e-819b-44e8-aacf-54e355206b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d190f611-e2f8-4750-977b-87d8efaa82ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a612ce-2d75-4f56-a9e2-c310d0f6e87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40cb4ec0-7c5c-4c7f-94aa-ed4baee5637c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354c696a-8c05-4365-8591-b335693f6aee",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8ba04e-12cd-4165-9f37-5288e3eab055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430e85cb-40fa-4b92-b40e-36a6bc7dd495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d94d93-fe07-412f-912e-9f80f3c5adfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cdf6d9-e9ad-480c-b0dc-fd1d231c8dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f0dbb9-f0f9-48d3-bd47-301d3cd9e1c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eab7e7-f67a-4c10-b01b-67957c4c991a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5d6002-ec0f-4df7-8c79-093ef7dbaeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3898f9b7-e664-4f92-9544-abacc5125d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b520837-dd6f-448b-8bc4-279ef0fe3955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab43aec-844b-42e8-9633-3a01b03ac1a6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b336fbf6-7dc8-408a-a08d-d0268db876f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93242b97-cbfb-4032-9703-ce7cb1b09b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1594ce4c-f731-4b02-b72a-f00b51bd46fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5ea055-8b87-4de8-a25f-23b948ddb368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e00ad4-3920-4d42-8c98-64a21c502cf9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22aebd7d-0eff-44f3-8acb-3b73796f5bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b17f369-213e-49ac-9990-8dc0f77071d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f15ccf-a7b5-49a0-b442-2539dc495d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16ca824-30bd-410c-a5ef-24488746972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6202327-14dd-40d7-8366-d8c05206da77",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32611973-d477-4a2a-b403-7dc966b12a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a804317f-7d54-4440-a23f-a70546d770b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe08c70e-99b7-4ab6-a6a4-1d42cd90ca4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e228f1-52f7-470f-aa43-7bd6f34c0404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eaf80c-885b-4f9c-ac44-ea2ad33143c9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a7549f-a121-4c50-a125-4303bc220f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf006f63-8bb9-4e6a-848f-8bae8b6ef561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0788312-d19b-469a-be60-eaf2351d3332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4577f901-365a-4384-bb5f-083c04f76e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4ffba2-94c7-4465-9678-37f473661693",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac07e28-b3da-4cc5-ad33-0b8444188416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c608d3-17ab-4d54-b20d-7fd055afd0a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cb0f9a-3463-4257-9c04-8f66c5e0b60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707d0c1c-93bb-4ce4-905e-46aca2cd68bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b6cded-6108-423c-ac2c-79e56a84ea54",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a49f89-f49c-43f1-92fc-b03478e655d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318adddb-b426-4923-955d-dc4454890b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81576d2-76f8-4a9e-86bb-588f9341a8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3ccf8a-092e-438c-ad94-1d96a887312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b780aa-9916-456a-98b3-c0ed1de200bf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63c90f0-13e8-44d7-9107-57de223ae6bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d40cf70d-4863-44bb-8df4-e234a81e57fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c93ae-b6cf-443a-b108-f5902c3eb552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2611d922-3cbf-43a4-b10c-82b1b7d4388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df0c8b-e171-4056-82f5-9c39ea0d86d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adc29c0-e11e-4728-97f6-23893051dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4240fee3-1b97-46e3-9803-383d7f63349c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eb5210-8722-4277-82f4-da87e4e78ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c5695d-2658-45bf-a762-e4c940a17999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cf7aa9-5257-437a-a661-99795de2fcdd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4983291-7559-42e2-8ebd-71ecf62986fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d6db2f-e506-49ea-b99f-3dab21d18147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe765f9-1b13-4ffa-a618-cc50e9afe0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c921e6bd-623a-4923-bd78-596ca0771160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbfc70f-5214-4069-8e1a-50c2a1ac9b65",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd2d617-1f14-40c5-938e-3d49f5fd59ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4def17b1-a9fd-4eb2-8aa6-2eab3576980c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649f2270-9543-47cf-88c0-4aff089b89df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5469d31-c4f0-44fd-abf6-b6a4915b2a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff3b255-1b35-4e19-807c-a00b360cf3ba",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444c029f-a4bd-41cf-a170-a9833445f86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9122367-f7dc-491a-a5dc-16b969ed5230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8868b6ff-eaec-431b-b7c4-982a4d42c119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b9e999-995a-4b43-908d-67f6f23e2cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c9a19c-a50b-44fd-8a66-bdcd63079927",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5885366-6d3e-40d6-8027-c3d7a5d7cf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549ff2ab-be79-45a5-88a6-a4cf35a7b2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c2b2a-dc14-4d3d-875f-1ad9ceab841d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c679f27a-4f9b-41a9-b9d6-1a4784d34684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6954583-eaa7-4b31-9d9e-3f46b6bf0aee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bc8c0f-d19f-48d3-af35-f185f604d59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ba525d-be89-43f3-8312-0f02a6c3e323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b90998-a2ff-4a1e-a69b-9e4384fa149c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d366abc-8077-4fc5-84e9-c46461d299d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f99b078-64c8-4a03-8eb6-6771b2a8d265",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fff34a6-f2d3-470d-a86d-10fb62cf816c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ce285f-b00a-4705-8a2b-7cf85e58b8a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1084d1-1e5b-45f0-9ca9-a1d0e23339d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f658fe38-cb84-4f11-bb89-4c5a123d2ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57eb669c-a2b8-4bad-aa4c-1e1ea2ab3f38",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fd174c-9686-492d-82e1-c5b16e6efa69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c521639-4cd5-4b84-8f0e-e28d7c9a1f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfabd497-7080-471d-b902-8a1707bc3701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abcae63-2b5b-4fac-abf7-b6c786b0a9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0368c26-7ce7-452a-a1ec-cca9748c9beb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe6643-4e95-4793-ac15-ddb79f8cebab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c707bc90-56f3-40f3-b1a7-be2be53a78f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb60ccc-b4e3-47b7-8ce9-060f4dcd9486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7405b4-20ee-4955-97de-492ceee05946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62cc433-08ea-481e-88e7-cbb9821581f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc3a9f6-661a-436f-ba5c-dc5dec20fd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db25991c-561c-4f99-8bb9-ea917526e159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b06455d-39f1-4b5c-901e-599d37fd1135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0757e02-d1af-4d8f-90a6-5f4580cf8f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2145b66b-fb60-4b9c-95f1-73b833876949",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c233c109-f38e-4eca-99b1-46fe77e6e4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab9e8af-e63c-4333-bab5-5e681ae1a14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d9cd30-9f80-4225-810a-83e5d74aafa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437e1758-3664-4076-84b2-af327cff157f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67d4953-8e87-436b-a4f6-ab8c6a7eed61",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cde7c6-a26c-433c-a4f9-5b19cce46901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff8ea91-9bdb-42bd-a74b-9032e559c8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0892e61-cb18-4d09-a4e5-8bafdb9885da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e18427-aeb5-4a12-bc93-bccbfd12374d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1425fbb3-777e-4f42-a0dc-7c4d461afe9e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490836fb-3775-45a5-bdb4-52ef4791d505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ad7c62-81da-4c33-9a28-292ae453615b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "261a8e08-b4cc-41ab-bfbc-e65a9764f063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618f49c9-e993-4610-9832-2692549c7579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576df9e9-c77a-4e7e-893c-087a1f1543d2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4131f835-9889-43f7-95c6-74c2913d66b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f280228d-c58b-4dc6-9228-4f0b5cd23e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0f56e3-f21f-4da3-8843-271a3955ad71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7689b7b4-78be-4512-98d2-b7bd56f9a75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0ad624-e9eb-4871-b958-d077cbd90dee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edff9b85-8955-4f23-9c6b-f9a261d4a85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb01df85-d2a2-4e8f-a109-72f9c1bef100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82794077-d5e0-472b-b231-169d04d7d745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136de8d8-3b5d-4471-b568-7bd0ee6a9826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3653599e-d579-4c5d-990e-cf169e150e32",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d714f075-0d64-41a9-b1ea-dcf70a76bc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afcc0d9-3b40-45e1-8f9f-82cc519d2d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec10519-8a87-4ffb-ae67-e64a68147437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cb1bf9-e6d1-4c1c-8f97-b5ef5eaaa977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a638a97e-0ec5-4997-9b6d-085c6504fccb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbb5a91-2421-4ea0-b4da-f66af418f481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1360433-adf6-42f9-a865-ab07e7515aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0494727c-d7ff-41c2-961f-0714e7f13a82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be90434-d3b8-4074-81ff-3189a3087d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea1414e-c8eb-447d-98a7-6ef5b4ec8d8d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e2a11-2bb9-4fb8-80ff-68a58cb2ebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a50c78a-426b-4fd4-bccc-b65dbea1cdd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c824467e-3748-49f8-8831-14926691aaa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6614aec9-1c47-48e6-ada4-94dbe8e13a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907f44c2-e785-47cb-a30d-0dff4388328d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573537e4-06f1-4518-b2c4-7b0c264d7007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb61eaad-3595-4375-ad65-7a0a1670dd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4762e953-f5e3-4fcb-a403-b80af68898e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e5733b-32ba-4937-8862-39cb658ad2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a20239-cddb-4b14-8349-5fe0a1351d0b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e10adc6-6673-42b1-8cf4-1c7ea0eb97ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c798de1-e9b3-43df-ab0f-0d5c1ba8abdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73adabaa-62c4-410b-816f-25b2892f8f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923269a8-a462-4672-9d83-347523cbd72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6309ba1f-2a8a-425b-8afe-654edb06091c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51450547-f3d0-4b69-9f45-a522c76340f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55bd49c-79f3-4794-8001-0a41df331ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0aaf8-219d-40a5-a959-f25884e51feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c88e9d-ef2a-4d9e-af41-a54dc290dc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981c53ce-b9a5-4012-82d4-405bdc5cd0a8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5756fa4a-b1a8-40ce-b1d9-35ff1b8154d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a698db53-f2ba-4bc9-a79b-2d3cfee5474a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dda6cc2-4717-4164-8b0f-0b7d11c1bc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3809439b-51e9-4a95-9bdd-435215905953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa7e61f-41b8-44af-8eab-e954a7f2d151",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcc3aa2-9606-407a-98e0-fb20eccb4c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb375ac-4c7d-4d54-b627-2e51bd8ea08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe34830-ec69-4fb9-a86b-d8d7b2fcf86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139d82a5-5ab6-49fc-9771-aedf4de32983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdc32fd-154e-4508-8b6f-b839422fc5ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6395032-f23f-408c-92b3-48b4dcc09310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17306854-d1e7-43fc-8e46-6d6724e825be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324be36b-e6cc-4b65-8cd4-bdce2e4c66bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4beceb3-ca93-41f2-bc3a-156ac7c55a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eab54b-5710-4c16-b30b-10a20223465e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c30279b-6b04-4264-bda6-51ee25ae69f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374c1ee8-a1f1-49a4-b824-60da150ce5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e805f4-5a0d-492c-b1db-76b319c36c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7862f5-c0dd-4165-89a4-77ce43807c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec84cb18-9e9c-4561-97e1-1130f7fb0411",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565b8c69-7ddc-4b9b-b936-91838240e6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8308989-9f5d-4a29-927d-aba6c467c9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fae540-3c51-4e20-bdd6-40c435492419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9f5f68-99bc-4a55-905d-5682bac70b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9457cf52-d040-4d87-9c27-8729a51b174b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24204eee-bc09-4eff-b519-0f8ea013bd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44350002-3ebb-40a8-90eb-37030eb00b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec3f783-1ef4-4d68-be12-eeee1d144adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb282fc8-7fb5-4347-a21c-f7c010cd495c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b68ee3e-6a04-4b71-9c9c-494dcb7c923a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590f745c-9729-4843-b0ad-4d8da0107161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4231e035-84f8-4c34-ae32-b2c4b3bd8ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82715379-dfdf-40d4-ae12-82bf28806ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10079b70-66ab-4f1d-948d-69f661d722f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b83a643-3e3d-41b3-8ce4-750a88f4f596",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fc6693-56da-4d15-82ab-1a28c8090f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7bb072-a27f-4128-b502-76cbb537852d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f416b5a8-8abb-49e5-836b-b5c167cbc992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0d7bef-ce0b-48ab-aa08-35453a6829bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2162c2ae-ba89-4184-acc9-858d0c1f49c2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eed86f-b637-4d65-970e-691f585520dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ba47bd-c531-4c36-8a08-6188ebec3405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ac35c8-6e93-4409-b216-150c5535d8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b01e326-7c8b-4b63-81ad-824e33ed541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02c1605-d08d-44a9-8eb4-31a459daad04",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af39ece0-3016-4907-bbf5-88052214112d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3a0a10-6ad9-425b-9038-b28f30a50b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9710db5a-a2b8-482d-ac36-d3af81025ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4e2c3a-e925-4944-a6a0-1967c2b47307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd622af-1cee-45de-9b02-6f7b6756bb0f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68541a6e-ac3b-4dce-9c29-d1231b7d82b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ebeaf4-ee63-439d-b48b-547e89afe62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc4dfb-b913-400d-ad46-f48c397a4f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efe7e64-70fb-4d9a-9242-4355925f9126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240e52ba-7203-4884-8b73-3fd15eb1ca5a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f952d116-34fe-4a1c-ab15-a794764cf0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166ab997-50bd-48cf-bf4a-8d9bc8ceba61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b18966c-c49a-4931-888e-7fc3d6fee74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f528ac46-bf13-4881-930f-0e675fc8808c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db9c33c-63c8-4241-9017-918ce4cbc5f4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83155e53-7fb9-4257-8d87-1f32a712e25c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e281698-2344-4625-a951-dc245a34f243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccf34a7-b852-4a47-a18f-085f16596412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a42080-e6da-457d-a1c2-b47022781ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdae82d-78c9-47c0-a114-57b0ecb93ee4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9b74f3-14a8-4d07-a94a-1066a62efc80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8e0e85-e024-4cc9-97f4-143da79aebab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b985b4-bf45-47b1-9e7e-436ce1ce240b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f3793b-a32e-4bde-b306-b8876ef227b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90cd4f5-0a77-4d71-8044-83b931f34ffa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6bc187-b971-4052-9c04-d9a457aba33a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8bbca4-976f-4d86-b864-cefb0117ddd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18876142-d40b-4e95-8ce7-591d7fe33451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec36e84-0bf6-4801-801c-229b3db68f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a5fbdd-cb3e-464d-8eac-68eb8d6c519a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12da6442-dacb-4438-a881-d62a356befcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d4946d-8583-4ca5-ba3c-0805b4b68969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b59364a-cb7b-4cf5-9861-186e7fc0e25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eaf4b31-9308-4390-b85b-0a60f9ddb92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126d495b-0c10-4f31-9baa-d75994a92c9d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3605016e-4863-45ed-bbe9-2621485c9e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eec943b-0566-42a7-a1b7-80878843d5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7580c95b-658b-421b-9f29-c45512fbe57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9695d692-2924-447e-acc0-3944e12b7bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72688a9-2657-4a2e-afb8-48e8ab8139f2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37ca442-0520-453d-a703-7a2ded4ba9b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4093ddd-c648-4795-b634-2a0d09e8f66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a31a51c-40bd-4220-9b18-dfdb27e6c770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e4d96d9-aae8-4d2a-bb9a-a152ec116aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044763f8-ec8a-4780-b293-f6fa4f1d7067",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213d6162-0610-42ff-8bdd-15cc71dee435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45cbe6c1-d7eb-424e-ac5a-bc9e9bf7996d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da642021-7c58-47b2-9c67-8a042ba1cc7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1293a1f-4379-4773-bd81-1ae418eca1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a3aa04-edbd-453f-b7b1-a88b39930017",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36398aa8-0fd1-4661-b69d-70b0fcce4951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6be1e21-b556-4fec-ad94-fc57795ab670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459532a7-8ab4-4575-9f29-dde5335f31fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864aadcc-6736-4711-bb85-7a8aaa00bb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca73da2-c09a-4b5a-a49f-30e8831736de",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d66fa16-46f6-485d-afd8-9537d29c5230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b73cbe-0073-41b8-892d-0a869729c1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6299c15-043e-45cc-8b65-bfdf4c9ad6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb2f660-61eb-4ce2-8e87-44df75478606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bcd9ae-db7b-4366-bfa9-c848122e61c7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30125023-dc4c-42cc-957d-c52f8d9fce2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31dd8f25-25ec-4cba-b18f-ce1b64a75097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7743f49c-8e28-41b3-bd31-f9b7438b4bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1c1cca-c00a-4529-8f10-5d4e90935e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dab194-c42a-4e9a-be25-56726e5b8c31",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42e8c76-7126-435c-8fa1-991f234be2f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7694452c-0929-49fe-b7d2-112314e2e5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8def8282-6e0d-4a61-93de-302d71ae330b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaf4561-b4df-4339-bbe4-f970665cfc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaf8ae5-d7b4-4c9d-8ad8-64ca927e0880",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecf3faa-cb27-4fa3-b422-e9301ca6b253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e12560-9490-424d-af63-03fffb97bb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5117187-d5e2-46f4-acb3-fc672a3ecbaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450e7057-96c7-415d-9442-289e2b2ab265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c928d-9e7b-4d5e-be45-a3bae31952c3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe1b36-c928-4091-a3bc-2c0cacff67a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b8094cc-4801-4999-831c-de1c5f5abe88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3541e18-fe6f-4663-a68c-c3c5dbd78b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1c5d0a-530c-4221-8eac-a13df3451cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be05ae-1de8-4792-b59c-c4b3c3c3848c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9509471a-3188-4347-b213-368dad2f552d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50431205-1425-4fab-8231-5d511eeb75f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d127bf18-2681-4dba-9470-f3bcdadcc728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76dd225-059a-49a4-a4a0-876262c09e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475951ce-2bc4-41bc-94e1-a701e6068253",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c76fe-8a6a-440a-91cf-4952fcd1b17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e53effc-8a1f-40d8-8f1a-a199bd7cc16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb159c99-fcc0-4a36-9b95-928a5fbb2593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd21773d-ce15-426f-8979-4127f3322dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1ce5f6-ed1f-4731-b2e3-cc630dc35fdb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d188c16b-85dc-44f6-a0db-80882a53aa8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd58819-d87b-42aa-9ae1-d5fb9bc6d635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a6650d-8a4a-477a-a2c2-c47b98020594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2028c83-2d72-4296-9a6c-6b3db8e2b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65135cd-9328-4ed7-be29-e9c6e4fc04eb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d34ab99-7285-4d45-aa57-f7eb1b2b35f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc6ba8a-82ba-4bcf-9e85-827afc73c26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cd8e10-42bc-4df9-975c-6ebd5da86233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78315e1d-9d7d-46bc-b2eb-143421f1f638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8813c40-cb60-43d0-905c-f47d4a2b9987",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68feba9e-5772-4db1-b6fb-508e0f4a24c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e04c588-e728-48f3-8a15-5d0996aeadd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d14d74-96c7-41ae-9bae-5f9baeb42668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735c2575-ea5b-49d1-823b-237623aba9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396ccdfe-d7a4-4fdc-8b70-4cc1dfe1fcf9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6bd871-47d0-4f17-a39c-65bfd577aec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a37660f3-8a35-4fca-b2fb-ebc443e7e702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea2501e-7ffd-4f3b-9ffa-5970c7515964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddc79fd-a53d-4c63-b65e-dec38e301a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13d407d-dcda-46ef-8345-861b4175b576",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2542e9a3-eed2-4b26-a47a-15659c386938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214c12fa-356f-4433-8170-d9b8a400487f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c213f2-0e33-41ee-a18f-bb939197827d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50d6435-4939-47ed-a0b4-d75ee0b2316f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372baf9a-05de-4a65-9a84-65dea2b403fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7cfc12-5bcb-4a3d-83c4-900991c4b519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc1280a-2cc8-4d01-9ff6-e5af47f863e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058d5897-1eb2-4013-b047-b1e5a2aaf80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35899110-7c7e-44a4-98ef-972241d0f999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721dfd67-6582-4d3f-b115-af05cef0c4ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b95e10-dfbe-4ca5-b2d2-bc35454c8953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7725bf-034f-430b-829e-88a8ea04ac07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726364c-df55-40c7-b2f8-b7da543a4bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3488541a-b2c7-4569-bee6-ae69576d4f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6522ac-f81a-4518-a449-2cdfc9fc489b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4958fb8-69bf-49e6-90b9-daa11af125a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a63e0368-e0bb-4d45-ad64-de9cc05be4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694cbe7c-f688-456f-8da6-9f517e41fff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13284b9a-6d0d-4bb0-a032-6cfa387d6dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaf2a87-1c32-4679-9d13-5f783f89417c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd9ba14-59b7-45bf-b740-3651d20ad66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6060ec73-22fe-4f80-bdd4-3a9b29ec9e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be448d-8246-4b95-bc5b-ee2e3709122e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e9444d-e6bb-4c87-9830-a563320b8450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33722e72-d1bd-425f-a5a6-6f2944aecdc2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3dc5eb-97de-49ad-be4e-919c84760ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd7244c-767b-454a-8646-1313a003742e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982e6d5c-eddf-4631-b298-121040f15f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163cda05-c891-42f6-86a7-53094b853b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb7731d-aeba-4cb9-956d-f76e8432d5b5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03bf6b3-7d51-4bba-aae0-b3c19945ec6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493ee64c-c9d3-4a5d-8a0a-542fb151b3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e02bb63-26cf-4e9e-ae69-2256efd399ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89958082-1d4e-4650-9269-b1fd1e07900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e56cfe-55bb-4477-b8ec-ad7e0e438a67",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b983b97f-6599-4f3c-b955-cdd3e0643f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "392b0996-5202-4378-8f8c-550104b90cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f654b1d2-9a38-4815-87fa-2cb6c783fb92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c52f5b7-197b-44db-9e4c-f9cc774b0ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b40794-78dc-435d-96ba-e40e3a7b13bf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54db2895-0cab-4455-98bb-4b7aa967f82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f38756c-903d-4c66-a705-99197dc4a639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9aff21-696d-4137-bd2e-a4f2ba9a1b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ee8dfb-8ed3-4596-9c4c-0707db50e846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525488e7-2b7c-43fc-b1ca-40f3ba2f99f1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6767679c-40fa-44fd-8831-54d7100f2aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08b1d1c-12b8-42b2-82cb-03108d627ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fd0f2d-e8d0-4a50-b55d-751600106d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f682445-a814-4bb2-b1f3-d26d5259cf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63e79c-775c-4e8b-b881-647baa9488e4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf07b6b-77c2-4da7-a354-6c8d86c44766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26e90cc-5c0e-435d-bce5-8c7e0dbd9ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fa714b-092f-4538-b2c8-71b7bcc0963b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459c1bbc-9e15-4db4-980a-3b0e9fb42a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf489eb6-4a22-4626-85f2-851a39273ac4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3087d581-b780-4bd9-9a97-947132cd3720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746092d6-de68-4472-ab29-015ebdaae0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac76f7fb-62cb-441f-a86b-6d8f24e9555e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb98e67-382b-4f29-aa9e-3b3e16e0effa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416c87ef-c1b4-446e-932b-03ce10d89f53",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4462e010-2554-4367-9a97-4bb31089b305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82cb0c7f-37ba-4f3d-8633-f4cc2514a32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cc55a5-dc78-4611-b661-66bcf1e6072e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9842d020-2180-4406-a594-830b18124324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65939fd1-5370-4722-818e-af2d91fea53c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9974ef9-a5c8-40ae-bbe8-522bb86e5b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71bc1eb-1b5e-443a-b8b1-8ef32bb80340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b096f36c-d941-45ab-ade7-749062bed9c6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdb3f92-8ec8-40ea-b149-87e6a7a49720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24231529-8e5c-4196-8185-1361c0ae855a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cad4418-a094-424d-b23b-896a9f2ef7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9523c14d-3e56-4207-99f2-6246b9885368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90a49eb-753b-4c12-903f-09283721f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5829ade0-67d9-49f7-bd7c-3237d9e65188"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b1c9648-1b91-453c-bb8a-41ab37aa9b05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9b053eb-859d-45a4-9605-c22cda68681a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af7e009f-2fd8-479f-82ec-d1f4827c6b71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c757d0a-4512-4ab4-a948-c0a396b76e8a"
                    }
                  }
                ]
              },
              {
                "id": "852929cb-6a68-4dcf-8a3c-dab2acb84c8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b13fd1e-ce1d-44cc-a9d9-5780aaddb012",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d7d221-1bb7-4483-b789-c3ad1b75c589",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "79a61189-63ad-4086-9a22-06ed9c9d494e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3a94e2-192e-4629-92f4-5ce1ad16fec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201e1844-a4a8-477b-b098-6fc9874a7c79"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce705307-0858-41b0-8e5c-862ec8ce8123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eace8dd-a3b5-48ac-9f03-b1b1deb21354"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cebdfef8-22fe-4b5b-a762-41cd2263e0c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa864a0f-b70c-4842-bc3d-21189c80da9a"
                    }
                  }
                ]
              },
              {
                "id": "b99e3152-e6cb-41ce-8bc1-4dc14187acdf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "84446ec4-86dc-42cd-ba64-a44f0d7a9818",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cee751a-cd08-49e4-b3d1-60f65e1db940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4e11a596-c0a7-469e-8175-5b953ba2730f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa10e623-d82b-4d11-8c60-1c4fc2d325a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f4b9be-123b-440b-bfb8-c73ed84f8787"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7fac3302-34fe-43cd-8d57-3cbe685e1761",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58f01217-1aed-455b-8948-8b4111677c47",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce367755-c005-4ae6-bfbc-75607cfca5c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "19586315-9cf5-40d1-b04c-a24d18e14c2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb95dabf-0e1f-49fa-b931-ec40ed9060ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eff6e71a-3bff-44ae-9b4c-f8cceacb27da"
                    }
                  }
                ]
              },
              {
                "id": "2cbf468d-0e80-4342-a24a-988cbd3bd01d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32676a6d-58c5-4b4b-a900-13a29e0b87cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8a5be83-57fd-4360-b305-05fd9b355e1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21bc7097-e933-4e45-b549-d5c98734b68c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7828cba9-dc75-47bd-ad92-e981b0600451"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb781309-206d-487d-9ba9-e7b8ae7ef273",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93896218-1c4a-4112-91b9-291916a137d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44c85846-bf75-4ec8-8e81-d7b5885b2764",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cedcfa35-1783-4cad-8dc8-4830aa111f98"
            }
          }
        ]
      },
      {
        "id": "3348c5c5-aebe-4c17-af6a-481529cc5714",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b38263b1-2132-4162-a9fd-8cf5238136e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b1e9d14-3de0-4c5b-9311-60a6e8a01cff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fe0b433-8c53-4662-95f8-ec6541f2e4f4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023d6d8b-ae2b-4ae2-a0c2-df1ff73aa04f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f29caf0-6478-4e42-89d7-ed8d4c1f1d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a083ccf-298e-4137-a597-319c49bc78d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01ef2ae3-37c1-45c9-a303-80b4dc479e77"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d9810d9-810d-46a3-b080-235349bf119e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c6c219-46fb-4ea8-b09c-97ccfea01231"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88cd52e0-7c10-4740-a974-cd2fda991266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bfefee9-9aaf-4e34-ba2c-3952a73495f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82bf4ac1-0023-4a25-8bcc-f765319c57f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dfde88fd-6aa1-4883-8616-e02b0eca7df8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb35e34-414b-47a6-900f-0d0215c801de",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acbbe3d9-194d-42d5-b4ba-9cab505bda24"
            }
          }
        ]
      },
      {
        "id": "f4399adf-a77d-432c-9f1c-f7395e19b94b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a48d9b0a-150e-4f4b-8505-62c8a29610bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c91d8db7-1451-4cc3-908a-66616d489ab2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7f91d1a-6c30-40c8-8dde-3859c2675fac",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3eca6-339b-4e9d-99f3-707fa07ce6df",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56bd86e4-a73c-4633-b7d6-6854b4a8530c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b315bfc5-f6b0-460c-9af3-fc306e6a16ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b79c37f-87b3-472a-8cad-a45b4ed33c17"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7f81622-e153-421c-ab8d-5e0e44b22bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac03f49f-ffda-40d4-8ea6-d3eede7fb070"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b75e73f-9e5f-45f1-98da-0a2fe95b5bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c458857-ce3d-485d-8a48-08e8755a0934"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd934d76-3c6f-4f93-a341-89cdf9246ede",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6eb780c2-f854-418d-a951-fbeca21851b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b9addad-ab05-4a5b-bfb3-9664c65857d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c45a216-a37e-4fb5-b142-0a1127efd4dc"
            }
          }
        ]
      },
      {
        "id": "ea9efcda-26ca-4171-83f7-f75ae8d1847c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7bbe4854-56d6-4042-8a64-294e299ef984",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cde84f36-297a-40d4-b78c-8aad09c3dbe2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7b0a98c-6a60-47ca-8998-d155d5fdc059",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea34a985-5117-4fa8-ac2a-f6d21c95b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a0b2086-9a0e-4807-9d41-5e124e360e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24396ef9-5a85-4edd-9eff-f68ea5499a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a72f6bed-fbab-4f4c-821a-b4f2d0310500"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d9f58bb-5afb-4841-965a-7f341896ec47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60cadd92-a82a-4bb6-b60f-424eb1984862"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41a61b1-ae98-4245-a3c5-cfa1d39a7aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "473a4a93-27cc-4a5e-8ab3-5a10049aa87f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbe61479-45e2-44eb-9277-517ba7352963",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e871e440-d3a0-45c6-a029-b02101f49290"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb37339b-f432-4669-b3f2-8e000564d2f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e316abd1-96a0-4810-8d38-1a1649e4517f"
            }
          }
        ]
      },
      {
        "id": "4e7fd841-67d1-4b4e-8e19-9c509f7f484e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71a60a2-1d84-4dfe-b23c-3afaf9261496",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2dff812-ac17-4d56-900d-468c5f1832fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0419780e-aa92-4ea1-8f9c-ef5ed10bde13",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90e42e7e-f402-4bc1-9ecc-52b80e03518a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31c53986-6cf9-4359-93f3-c31f50be2215",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.24295774647887,
      "responseMin": 15,
      "responseMax": 350,
      "responseSd": 27.335051784119013,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690677731200,
      "completed": 1690677756886
    },
    "executions": [
      {
        "id": "6d105327-ef24-4fa5-a22c-b7203b6b0856",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c04ce641-34c0-46b9-b52a-d5bf4669f83e",
          "httpRequestId": "618ecbaf-29b5-4322-9396-177ce9780b91"
        },
        "item": {
          "id": "6d105327-ef24-4fa5-a22c-b7203b6b0856",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5ae4cb5f-102e-4bc8-bfac-244a014173eb",
          "status": "OK",
          "code": 200,
          "responseTime": 125,
          "responseSize": 0
        }
      },
      {
        "id": "1f19857c-955e-4ee4-82c1-15772465cf3b",
        "cursor": {
          "ref": "3156effa-8e99-4848-8ac6-4b07dfe4151e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c62a5923-198e-4914-8a6a-0697518fd1b8"
        },
        "item": {
          "id": "1f19857c-955e-4ee4-82c1-15772465cf3b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "488d7cfe-e49a-4a37-90ae-53308ef18ba1",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "8c061943-7baa-464d-be9d-54e68b93cd70",
        "cursor": {
          "ref": "fb59dcfe-0569-4d78-a44e-16ae37118db5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d22ab8ba-a975-4ca5-a78a-599291c11d0c"
        },
        "item": {
          "id": "8c061943-7baa-464d-be9d-54e68b93cd70",
          "name": "did_json"
        },
        "response": {
          "id": "3752daf7-ff8e-4a41-acba-eb0d179d17da",
          "status": "OK",
          "code": 200,
          "responseTime": 162,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e44f5-22af-4796-944e-cd925d0e87f8",
        "cursor": {
          "ref": "fb0c352e-1239-47b2-8c12-ee29ba490bb6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a80c999-0ef1-4a70-bf13-5d32e0bd20c4"
        },
        "item": {
          "id": "192e44f5-22af-4796-944e-cd925d0e87f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f311e974-90b3-4660-8f7b-467f2a19e28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e44f5-22af-4796-944e-cd925d0e87f8",
        "cursor": {
          "ref": "fb0c352e-1239-47b2-8c12-ee29ba490bb6",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9a80c999-0ef1-4a70-bf13-5d32e0bd20c4"
        },
        "item": {
          "id": "192e44f5-22af-4796-944e-cd925d0e87f8",
          "name": "did:invalid"
        },
        "response": {
          "id": "f311e974-90b3-4660-8f7b-467f2a19e28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7e45e-285e-4319-b8e5-893393ce0634",
        "cursor": {
          "ref": "80a2d8a7-ce1c-4f84-a0fb-61e6a9b7697f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d5abaf74-5ab5-4eda-8525-6c56eb7d95f6"
        },
        "item": {
          "id": "eab7e45e-285e-4319-b8e5-893393ce0634",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef0c497e-a921-4c4f-87b3-ee6a79a9b43f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb1151a-5247-4bd2-91c1-0485496a0de3",
        "cursor": {
          "ref": "446b642b-70a4-4d53-9187-afc4bee0ba11",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0cae479c-1ab9-44c7-9d5b-8fba380149d0"
        },
        "item": {
          "id": "ccb1151a-5247-4bd2-91c1-0485496a0de3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4ea680b4-a1aa-4212-9b04-fa594301e4dd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bd1e25-b914-490f-8528-1a4ce7e15828",
        "cursor": {
          "ref": "15bc5887-c116-4550-b21d-1c6bbd368b7a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "79689772-785c-4d76-ad43-ef9d74e6eb35"
        },
        "item": {
          "id": "04bd1e25-b914-490f-8528-1a4ce7e15828",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0c8cef6f-bc8e-46b8-b19c-9b032c63e682",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10383f66-26f5-48a3-abde-75b42de31921",
        "cursor": {
          "ref": "dccdb3fb-1d58-4c2b-9d95-2ad1ab65dcac",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f862b019-d695-4036-ac47-f1a2785cd6dc"
        },
        "item": {
          "id": "10383f66-26f5-48a3-abde-75b42de31921",
          "name": "identifiers"
        },
        "response": {
          "id": "68bda52b-1cdf-432c-9491-2204ee6fc2db",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fe6d98-6008-43f9-843d-2958e6b92b9d",
        "cursor": {
          "ref": "07dbfefb-bb58-4a96-8461-51cc060163e7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "34dc078c-4b95-433e-b9a0-f7c096b2fa22"
        },
        "item": {
          "id": "a2fe6d98-6008-43f9-843d-2958e6b92b9d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5edf5cc3-6448-435b-8f1b-a4476252d0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33a6f22-ea27-469b-9a29-72d9b72e4779",
        "cursor": {
          "ref": "cfdf7d51-dc46-4e57-8ac1-6f14424de1e3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "849d7011-56c9-4845-b210-ebfe65e4ddec"
        },
        "item": {
          "id": "b33a6f22-ea27-469b-9a29-72d9b72e4779",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7c69a0ac-bdb3-432f-9074-55056b254cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5256d90d-0274-4fbd-8b81-34ce4e0a7bda",
        "cursor": {
          "ref": "7fc37100-a4a2-4280-b7e3-23c3e2b5f1a3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b29eb6c0-0450-4fc4-8f06-9a235130d97d"
        },
        "item": {
          "id": "5256d90d-0274-4fbd-8b81-34ce4e0a7bda",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b82366e7-fb4f-46ed-9585-f8cb33e05b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18c70d7-6921-493e-b001-c085ca2b8ea5",
        "cursor": {
          "ref": "c9757cd5-3df3-4abe-9825-5e51d54501ee",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "351547cc-4aa1-418a-935f-96b16679323e"
        },
        "item": {
          "id": "e18c70d7-6921-493e-b001-c085ca2b8ea5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a4673404-bb3a-44c8-baf3-9b0cc049a03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348edee0-869c-490c-9696-931dc41c2a45",
        "cursor": {
          "ref": "97a1a202-eb84-4282-b885-960316ffffd8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "78ea7f69-6951-4f1e-bed5-07caab7b7709"
        },
        "item": {
          "id": "348edee0-869c-490c-9696-931dc41c2a45",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a284b6a5-74d0-4ff3-846e-d5c9a53cb97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c316c8a-100b-4f6c-968f-58a923bc27da",
        "cursor": {
          "ref": "6cb409c1-99b2-41b2-9ff8-6a414670f95c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d434daaf-79b7-42e5-8c71-c63504282ec2"
        },
        "item": {
          "id": "3c316c8a-100b-4f6c-968f-58a923bc27da",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ce421d33-7cbd-4cce-b70b-8f8df29928d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ec30b6-79d3-468a-b6f6-f304f11d95c6",
        "cursor": {
          "ref": "7efa9416-c328-425b-8b22-1c270deb1de7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fe0be7b0-a913-42d0-83b1-0a1b6a4d7bc8"
        },
        "item": {
          "id": "98ec30b6-79d3-468a-b6f6-f304f11d95c6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f7a9ff5e-7c7c-464d-ac6a-41be817aa2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805e470c-8d91-4c54-9ce2-703f69ca92e2",
        "cursor": {
          "ref": "a2f57c1f-b8ee-49be-b5b4-41603cccb299",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b2fb3da9-0c29-4433-8304-2bfee183e8e2"
        },
        "item": {
          "id": "805e470c-8d91-4c54-9ce2-703f69ca92e2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "29cc8b9d-16af-4977-a8e1-8baa1e0fb66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0c4a24-0f44-4465-9013-b6c015b4264c",
        "cursor": {
          "ref": "e97d0500-5664-4014-b551-16c56f4403be",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eae59dba-130b-4ffa-b5ed-e5a75f5a607a"
        },
        "item": {
          "id": "6d0c4a24-0f44-4465-9013-b6c015b4264c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3c72c026-cc06-4094-93ef-b6809af886fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1471bc9e-3c59-471a-9163-156844bfd40d",
        "cursor": {
          "ref": "419988f1-0815-4cdb-a31a-7a12c33e4047",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dcb4941b-cad2-4a52-a0a9-b0e876d30ba9"
        },
        "item": {
          "id": "1471bc9e-3c59-471a-9163-156844bfd40d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a35338e9-ef52-4f90-80c1-01a1ee962ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5553ed76-da2c-4b6c-afad-41f1f60c6dea",
        "cursor": {
          "ref": "946a79b7-ff17-457d-93fd-35d1f4a7a97e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6238c6b6-ff46-45e6-9e8d-c5e1352ff1f1"
        },
        "item": {
          "id": "5553ed76-da2c-4b6c-afad-41f1f60c6dea",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c6956871-c542-413b-991e-81cefa6321af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a912896-e7b5-43f0-a827-95b823870bf1",
        "cursor": {
          "ref": "3ee4babe-309b-4871-97a9-a15cb8eb05f1",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "beac81ae-3fcb-4802-961a-f0f9c7faa006"
        },
        "item": {
          "id": "1a912896-e7b5-43f0-a827-95b823870bf1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9c052aab-95b9-4373-9202-e60749dc6825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031f96f5-bfdb-40bb-b2f0-2d6e778fcb99",
        "cursor": {
          "ref": "390b2ba7-41f4-482c-a08b-6cf832d6d528",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "846fb7e8-bbc2-4a3e-b388-91e65c67a2f2"
        },
        "item": {
          "id": "031f96f5-bfdb-40bb-b2f0-2d6e778fcb99",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6d469196-4ee9-4b78-b02e-e7ee26617731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fbdd49-d53a-49d4-baed-003dd1447298",
        "cursor": {
          "ref": "7ca82f5b-317e-4dee-88b7-e1c0d10a4cd1",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c2093f76-3ede-4b34-add1-98fd4ba7ea54"
        },
        "item": {
          "id": "23fbdd49-d53a-49d4-baed-003dd1447298",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "245cdf5f-768d-4804-89a9-e3160c66ebec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafa0df0-2b8d-4163-a304-b3b25466e378",
        "cursor": {
          "ref": "8ead61e9-97a7-439b-989d-74a438a7e581",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "97e7fbec-ec5a-475d-afb8-aa48676e3d57"
        },
        "item": {
          "id": "bafa0df0-2b8d-4163-a304-b3b25466e378",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ff169e0c-8e63-40a7-9016-6b3f0c7eb9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81835d4b-2817-4743-afac-a05b15b0b391",
        "cursor": {
          "ref": "bc60b2c9-aefa-46da-9cc9-e1c16663f0a1",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f26503fa-506e-4dbb-b29a-e7e8d87805a8"
        },
        "item": {
          "id": "81835d4b-2817-4743-afac-a05b15b0b391",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ef788e9c-cf08-4c51-acc0-768fbbfd534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ef5156-12a2-463a-a7f7-d166c5fbf4fc",
        "cursor": {
          "ref": "023be337-a8f8-49e2-bf27-2ee67de2fe1f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5a89eb87-14be-4088-a8dc-2622b0a37b8c"
        },
        "item": {
          "id": "49ef5156-12a2-463a-a7f7-d166c5fbf4fc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8bb1937b-5530-4699-91eb-e0eeb7c12520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1e2b79-5cab-4b2f-81a4-8bab106969c2",
        "cursor": {
          "ref": "fbe9f3a6-87f9-441c-9aa2-3796cde259e9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c5cb96fb-f74c-4eae-9be9-4880cc26155a"
        },
        "item": {
          "id": "0e1e2b79-5cab-4b2f-81a4-8bab106969c2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "987c0424-82ad-43ea-b644-5305015f58ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa6ed06-ef1f-4b14-85d0-6a53b50d761b",
        "cursor": {
          "ref": "06f61a31-3a6d-4d9a-9900-1865b1cd711c",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8c4cd95f-bfd4-4fd9-977a-72708fb5e3d5"
        },
        "item": {
          "id": "5aa6ed06-ef1f-4b14-85d0-6a53b50d761b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b29027d4-e21b-438e-9113-f09fe17212b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ea6a9c-6223-4acb-b935-2e712d2b7c19",
        "cursor": {
          "ref": "6047031b-c10b-4819-95a1-1fa9d69f050c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0fa16d65-5e8b-45c7-b852-4b069a433d86"
        },
        "item": {
          "id": "99ea6a9c-6223-4acb-b935-2e712d2b7c19",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "18f4239e-ef24-4eea-8ec7-bd34a6bf622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc594eb-b7cb-47d6-8a20-96765fc4bfbc",
        "cursor": {
          "ref": "977f2b5e-47bd-4746-bb24-ae528d721654",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1d5cf9ed-8d62-473f-a337-05af15e2cd06"
        },
        "item": {
          "id": "7cc594eb-b7cb-47d6-8a20-96765fc4bfbc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1acfdfb6-ca45-4fac-8f1f-c23f746552b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233ff01c-0316-4c2f-9a78-4fa6ec6c0254",
        "cursor": {
          "ref": "92558457-a611-44ba-bf1b-3d367caa89eb",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "28abdf73-d6dd-4302-b07e-e8707e0ac027"
        },
        "item": {
          "id": "233ff01c-0316-4c2f-9a78-4fa6ec6c0254",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d5ebe844-2553-4002-aec0-5dfadc440d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8fc50d-c027-40a4-8b35-fda6705eab34",
        "cursor": {
          "ref": "125341f7-d551-4dc6-ab78-bd058ece2275",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d161f7f6-c8d4-497f-89b7-33137c091949"
        },
        "item": {
          "id": "3c8fc50d-c027-40a4-8b35-fda6705eab34",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db23c3f8-d17b-439d-be08-21aeb53a9b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409d79a5-586f-496b-af86-3faf9cbf29e9",
        "cursor": {
          "ref": "451222a0-017c-4080-bc75-a0b366a3e478",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7afece26-0eed-4a46-be7a-648bdfb98a16"
        },
        "item": {
          "id": "409d79a5-586f-496b-af86-3faf9cbf29e9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "353f88b4-9fe8-458a-bf6c-4138c704782e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a18e7cc-5402-4205-9b30-4b342c4c8a02",
        "cursor": {
          "ref": "24d4e4a6-4e76-4974-8703-254af420ac19",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0580c249-31c5-4109-ad10-7152a52ada71"
        },
        "item": {
          "id": "2a18e7cc-5402-4205-9b30-4b342c4c8a02",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "368cc26d-3019-41ef-8f63-88e5e5af7a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e802eb-5ab9-4b66-aca0-a7ccc9e0c824",
        "cursor": {
          "ref": "d1fbd4fd-e4f5-4f3f-8daf-eb529d923604",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "505d4d14-4baf-45e0-badb-dc66f7affbd4"
        },
        "item": {
          "id": "53e802eb-5ab9-4b66-aca0-a7ccc9e0c824",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d27aa55c-25e5-4edf-bd8f-02ae5912a292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fa05a5-6bcf-4282-85ae-800b6f3f4b38",
        "cursor": {
          "ref": "df59ffe8-6613-4387-ae96-7f012294efbe",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fab62d1c-15a6-4f82-bfd6-6233c4d37d65"
        },
        "item": {
          "id": "41fa05a5-6bcf-4282-85ae-800b6f3f4b38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "55c7d70c-f0c0-4c25-89c3-32ccab89ed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4449904-a311-4fc9-8ab9-5d1f622df291",
        "cursor": {
          "ref": "4d91ccf7-ea72-498a-a90a-0abe91ce9360",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "66b8c5f2-58ca-46b2-ac5d-1bab2c1167c9"
        },
        "item": {
          "id": "a4449904-a311-4fc9-8ab9-5d1f622df291",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4662612a-5243-4634-a636-058c3364bbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e1a68f-e3ef-4c73-a6c9-6b511e9d8d26",
        "cursor": {
          "ref": "e053f872-db18-4b1f-8886-68d20633d930",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "19559ca8-7cf4-4fc9-9af2-4875cca7650d"
        },
        "item": {
          "id": "e9e1a68f-e3ef-4c73-a6c9-6b511e9d8d26",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e8198c51-41c5-40be-8d79-e4cb778aa16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14171f0-f44d-410c-90e0-38687c63203a",
        "cursor": {
          "ref": "c364e0c9-ba65-4b49-b1bb-4f6de85f4091",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5171c904-6646-4083-b9e6-06343bc6a4d8"
        },
        "item": {
          "id": "c14171f0-f44d-410c-90e0-38687c63203a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1dbb028e-28da-426c-a379-1302d34a9661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82892802-a045-4b1a-b1f7-65da3756df7f",
        "cursor": {
          "ref": "1412285d-3a93-48d2-b951-19e5db02ddc9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b369bfd9-1988-437d-b525-1b7cb0f5628c"
        },
        "item": {
          "id": "82892802-a045-4b1a-b1f7-65da3756df7f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2b41fe46-f9c5-4b16-88f3-22947e5f7a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521de660-c0d7-481d-932a-2781b46447ec",
        "cursor": {
          "ref": "cd5759c8-9234-464c-b994-856654a0ae90",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b2cdbbb-7cc7-4381-a0d9-90247175f21c"
        },
        "item": {
          "id": "521de660-c0d7-481d-932a-2781b46447ec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e09c617f-d790-4995-b2df-61837e02f01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51000030-0b45-4564-821b-2c70393aff59",
        "cursor": {
          "ref": "5f83b2d9-fc6e-44e0-976e-4015c4266d5c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ad2e2212-e73b-44b0-b802-a9954a3715a9"
        },
        "item": {
          "id": "51000030-0b45-4564-821b-2c70393aff59",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "50419da4-440f-4812-be2c-ae11d53e8903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17376db4-5331-4bf4-b08b-31d95ba7e432",
        "cursor": {
          "ref": "b01ffd65-a5ee-4b2d-ab15-5062fcb9fcb4",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "096088de-fe73-420b-bd3c-70eaafab25f5"
        },
        "item": {
          "id": "17376db4-5331-4bf4-b08b-31d95ba7e432",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c968616-e498-4414-9d87-37055f536ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f7134a-1381-4303-a96c-05eee2f55772",
        "cursor": {
          "ref": "2f828656-bca7-4452-a446-ebc610456d15",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "46cf83e0-0e40-4178-961a-601078761a8d"
        },
        "item": {
          "id": "84f7134a-1381-4303-a96c-05eee2f55772",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b2535da8-1318-4a75-8986-8fba29bdf974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dec26c-0c7f-4f37-a956-27bd105c576c",
        "cursor": {
          "ref": "fce890ba-3132-4ef6-b95c-c5bdac2c8833",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eaf5de3b-9f95-4850-a117-b0643f4e0a20"
        },
        "item": {
          "id": "37dec26c-0c7f-4f37-a956-27bd105c576c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "41c551b2-c621-45a4-84c2-45ea414fa97a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae68d6-682d-4cf4-b472-611978e71cb3",
        "cursor": {
          "ref": "8a309c94-7e87-4f40-91f2-b0efd10f777c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e3e6b151-5d65-404d-949c-860bd89e58f8"
        },
        "item": {
          "id": "18ae68d6-682d-4cf4-b472-611978e71cb3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8be00153-2ea5-45c8-9cb8-ae6d2cbefcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718fa6b4-f1ab-4caa-872f-234385d2108b",
        "cursor": {
          "ref": "94a5096d-6b2e-444c-9613-6cc982e15847",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5b8c15df-686a-4eb8-9ab1-8969045a5548"
        },
        "item": {
          "id": "718fa6b4-f1ab-4caa-872f-234385d2108b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9c58a663-a019-4dc4-a058-c5f5b807c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dd172b-0ef6-4fca-a7dd-826c4087ffef",
        "cursor": {
          "ref": "f4af0398-3178-48fd-9a16-c34299e814a9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eece9b95-75ba-4f3a-b931-1291d735d314"
        },
        "item": {
          "id": "15dd172b-0ef6-4fca-a7dd-826c4087ffef",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d60c3969-a267-4f33-ad63-428ca135dd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844791ce-c0f2-482a-9ac7-73b2ef8662e9",
        "cursor": {
          "ref": "00c826fd-957e-4947-b47a-550e25a40084",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "465b7f0f-4f09-46d2-a2b2-8699aaaec276"
        },
        "item": {
          "id": "844791ce-c0f2-482a-9ac7-73b2ef8662e9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a98a50a0-c4f4-4f0a-9621-4c9c6bcf34f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b60225-968b-4ccf-8809-77740e60bdac",
        "cursor": {
          "ref": "ea5c34c1-2b9c-4d4a-8545-7ffaf5dfa3a1",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9808314c-a0f7-40a5-922f-9e88532c0409"
        },
        "item": {
          "id": "75b60225-968b-4ccf-8809-77740e60bdac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f82a5d63-98f2-4c13-aa36-6bc818b50bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccfd269-29ea-4a0b-b033-37b5828a8a1c",
        "cursor": {
          "ref": "c76ebf8b-c782-4507-b603-37acf66df405",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3abfe93a-a053-494c-8874-0cbdbcdff173"
        },
        "item": {
          "id": "1ccfd269-29ea-4a0b-b033-37b5828a8a1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e3f4eb20-3fd8-438e-997e-fb5b2fa38657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2988928-9dd1-4685-aa9c-54e6dc9a1697",
        "cursor": {
          "ref": "40b5085a-59bd-432f-abaf-4cc66880618b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c40cfef8-04b9-43bb-a5ed-2e989129f6aa"
        },
        "item": {
          "id": "b2988928-9dd1-4685-aa9c-54e6dc9a1697",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "026209bd-f166-41ee-904a-90461fb27ad6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6226f658-fb71-4bee-9895-085f3986725f",
        "cursor": {
          "ref": "dcd1ac36-9aae-42db-9944-e1ff594a9e9b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c9d1a294-6fd9-497e-a3ba-efe788b2b66d"
        },
        "item": {
          "id": "6226f658-fb71-4bee-9895-085f3986725f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4cc52ca2-5193-44c7-b09f-9726712da73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a386ae8-b357-438a-8195-0728889b7705",
        "cursor": {
          "ref": "8ef51880-0947-4dac-89fe-e65525e265aa",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dbe4ff07-ca89-48c5-88c7-3cc853039e7a"
        },
        "item": {
          "id": "8a386ae8-b357-438a-8195-0728889b7705",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28d0c36d-8541-440b-893e-861519c672cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de11318-91ac-4891-a0e1-9352f8da6b7a",
        "cursor": {
          "ref": "83516492-6f37-4f2a-9cb1-7a43f42013f8",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5c7713bb-18e3-4dbd-9e76-64b077e89d58"
        },
        "item": {
          "id": "1de11318-91ac-4891-a0e1-9352f8da6b7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7108a856-907a-4f5e-839f-2b2d72c9a526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8d0856-8e15-49f5-9aea-8c2da839bb9d",
        "cursor": {
          "ref": "e005a7c8-8b80-48a7-bda5-bb8056de78f6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "684e4a99-ba99-4db8-8b49-e7ef1dd9bb13"
        },
        "item": {
          "id": "ee8d0856-8e15-49f5-9aea-8c2da839bb9d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b3fd7751-699a-4eab-a361-68861dfd2c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a9edb5-d369-43af-8899-bfeae31d45a1",
        "cursor": {
          "ref": "5e6ef183-3942-4af0-8972-f8f70d9593e2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "907c12c6-bad5-4bea-aa7b-25482dec0b97"
        },
        "item": {
          "id": "14a9edb5-d369-43af-8899-bfeae31d45a1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "218625b0-8d80-4634-ba1c-988fd303abf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e228bfa8-145d-45ea-be97-94d358e5f7cd",
        "cursor": {
          "ref": "f98e4932-3732-4b52-a2d4-399428c1ee4b",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1f0a9473-b90d-4c02-ae24-1bfde7aeb4c8"
        },
        "item": {
          "id": "e228bfa8-145d-45ea-be97-94d358e5f7cd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1a6f28ba-dbbf-4851-a50d-e5960a9d5207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5414a9e3-7b3b-4871-b25e-0932db611e7e",
        "cursor": {
          "ref": "be75192e-bb82-4d0c-a061-0f623d146e97",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "90dc590d-e512-4d7d-b3b7-e1ff277dfeab"
        },
        "item": {
          "id": "5414a9e3-7b3b-4871-b25e-0932db611e7e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7a59ad7e-e75b-492a-b7d3-98c627181efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636a2e9d-80ca-4beb-9b06-db2f638949cb",
        "cursor": {
          "ref": "47098e0e-d2e3-4ae6-bb58-bc69014ab344",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c0200abf-49d4-4377-89f8-924867c6dd91"
        },
        "item": {
          "id": "636a2e9d-80ca-4beb-9b06-db2f638949cb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e8436177-07e5-41fc-a61e-a9980252b1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6e090b-af99-4de2-b952-b5b1e4f6fd6c",
        "cursor": {
          "ref": "9949357b-b239-4caa-acb4-e4876bc27c6e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a0e221dd-a5bf-4579-8f38-68b4045ad12d"
        },
        "item": {
          "id": "0a6e090b-af99-4de2-b952-b5b1e4f6fd6c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0d28491d-fc54-4e18-a088-81fde4252a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3b33d9-aeb6-4011-aad1-4cb5c0e4b929",
        "cursor": {
          "ref": "e7cf59cc-5c0b-4d2e-8c4b-c30a37aa73fa",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0acb04f9-c6db-44b0-97a0-9abd28926906"
        },
        "item": {
          "id": "7b3b33d9-aeb6-4011-aad1-4cb5c0e4b929",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "00b2aa00-de57-4f98-87ac-a368526414dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692162e1-dad5-4c8f-9045-ae952ddfa225",
        "cursor": {
          "ref": "e45cd9cf-4a30-4725-a06a-d9475717bac2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dfb0be93-58a8-4657-8705-a20d44430750"
        },
        "item": {
          "id": "692162e1-dad5-4c8f-9045-ae952ddfa225",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "22b84d72-7dd9-42f4-b679-055e91b41bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf93db-34de-473a-8d81-59005646e237",
        "cursor": {
          "ref": "c9d95c79-cc9a-4cf5-b21a-b1e11309e2bb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "422a8122-36d5-46ef-a0bc-e62e5dd780ed"
        },
        "item": {
          "id": "4adf93db-34de-473a-8d81-59005646e237",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7aed1ba7-81a5-4584-8263-b79688149320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d830f4e6-e629-4617-92ba-cb849fac3b73",
        "cursor": {
          "ref": "33ea63b8-084a-4a4a-bcd6-98d05ad70f71",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "689a31e8-9687-4460-a7b5-cfca44b84eb2"
        },
        "item": {
          "id": "d830f4e6-e629-4617-92ba-cb849fac3b73",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fb53215d-1067-444d-a582-87ecf824f6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96eadd7-7ff7-4982-9682-7c2452fabf71",
        "cursor": {
          "ref": "eff32dc4-0bda-4914-8c74-29d5db43d979",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a2664ecc-e7d2-45fb-b4b5-6b18ea62f9bf"
        },
        "item": {
          "id": "b96eadd7-7ff7-4982-9682-7c2452fabf71",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0add7a0a-1162-4f32-8912-c0ca212d36d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87843c4-1429-4261-b054-7c68e2d99f33",
        "cursor": {
          "ref": "a016e600-0fae-4bd3-b6a9-a53db810874e",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6786e464-8a3e-4d95-b731-735d060f3b3d"
        },
        "item": {
          "id": "e87843c4-1429-4261-b054-7c68e2d99f33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "701d7020-1ed8-4895-b018-19615bbaca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e72d0d-8a7d-4c97-9e23-b17abf0db758",
        "cursor": {
          "ref": "3e60bf17-79b2-49cb-bcb0-1f110cc3e950",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "01b9a1a2-7955-4671-a9d8-5736a5522c59"
        },
        "item": {
          "id": "f9e72d0d-8a7d-4c97-9e23-b17abf0db758",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "458a59d1-8530-45ec-92c1-b9ee131d5104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764f1119-728c-4226-8bab-21112cae57ab",
        "cursor": {
          "ref": "e08e52b4-9ad4-4cd0-9852-ecd845c2c86d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6bf25e67-782c-47e7-81e9-39b21ce778be"
        },
        "item": {
          "id": "764f1119-728c-4226-8bab-21112cae57ab",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7a2893fc-75d4-4433-8941-9440bb1e2023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e177cc3e-1388-4725-a2ca-5d1f259573b7",
        "cursor": {
          "ref": "6972ea37-4e7f-48c5-8edf-7c44141bbc3d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f4fb979f-759f-4683-8a52-11aacad42a28"
        },
        "item": {
          "id": "e177cc3e-1388-4725-a2ca-5d1f259573b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "84d06ca2-db4f-4f7c-84b5-4e4392da8c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bfe5b2-c927-4f8f-a85e-0d75ba45d7a1",
        "cursor": {
          "ref": "70b9ba2f-c296-446e-b897-46c1f673508f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "51cb7bff-f0e9-454b-ba14-fb351f72dfa8"
        },
        "item": {
          "id": "b0bfe5b2-c927-4f8f-a85e-0d75ba45d7a1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0df40229-d98d-40d4-8e8a-af57e517570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9d02f8-2e28-4654-a5cf-28db6eac0579",
        "cursor": {
          "ref": "61d617ec-dfba-4097-b808-8e1e4deca8ba",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9650130c-2d3d-4aa5-b43e-16438df0fc92"
        },
        "item": {
          "id": "3e9d02f8-2e28-4654-a5cf-28db6eac0579",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "46bdf3ec-6ffb-429e-88d9-512a6c14717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82eb619-5e9c-44f0-b4d6-fe2e933f7c85",
        "cursor": {
          "ref": "0b02b86d-ce1d-4e07-a89f-342c68405824",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d9337f81-0588-4690-82df-fd78ab64d881"
        },
        "item": {
          "id": "c82eb619-5e9c-44f0-b4d6-fe2e933f7c85",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "410d7ba6-6aca-422e-868c-c57f7fffcf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346693eb-d0c0-47dd-930c-da50546ffbe9",
        "cursor": {
          "ref": "103bd17b-cca1-432c-bba8-1d88b59f0e50",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f40afbc8-8e0c-4fb5-8d23-301ac6045cbd"
        },
        "item": {
          "id": "346693eb-d0c0-47dd-930c-da50546ffbe9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4b46721f-d406-4197-908f-0d310fde7386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e3e400-2a7e-4936-8c88-72df10357391",
        "cursor": {
          "ref": "d019e643-c83b-4bf6-9cc3-091fcbe156ab",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5996cbfd-8670-42a2-8b17-0b78825e4c5f"
        },
        "item": {
          "id": "00e3e400-2a7e-4936-8c88-72df10357391",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1ff1f245-683d-4ce7-8fc9-be95bccfad19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0e9103-24f7-4872-92a4-7f6c60f31562",
        "cursor": {
          "ref": "257d3448-c16d-4183-a010-fb46ca90bc9d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "792df3c8-e4e8-480d-bdc3-959558d7d3a9"
        },
        "item": {
          "id": "6e0e9103-24f7-4872-92a4-7f6c60f31562",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80b7f23f-81b4-464a-8463-81bc9050700a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2cd9fb-50a4-4fc7-8d01-e23808d1bd76",
        "cursor": {
          "ref": "1032bb3b-b22e-4111-a83b-4fadcf909cd4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3891d286-998e-43b2-901c-a5b18d31050b"
        },
        "item": {
          "id": "2b2cd9fb-50a4-4fc7-8d01-e23808d1bd76",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e185cf36-ee7c-4ba4-a879-8c3f9759c7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dce6fc-cd54-4261-a16c-db325591c6cc",
        "cursor": {
          "ref": "76012495-c5f8-4a97-91a0-97a628d1aa32",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "78c919b9-4c1c-4e55-bc88-60a3203772b2"
        },
        "item": {
          "id": "b7dce6fc-cd54-4261-a16c-db325591c6cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9be3e48-99fb-4104-80f1-fac318c3bdb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a59098-0fa9-42b5-a41f-a409217c324c",
        "cursor": {
          "ref": "92c4ff62-9993-4017-82de-346deb772a37",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e501868-3331-4c92-b166-0a5f88e20ea2"
        },
        "item": {
          "id": "92a59098-0fa9-42b5-a41f-a409217c324c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "df4339b6-87d1-491b-bb4f-f8afd97943ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9423bc8a-3f2b-4793-a9e6-ba451c788cff",
        "cursor": {
          "ref": "92004c9e-a23f-4bc4-b1b7-03ba97b60805",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cda2a04a-ad1a-4418-8045-d1e120b9c1ab"
        },
        "item": {
          "id": "9423bc8a-3f2b-4793-a9e6-ba451c788cff",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9eec0ea7-7705-4055-99dd-3bb5558e4601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a810c1-1f54-4c7f-bfb8-8aa8297a2a53",
        "cursor": {
          "ref": "9db46eb9-6d50-490d-b19d-2d1ec07d12d6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee304470-b558-49ea-aa0d-569dc3ff461c"
        },
        "item": {
          "id": "53a810c1-1f54-4c7f-bfb8-8aa8297a2a53",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "43668a56-ed02-489a-900c-31f53bf25574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5d9625-fd55-45dc-8201-da7f7d10b019",
        "cursor": {
          "ref": "97ad5f73-1415-4138-a45f-30dbaf24ee55",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "efbb96c0-3357-4258-ac56-8c1390bbecc1"
        },
        "item": {
          "id": "da5d9625-fd55-45dc-8201-da7f7d10b019",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8f3eb6cc-9413-406f-9248-3f622fe9b95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e8d50f-3c4d-449c-998f-6be7b1dec1e3",
        "cursor": {
          "ref": "36adfd1f-dc7b-461a-be6e-f265ccc2c5bf",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3510d8da-e24e-4edf-8fcb-b3a312f5f03c"
        },
        "item": {
          "id": "b2e8d50f-3c4d-449c-998f-6be7b1dec1e3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "71f2bb7b-5032-43c1-83a2-c09b42684c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab05df0d-c9be-4942-822c-3ed06f37dfde",
        "cursor": {
          "ref": "e47aa310-3f03-459e-9480-ca89488923ee",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0c228812-593c-42a8-8aa3-4086fa48bf5e"
        },
        "item": {
          "id": "ab05df0d-c9be-4942-822c-3ed06f37dfde",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6aa54bd5-4da2-4671-8d0a-b69697419d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb5ad9a-f162-49f5-8865-b6c7496e8d04",
        "cursor": {
          "ref": "0044c6f9-1d7d-443e-95f0-ee6c47908863",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b1dd48ea-fe01-47ac-9a8d-af87eba6b49d"
        },
        "item": {
          "id": "fcb5ad9a-f162-49f5-8865-b6c7496e8d04",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "02f5033b-7e6f-4df6-8485-193f2fcea163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bc1c7c-70fc-46da-b46e-3b8fcedbb9be",
        "cursor": {
          "ref": "110299d2-79de-4269-83aa-ad44d481c94a",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fbcb512e-c34a-44e2-afb5-5eb7c6770778"
        },
        "item": {
          "id": "67bc1c7c-70fc-46da-b46e-3b8fcedbb9be",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e00d372c-56fb-4bc4-be41-e64ee110a186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4edc8f-2102-4f8c-ad65-7394e21b5b28",
        "cursor": {
          "ref": "cea611e1-04e7-4a31-9c77-3af1763f1735",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "05207c16-96dc-4b46-b81d-f41eb9b5a110"
        },
        "item": {
          "id": "3e4edc8f-2102-4f8c-ad65-7394e21b5b28",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e2c11897-11fb-477d-9b80-61cbf4575314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977c421-5266-40e8-9b76-d5e037c3c63d",
        "cursor": {
          "ref": "d9e6bea6-7c82-4f0c-a1a6-f431e6bd61eb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6c61b6ee-223c-43f7-bbad-88bcbadc5c13"
        },
        "item": {
          "id": "7977c421-5266-40e8-9b76-d5e037c3c63d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c181af22-a3d3-40d3-9de7-ebe0d3c7fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5b137-b7ef-43b5-9ac3-90becf188f49",
        "cursor": {
          "ref": "34a06b0a-117b-4b54-a65a-e24c11a01bd6",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d6088d19-b708-4d36-8a0e-95d5d04d7890"
        },
        "item": {
          "id": "04a5b137-b7ef-43b5-9ac3-90becf188f49",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ed6b831f-35e1-4b9f-8ca6-7a80252b512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4963ad32-c246-421e-9c22-9bd414f850eb",
        "cursor": {
          "ref": "a8d04cb9-d49a-436d-acf3-d3e9a5414438",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4fee13d5-4151-4592-a4b9-414ca58ed1e1"
        },
        "item": {
          "id": "4963ad32-c246-421e-9c22-9bd414f850eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bff67ecd-17d3-404a-9efb-8e1a6417894a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371f82ed-2124-4a82-a60a-e6fe560fa6f0",
        "cursor": {
          "ref": "cad2fbf7-cd83-4b4b-a4c3-91a3d9207e39",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "98ad2fee-7026-4c74-a2ae-7b13afa21776"
        },
        "item": {
          "id": "371f82ed-2124-4a82-a60a-e6fe560fa6f0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c58082b1-dbac-4af2-979f-15b6d72d7a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3cd13-72ee-460a-9e98-fda105d7f577",
        "cursor": {
          "ref": "2e4273c1-bfa6-421f-b591-f8b48e18d333",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "59d9e725-bb23-4251-a673-4ecacb61d8a8"
        },
        "item": {
          "id": "37e3cd13-72ee-460a-9e98-fda105d7f577",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aed7b198-5f0f-46f0-a26b-e19bd8261b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cdf4cc-8ef2-4558-9656-9676967d8611",
        "cursor": {
          "ref": "4c970173-52b1-48d0-8935-87fb7ce4b170",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6d5a816e-8a89-4ed5-b299-257751a68208"
        },
        "item": {
          "id": "00cdf4cc-8ef2-4558-9656-9676967d8611",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e65c8391-d83e-419e-8dcb-b45952ca80c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153ccc00-71bf-4851-a03d-b4f8dfad35ee",
        "cursor": {
          "ref": "f6099622-015f-419d-b7c4-06fd2c790dd2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c6e4eba7-7483-4a47-9f82-2990c5cdd452"
        },
        "item": {
          "id": "153ccc00-71bf-4851-a03d-b4f8dfad35ee",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2776a77f-80c3-4b6d-9a48-f4835b956bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4277845a-9239-4baf-a820-240d257b1165",
        "cursor": {
          "ref": "4e22c1a4-7e3e-4ef8-b21e-8d79195a8388",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2d5451eb-2aba-4b33-8cb1-50bea252e023"
        },
        "item": {
          "id": "4277845a-9239-4baf-a820-240d257b1165",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b0fb28bc-9a8c-4b09-be22-ff8066e25eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb3725-cbb3-4443-93d7-32b85587bac0",
        "cursor": {
          "ref": "aad65eea-5460-4b3e-a563-a64b55f4a73e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a6c8fdec-a672-4ec6-a8d2-74f29b7327ed"
        },
        "item": {
          "id": "4eeb3725-cbb3-4443-93d7-32b85587bac0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b33de839-5d6a-4239-9d01-f7670c9e56bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d032ec1b-965a-43cb-b1a2-10a08a37e472",
        "cursor": {
          "ref": "d53440ed-5834-4b48-a32f-5ead83def920",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d7397434-ee20-4534-9285-c5cd39f2d836"
        },
        "item": {
          "id": "d032ec1b-965a-43cb-b1a2-10a08a37e472",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5a3b0992-4b09-410c-8ac9-c12a8600f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd21c7d-73d5-4bb7-a5c6-4d895ebbe8c5",
        "cursor": {
          "ref": "602e3518-ed38-48a1-bc18-cc623752afb6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8e69c268-211f-4e6f-a278-1427b04a512b"
        },
        "item": {
          "id": "8fd21c7d-73d5-4bb7-a5c6-4d895ebbe8c5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "790a9188-81a0-4072-a8fb-3651c5cf57e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc8b69d-3a7f-4d0d-8328-8e61be693f20",
        "cursor": {
          "ref": "634a5bc7-b732-4f9f-8d30-1571d5597072",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4d888552-f102-4e09-96c2-6dea9f4c0523"
        },
        "item": {
          "id": "2cc8b69d-3a7f-4d0d-8328-8e61be693f20",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "25510f43-0511-4c76-8a5c-d4942d677f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1d0d10-f946-41d5-8129-23f9813294d8",
        "cursor": {
          "ref": "f874c5f5-443b-4895-ab16-d6509a2202a2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "184587c6-3ccd-4a5a-acb4-30e7a6931e12"
        },
        "item": {
          "id": "8d1d0d10-f946-41d5-8129-23f9813294d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7b0308e4-0f47-405f-9b22-45bfe5673dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a42ef6b-ddcc-4bda-9517-45fe5934adef",
        "cursor": {
          "ref": "189c5b22-fb38-4817-b1e2-9dd4896beff6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d41e8d2b-90ef-4c04-a96c-5fdb8560e0c4"
        },
        "item": {
          "id": "5a42ef6b-ddcc-4bda-9517-45fe5934adef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e03df6df-0812-4a40-aacb-de7cda6b827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5a841a-68d9-4644-bf7f-eb304bd313c6",
        "cursor": {
          "ref": "4d05d3f9-72b5-40e6-b2a5-975c76181ddd",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ef4673ee-699a-4ce5-8419-ffd2dc6b76dd"
        },
        "item": {
          "id": "2c5a841a-68d9-4644-bf7f-eb304bd313c6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8d7781e4-867c-41c5-9420-03672d973c34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3b909-df0f-4afc-9246-3d4d90cbe2cf",
        "cursor": {
          "ref": "91738a2c-a2b1-4c47-a4c0-a9d07540a31c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e29d587f-e2c1-4fd1-a5ff-049b622e3a27"
        },
        "item": {
          "id": "9bc3b909-df0f-4afc-9246-3d4d90cbe2cf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "09bb0391-1761-4cf8-a354-75d0238c7ed7",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9647d076-9975-434c-bd75-2a7163c69c88",
        "cursor": {
          "ref": "b9fe9fd9-c394-4f4f-9343-3281c52881f6",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "11463d00-781a-43f0-b536-32e0bbb7254a"
        },
        "item": {
          "id": "9647d076-9975-434c-bd75-2a7163c69c88",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0fc9fdaa-1ba5-4175-9dcb-28c6de0aa22d",
          "status": "Created",
          "code": 201,
          "responseTime": 350,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffb0548-04a5-4427-b096-b4a000cc57bb",
        "cursor": {
          "ref": "22284a85-a6cd-402d-862a-5f86b63d350d",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7283cc3a-16db-464e-90cb-46e6a53e4ad2"
        },
        "item": {
          "id": "1ffb0548-04a5-4427-b096-b4a000cc57bb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5e3ddfb1-f4a3-4ab1-9125-6cada1df9f7d",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9011354c-73e5-48a0-b542-00d1dfd71332",
        "cursor": {
          "ref": "78a850bd-b6ba-49b4-8bc8-2b502586fe11",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "86006122-5804-4604-9f42-08d003d3c124"
        },
        "item": {
          "id": "9011354c-73e5-48a0-b542-00d1dfd71332",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dc9c9976-fa10-4054-9813-a8e17af10440",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb745a7c-0597-4279-806b-ffb452d52206",
        "cursor": {
          "ref": "08701829-a7c4-4cd7-a594-8e236ac17f1c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b053c13f-b872-424c-8d25-5fd4fdf6b963"
        },
        "item": {
          "id": "cb745a7c-0597-4279-806b-ffb452d52206",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "690eb072-1413-4130-ba4b-349a5e7a7f56",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaba1493-ec02-4f1e-bf74-27dbdc0e47eb",
        "cursor": {
          "ref": "9c7aa2b1-7665-407b-a12e-ddf3e98fe724",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5931a42d-700d-4635-baf9-c0f1255e2a8a"
        },
        "item": {
          "id": "eaba1493-ec02-4f1e-bf74-27dbdc0e47eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "337beb98-a822-4a58-8a63-e61e8bdd625e",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847768cc-509f-4cac-b4da-afc2dcd0cad5",
        "cursor": {
          "ref": "7ec10380-dbcb-4bfc-bf70-626cf8f6a01a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f056f54-02e8-4167-a336-993ebe6366d2"
        },
        "item": {
          "id": "847768cc-509f-4cac-b4da-afc2dcd0cad5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2dbba8d6-9f29-48c7-94f8-d8efe1bab1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beab14c5-db9d-407c-a0c2-29218f40a7b4",
        "cursor": {
          "ref": "d7748095-e23c-476d-b750-c2bb61cc36e0",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7e1c54ae-0b74-4b40-a912-f40dba84c0f7"
        },
        "item": {
          "id": "beab14c5-db9d-407c-a0c2-29218f40a7b4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64a26061-8767-4e56-99d9-47a4c514bdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c788fa-926e-476f-8548-f5d4824d02c5",
        "cursor": {
          "ref": "87efc46b-9685-4b33-b5b3-fede108e60ff",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7405eb45-25f3-491b-8b22-ee138cf54b73"
        },
        "item": {
          "id": "94c788fa-926e-476f-8548-f5d4824d02c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ce86d0c-9567-40f0-bf0f-ceb71a47a2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556e2e28-c742-484d-b470-bd2d3169e6fa",
        "cursor": {
          "ref": "1875a0cb-1fe2-4024-818b-5eba48aae24c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "87152463-ed19-484b-92d6-b8fb8dca1e4a"
        },
        "item": {
          "id": "556e2e28-c742-484d-b470-bd2d3169e6fa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1fe35a5e-f6d4-4c03-ab24-7a023d9f4bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc5befe-2b1a-49ea-8063-f4e7f3d5306c",
        "cursor": {
          "ref": "bf929055-9c35-44e3-a5e8-1496405af1c8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cfe4b865-dc24-4bd7-bf4e-7279803da8ad"
        },
        "item": {
          "id": "2fc5befe-2b1a-49ea-8063-f4e7f3d5306c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3b252520-06e9-4978-9b05-1a1363891b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f96d64a-2b16-4e63-9253-020b139b7b5e",
        "cursor": {
          "ref": "5c37c74b-bfad-4fe1-b2a4-46aa8902345b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9407bae8-a69a-49b8-b2dc-80ef0620d0ec"
        },
        "item": {
          "id": "5f96d64a-2b16-4e63-9253-020b139b7b5e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1e574127-b8ef-472b-a10b-95908dd5a45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac4e21e-cb02-453b-9ed0-30afc9b097bf",
        "cursor": {
          "ref": "ee329bf2-fcec-423b-89a5-aa4c50597d54",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f47e0aea-14a5-4ef9-8ef8-6d4d43a9a626"
        },
        "item": {
          "id": "5ac4e21e-cb02-453b-9ed0-30afc9b097bf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8e233431-dcea-4ebe-99cf-715450257d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c087518-4ec1-4f36-bd05-c635fe7dd3e1",
        "cursor": {
          "ref": "125390a0-9021-4bbb-a1ed-c346b12f97f8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c084065-7c8e-47c7-9257-e68e9fce2161"
        },
        "item": {
          "id": "5c087518-4ec1-4f36-bd05-c635fe7dd3e1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7b470ffb-62bc-40ec-bb6b-d722bc108b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b22d92-ac2b-4f9b-ba24-97ea30f54a66",
        "cursor": {
          "ref": "cade3227-e9d4-482a-aacb-215527d56608",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7843e948-f770-4b6f-b6af-6c01c31cdf16"
        },
        "item": {
          "id": "d9b22d92-ac2b-4f9b-ba24-97ea30f54a66",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6bfa2a80-9f3c-4de0-ba2e-538517fd9fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b07d98-4166-4e35-b4a2-3acfb53f59b8",
        "cursor": {
          "ref": "494d913a-fdce-4bfe-a28f-3749c9bbc85b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1555e3a6-155d-4818-b8db-654fa2cfaef3"
        },
        "item": {
          "id": "06b07d98-4166-4e35-b4a2-3acfb53f59b8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2b6e720f-ab24-4bbe-ae28-9afd3c90b431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d363cf7-0c70-4800-8f22-30eb94e35449",
        "cursor": {
          "ref": "6b6b5fc5-7efa-4ec7-82d7-e0c0d0dd274f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e1dc27c9-dd4f-47e6-9542-e1bc60a14e3b"
        },
        "item": {
          "id": "0d363cf7-0c70-4800-8f22-30eb94e35449",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2554cef7-1106-4ee0-b4a5-003369a6159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc0e505-a19e-46a9-b3a9-ce06a84c3c22",
        "cursor": {
          "ref": "7a5aa7d6-8d54-424b-89fd-9e4a5d47594c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cc383d35-6f79-4663-8fa9-867d8d4fad8a"
        },
        "item": {
          "id": "9bc0e505-a19e-46a9-b3a9-ce06a84c3c22",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "045146ff-295b-49fc-9774-f4579f85bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7a074e-ac13-475b-a3c6-d216b9c50cc8",
        "cursor": {
          "ref": "9bc74a2e-b1dd-40aa-90f0-877fefab7a5d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f76ae2e3-6f49-4ff4-99aa-4ad14de2db27"
        },
        "item": {
          "id": "3c7a074e-ac13-475b-a3c6-d216b9c50cc8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8c80f398-3357-4188-a3a8-dca19cd407e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f4b73-063c-41a6-8b52-4d5c14a615db",
        "cursor": {
          "ref": "c0ba22dd-5d78-48ea-a5f3-fd9dba70ffcb",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "db77ec32-4dc3-49a1-9e9e-55d398252336"
        },
        "item": {
          "id": "158f4b73-063c-41a6-8b52-4d5c14a615db",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff997bbd-2445-4b09-a00f-54cb4e422220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f859a424-2377-403e-991b-ec9a1266dd42",
        "cursor": {
          "ref": "ffa580d6-2c02-487c-ada6-3b655cab8ac7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bce60023-66aa-445e-8758-4f337dab6fef"
        },
        "item": {
          "id": "f859a424-2377-403e-991b-ec9a1266dd42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ade5938a-dd70-420e-be1d-83dcd7ebf014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd1c8d-e597-4edc-9efd-ed2a3467193a",
        "cursor": {
          "ref": "acb3ce4c-9fc7-406c-9e68-5e096efef1a9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e9ca578-5fdd-4ae1-8944-ac3d5d11eb61"
        },
        "item": {
          "id": "62dd1c8d-e597-4edc-9efd-ed2a3467193a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "339ed13b-3596-4b77-9f60-620cc0bb859d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ff512-314a-4263-bd16-28f0aab4b6e5",
        "cursor": {
          "ref": "a9b18616-8bdf-4e99-af85-9a8f3b8bf73b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cdbdbf08-4b31-4ce9-a9b8-79f02ec124d9"
        },
        "item": {
          "id": "9c9ff512-314a-4263-bd16-28f0aab4b6e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7aaf0dba-05ba-4c6c-a290-7d7d5beb1cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2fe078-3702-455c-952f-7e9a2ed89935",
        "cursor": {
          "ref": "3ac1b459-123e-43b4-97ef-d5f4fdd41374",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "066733ea-667c-47ca-bb85-a6d7a4ece3a6"
        },
        "item": {
          "id": "ef2fe078-3702-455c-952f-7e9a2ed89935",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ff0f0af-5ebb-47f2-ab0f-d37a1ee3535a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d41aa5-9519-4374-a7dc-d966123f76a3",
        "cursor": {
          "ref": "857bea3c-5f08-4ad3-a3f4-ea2a2dfd3228",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9f46cb1b-e1ec-4552-8717-01b505b69f62"
        },
        "item": {
          "id": "72d41aa5-9519-4374-a7dc-d966123f76a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd8cb9e4-9656-4ab1-91f6-5c6848e8238f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a7ef6-0639-401f-b450-d1b11d4509c9",
        "cursor": {
          "ref": "40c8af7c-9f27-4ae1-a9f3-04caad392fad",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0269c27d-1952-4e7a-b3c8-e5ad6a745e0a"
        },
        "item": {
          "id": "404a7ef6-0639-401f-b450-d1b11d4509c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "424aae8b-8482-4468-931f-9ec1635e62da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8dd8bc-8102-4595-8263-8910b54b9619",
        "cursor": {
          "ref": "c1d67565-488e-4a11-85ef-99170454d3ab",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6327c526-f2aa-49a7-ae78-0a455748b29e"
        },
        "item": {
          "id": "4c8dd8bc-8102-4595-8263-8910b54b9619",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "987c6ef5-4afd-4af4-aeb8-c4f9d767445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf366ac-7ebe-4aa6-a6e3-72e835b4b7f9",
        "cursor": {
          "ref": "47308dcb-f5a4-4e98-86b9-d31f3ab7b2b7",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c17cd61f-8d08-48dd-a0a3-35b495e2b8d6"
        },
        "item": {
          "id": "aaf366ac-7ebe-4aa6-a6e3-72e835b4b7f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b5ab137-5685-48da-8b08-3a89ef1b5f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f1088-3712-4290-9c46-880ce91ee842",
        "cursor": {
          "ref": "5e249dd1-cbbf-47df-9aca-b2809484d928",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "add93cba-0cdc-45cb-b7a8-cc99373e5c00"
        },
        "item": {
          "id": "d92f1088-3712-4290-9c46-880ce91ee842",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39c69898-e181-4e40-a712-80b9a0576557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4464ddd9-656e-4d62-bb76-bdf512abef6e",
        "cursor": {
          "ref": "4f423491-e4e0-49bc-9636-60ab3fe5fd2d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2955dd68-ee9c-4265-81b2-78f3af256134"
        },
        "item": {
          "id": "4464ddd9-656e-4d62-bb76-bdf512abef6e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ad7de551-2ab0-412b-a041-31a93699e2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe4b39e-2306-4a2d-98e1-9bd7169c4a25",
        "cursor": {
          "ref": "ff9c6fd2-c492-4d73-a455-958c1b611d72",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dbed2b58-1ed8-4c15-9f65-eb5342c50d51"
        },
        "item": {
          "id": "cbe4b39e-2306-4a2d-98e1-9bd7169c4a25",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca149889-ae4d-4152-8e16-4b4f8707c290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4529f54d-4771-4840-ac33-a95fd5d6e937",
        "cursor": {
          "ref": "b97d0c4b-33cc-4d57-b1a7-603fa31384c2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6f253833-c796-4188-bc07-a35f16550fa7"
        },
        "item": {
          "id": "4529f54d-4771-4840-ac33-a95fd5d6e937",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60e19bf8-adca-4090-8bee-d81611c96da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a35370-f057-4dc4-8036-e0b80d2a0238",
        "cursor": {
          "ref": "6aaf9e34-174f-4d74-82b5-94bcc3996875",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4b937a33-38f5-45bc-82b1-dc6a43c262e3"
        },
        "item": {
          "id": "06a35370-f057-4dc4-8036-e0b80d2a0238",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "66e9ea05-a9dc-454f-a146-7ae29468c609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d680c7-e680-4ceb-84be-1bb1aee163e5",
        "cursor": {
          "ref": "ca98a714-f6e4-41dd-b890-1cfb51a95967",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "163d0067-2c3f-4ca5-b804-4de22724aa2a"
        },
        "item": {
          "id": "d1d680c7-e680-4ceb-84be-1bb1aee163e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "005b328d-4663-4814-b607-1ebbdd199c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb10b37-560e-4ffd-ac45-c8e6124c75ba",
        "cursor": {
          "ref": "679b6d1a-181c-40cb-a655-617e24e1e971",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "55797375-ccef-419f-8d12-ba4a4eda0137"
        },
        "item": {
          "id": "efb10b37-560e-4ffd-ac45-c8e6124c75ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4932bcf8-e674-42bc-9fbd-7aac03fd2e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9079bdd0-dc0e-4f44-a1d5-27b47d15fa5c",
        "cursor": {
          "ref": "8ccdc203-5ac7-4eac-ae8f-727990728758",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7db3e4ea-bf66-4e19-8d00-e9a329fe2994"
        },
        "item": {
          "id": "9079bdd0-dc0e-4f44-a1d5-27b47d15fa5c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "be420d69-377d-499f-921d-d7d91166d0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea181a4d-6942-4e04-b1ef-9888a3fbdc06",
        "cursor": {
          "ref": "b88c0362-eef7-4457-8a5e-d57271d680e6",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f55c461f-b042-4496-9816-48c93ae9628b"
        },
        "item": {
          "id": "ea181a4d-6942-4e04-b1ef-9888a3fbdc06",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "86474cb8-c8e1-49ab-8904-147b559aea5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50dd044-c6dc-4612-99ee-be12f9212ffa",
        "cursor": {
          "ref": "a1696b94-58c0-4e29-99c9-9e002232974d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0a8f140a-9c2d-4785-8244-1b252906d93e"
        },
        "item": {
          "id": "c50dd044-c6dc-4612-99ee-be12f9212ffa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9d7f200e-430f-4437-9c19-8b841748887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bd1977-11f2-46ec-848e-b7e8026d90c4",
        "cursor": {
          "ref": "a1e4bb89-4694-4d16-8347-922e4d11a861",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3110e313-bf71-4dda-af05-4605e857bc3e"
        },
        "item": {
          "id": "f3bd1977-11f2-46ec-848e-b7e8026d90c4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c39f2e7a-b27e-42b6-a03a-0810e7098fd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331e8061-de20-4118-a86e-b1eb0af82e9f",
        "cursor": {
          "ref": "bdfab123-3ccb-4789-afac-33b831dfc35b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6e2ee2a2-0656-449c-b567-c275cb5cdf8e"
        },
        "item": {
          "id": "331e8061-de20-4118-a86e-b1eb0af82e9f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fc4a423e-3ff8-401a-b62a-326c0b037738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec772a8-eedd-44ca-9fd0-510c6749acca",
        "cursor": {
          "ref": "ff371125-4e74-4966-b6e4-1e8466ae0cee",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "da882433-095f-41d5-95ee-b4c30b3e34ef"
        },
        "item": {
          "id": "eec772a8-eedd-44ca-9fd0-510c6749acca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "abc14436-266a-4ba9-b737-4c2cf519c950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8525ccf4-98b9-412d-b812-30ebe4065ca1",
        "cursor": {
          "ref": "969f2e3a-966f-41d4-a1ba-39d430be3da5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "08c4175e-ea92-4de2-98e7-85bad0139791"
        },
        "item": {
          "id": "8525ccf4-98b9-412d-b812-30ebe4065ca1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "361682f8-c47c-4632-99d0-c2d1b2d7b4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce0acd2-b3b2-4ed9-bf9f-ee928536758b",
        "cursor": {
          "ref": "7efd3c4a-afac-4b5b-ae1e-cbe2bfa6602d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cd249f1d-c68e-48d2-a88d-1f2a8dfed24f"
        },
        "item": {
          "id": "4ce0acd2-b3b2-4ed9-bf9f-ee928536758b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc5401d8-b930-4c6c-983f-d58683112319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ec9a17-de4b-451f-995c-b27c14d2c4b2",
        "cursor": {
          "ref": "12d83475-55ae-46a5-8597-e149f62acacf",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e2668631-de10-49b1-aa7c-454aa1000216"
        },
        "item": {
          "id": "24ec9a17-de4b-451f-995c-b27c14d2c4b2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "86758e70-5a76-40de-aded-a38ce3d7f6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b16fce8-08cd-4845-825d-98a564dae15f",
        "cursor": {
          "ref": "a2f2466d-2eea-44a7-aae0-56e5064eaf69",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a702ac2d-f44a-4c96-a3a9-8dd8cbc53593"
        },
        "item": {
          "id": "0b16fce8-08cd-4845-825d-98a564dae15f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3c82ae75-2a74-47fd-85e3-14299dfc975b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef3616a-f755-42ba-ab38-1d38ae5702c0",
        "cursor": {
          "ref": "e145c844-2912-4579-8a68-844e8bb44f0f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e4f76974-59ad-4294-a27b-b293c1c2ce85"
        },
        "item": {
          "id": "bef3616a-f755-42ba-ab38-1d38ae5702c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b609ffde-c13a-41b7-ad20-dcaaa3d08d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b642e94c-e8f6-4825-970f-8ab99eddca48",
        "cursor": {
          "ref": "1de4a5ce-1646-48f9-8aed-710f162074fa",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0db4845e-6bd7-433b-8f17-871de55618ff"
        },
        "item": {
          "id": "b642e94c-e8f6-4825-970f-8ab99eddca48",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aa07a54b-3489-4095-a722-050525819835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31f359-9cf0-4a7c-8abe-92c4ec72528d",
        "cursor": {
          "ref": "538908df-b1d4-4837-94e0-d0f67a107dc3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3e655d20-a9fb-4905-a0c1-e8b06f83a506"
        },
        "item": {
          "id": "ca31f359-9cf0-4a7c-8abe-92c4ec72528d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "aa19b93e-7f47-4656-9f74-af93232fa31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90c7cfe-8c33-4215-b50b-41ff9c5be3e2",
        "cursor": {
          "ref": "63797011-3482-4197-a1c8-62c78ff1bb29",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e0fcdf8-a56d-4157-8a33-3b41373ef2fb"
        },
        "item": {
          "id": "c90c7cfe-8c33-4215-b50b-41ff9c5be3e2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "36032da0-d713-4c05-a6fd-5734d3a49a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d19be10-3953-43dd-9308-003bde2c84ac",
        "cursor": {
          "ref": "f878f378-a2af-4aa1-a962-dddbe8ceb175",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "69d41814-fa53-4666-abeb-3c58efbe40ed"
        },
        "item": {
          "id": "4d19be10-3953-43dd-9308-003bde2c84ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "635be795-4476-46ff-a85c-86f04a825773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400f5b42-612a-4cf2-b1fa-f2800468aeef",
        "cursor": {
          "ref": "0fc3f39d-b873-4daf-a58e-4b5889239f47",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4e5a732-7a96-47d6-a974-0b17483e9ca7"
        },
        "item": {
          "id": "400f5b42-612a-4cf2-b1fa-f2800468aeef",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "74ebf4fb-1c1f-4c77-8b3a-a7780c412c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db15a1ee-9ea7-4f6d-a7db-19be19444ee0",
        "cursor": {
          "ref": "480bb3f2-6cbb-428e-93da-0e3275c86726",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "03677f0d-5146-47f3-af2c-b6bef4b0458c"
        },
        "item": {
          "id": "db15a1ee-9ea7-4f6d-a7db-19be19444ee0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "34472d2c-1b51-4e95-b945-30c67017ce68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88d3f6-4b42-46e1-b341-b27ab434b770",
        "cursor": {
          "ref": "dd4cc020-9416-4ff6-acf2-dac48a72d239",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8f2eb4b5-22ab-4897-8bb0-7a30bbf3cae7"
        },
        "item": {
          "id": "7b88d3f6-4b42-46e1-b341-b27ab434b770",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f59fb04e-bc37-44c4-916a-6d9806b65101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca104a-eb4d-4433-bbd0-e906b1eb163e",
        "cursor": {
          "ref": "5eb252cc-aa5e-4079-b35c-394d4c69c12b",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "af19a535-2c31-4c42-9d52-bf41bf624fb6"
        },
        "item": {
          "id": "eaca104a-eb4d-4433-bbd0-e906b1eb163e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ac8be27-467b-402d-8d3b-50599b5f18a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0226b46-decf-41f5-a8a9-e70d490d4cca",
        "cursor": {
          "ref": "14f8bce4-059d-4daa-b8dc-41286a50abb9",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ccd1426f-5af0-4012-a674-088579b6f8b8"
        },
        "item": {
          "id": "e0226b46-decf-41f5-a8a9-e70d490d4cca",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "20c7e06e-658d-4c25-8b46-9adf299edec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6385b1a-ab51-4c57-a213-f7a61cd56ad7",
        "cursor": {
          "ref": "1ad6a61d-4900-4d57-b2df-47dbab1e9c4e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "565fb05a-786b-4255-b601-fb1c519cde82"
        },
        "item": {
          "id": "f6385b1a-ab51-4c57-a213-f7a61cd56ad7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c42d5450-20de-4dd4-a597-9478c5e6863f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceac57a3-e61a-4d25-926f-80b146728096",
        "cursor": {
          "ref": "ed68f0ec-c1f9-4f00-8118-ed2845e12dbc",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cb84d05b-2b97-4bac-bfb6-f5a8a582a263"
        },
        "item": {
          "id": "ceac57a3-e61a-4d25-926f-80b146728096",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2a4c0b12-9dc1-4b5e-be21-9fa459c7fcef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15ca2dd-3f1c-4c55-8cee-3d26f5d8f259",
        "cursor": {
          "ref": "764e2707-a4ec-41f7-ac4d-ab103463a300",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6f8b38fe-41ee-47b7-b331-ed0a9ce5a30b"
        },
        "item": {
          "id": "f15ca2dd-3f1c-4c55-8cee-3d26f5d8f259",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "59e11e70-8073-4a7b-a469-9ad65359c465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4551d4e8-2a96-4e78-9774-78a0cd531ded",
        "cursor": {
          "ref": "f8026014-bb86-4817-8249-f6733633978e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1a86b570-ee0e-447f-a3ce-1b4d40dd32f6"
        },
        "item": {
          "id": "4551d4e8-2a96-4e78-9774-78a0cd531ded",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2cc7c32-f69a-408c-a97c-0da313c5f18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611d833-0d82-469c-bd52-e36cf6ff9861",
        "cursor": {
          "ref": "6b2b3fd1-0247-42a9-8081-5504ec2d95fb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f582a120-549c-4a6c-b100-6dc9e8847afb"
        },
        "item": {
          "id": "2611d833-0d82-469c-bd52-e36cf6ff9861",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11f6501f-0ce9-4557-967f-87e2c57850f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c57e30-90a5-4c34-bf88-380757b9e679",
        "cursor": {
          "ref": "c891bf8e-87a0-46e7-8a09-fd9ca6c58920",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "600b5c41-db53-4427-a6c8-f9e02c5d5862"
        },
        "item": {
          "id": "39c57e30-90a5-4c34-bf88-380757b9e679",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ecd730c-e82a-4387-8e76-078f32116192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac4a861-0e09-49cc-a2b6-38b05d613ba5",
        "cursor": {
          "ref": "03e92a35-9e6a-4c32-b3f4-fc09ce3cd980",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "875d9841-7598-46c1-9d7a-b2ff386b4be2"
        },
        "item": {
          "id": "4ac4a861-0e09-49cc-a2b6-38b05d613ba5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3a03dce5-8638-4faa-a0fd-0ee04b26031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33dc859-9ffb-41f2-8f2a-84810e762b47",
        "cursor": {
          "ref": "4f3eec0d-e4a2-4c92-8f80-f537a6dcc23a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b477759-20b3-4e61-93a2-c6ef8ae6fc19"
        },
        "item": {
          "id": "b33dc859-9ffb-41f2-8f2a-84810e762b47",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f58a06ab-1e7c-4372-99b2-bd00724b36f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fe0117-1f54-49f2-a154-f49f9f67009e",
        "cursor": {
          "ref": "ec6e84ca-ea3c-41ba-81f4-c8ba1404558e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f1aeccd6-1c2e-4b0f-b1fc-d127344c8e0e"
        },
        "item": {
          "id": "d7fe0117-1f54-49f2-a154-f49f9f67009e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35d8e88a-faac-4265-aeff-3d3987395164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc36284f-3bce-43d0-a685-2dd24c37e987",
        "cursor": {
          "ref": "8ab60072-3639-4e60-8413-07727e01e7d6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "feb625d9-aa93-44f2-8ca5-0fe6c3ed4250"
        },
        "item": {
          "id": "bc36284f-3bce-43d0-a685-2dd24c37e987",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "891821c4-ddf3-4276-bba4-6595708be515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318043a0-95e9-41e5-8536-3898e7123bf0",
        "cursor": {
          "ref": "f9052f9a-942d-4f16-9cc9-815726f7ebd3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "61cb1a58-f6e0-4092-9009-d04474a0eed0"
        },
        "item": {
          "id": "318043a0-95e9-41e5-8536-3898e7123bf0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e0ba0289-01be-4d05-9d06-310b664551a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003fb1f2-d29b-4dd3-b430-7bce1ec730d3",
        "cursor": {
          "ref": "b1fbf81a-fb30-4bdd-8376-3c040d0159fc",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eaaed1c1-0fd6-499f-bdf3-2ff7620931e7"
        },
        "item": {
          "id": "003fb1f2-d29b-4dd3-b430-7bce1ec730d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2469e14e-9e68-484c-8642-9a8f176f6f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb1a04b-0ae0-44f9-8e14-6b055fd5d698",
        "cursor": {
          "ref": "2e1cf41c-fea7-4fbc-9a81-5eaa8da7df59",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3d8002a2-e718-42a8-9281-9111f205b63c"
        },
        "item": {
          "id": "1cb1a04b-0ae0-44f9-8e14-6b055fd5d698",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4ab36ee3-ac8a-4894-88b0-21b2340cb587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b3bf5e-896a-40a4-bace-c667e57c70a8",
        "cursor": {
          "ref": "b4176fb4-f069-4bfe-9348-33bf834433e4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0f19b4fd-3a32-498b-abb4-5039dbe741ce"
        },
        "item": {
          "id": "d1b3bf5e-896a-40a4-bace-c667e57c70a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2bb5c8b9-ccbf-4412-9152-5bfd5a43630b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bab9b4-ba26-4179-a4e2-4ddf276a2324",
        "cursor": {
          "ref": "26cc5f71-4db5-4d79-a671-7aee91cd1ab3",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ddce9023-d049-48f2-83ec-9ff03f7c93b9"
        },
        "item": {
          "id": "81bab9b4-ba26-4179-a4e2-4ddf276a2324",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f72cd847-1ce7-42eb-a869-5e8ffc2297a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62ef50e-85cd-4f8b-a9c8-8877aca77983",
        "cursor": {
          "ref": "98ea11cd-f758-42f2-8872-c1e1662f9123",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f3a714fb-e54f-4465-8a1a-15bd2b87f19b"
        },
        "item": {
          "id": "d62ef50e-85cd-4f8b-a9c8-8877aca77983",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6e27e690-14a8-463c-9791-946413f473d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c96c32a-5683-4757-aea5-ea9c8e897987",
        "cursor": {
          "ref": "ebe32aa9-9ded-4c41-a50e-daeaa847052d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "181ade97-5ff4-44fc-ab52-d596d4b9610e"
        },
        "item": {
          "id": "0c96c32a-5683-4757-aea5-ea9c8e897987",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf94e10f-aace-4c51-badd-2df1107e1409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa4f7ba-361f-4726-b4fa-927559634683",
        "cursor": {
          "ref": "248d70ec-b0b5-4ba8-b282-112e462ef179",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "39e511da-6725-4252-a109-c17b2fbc2208"
        },
        "item": {
          "id": "daa4f7ba-361f-4726-b4fa-927559634683",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5abdb7a3-bcbc-47df-a121-d873e6e52583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435dd6d6-e3f3-4481-8773-28993532c500",
        "cursor": {
          "ref": "c804a9a4-1526-4a6f-8d74-1d0d2d384ebf",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4c8ef8a9-ebea-49de-89ba-ad1011e62851"
        },
        "item": {
          "id": "435dd6d6-e3f3-4481-8773-28993532c500",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e237cf0-5840-457d-a45d-492bd3a55bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ec40e-b8a7-43e4-963a-156bf759d842",
        "cursor": {
          "ref": "329339f7-c834-4b7f-bf5d-381df245e166",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8d4306d-2e76-4153-a1cd-bad19e7ceac6"
        },
        "item": {
          "id": "1d9ec40e-b8a7-43e4-963a-156bf759d842",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "872e3165-1fa6-483d-8a18-7d470d52b474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26faba34-3d22-4357-8ad3-90813b89b711",
        "cursor": {
          "ref": "5774dde4-16ae-444f-b767-c157c1206382",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "69ff622e-cf2f-4d20-949c-3ada0bc4a5be"
        },
        "item": {
          "id": "26faba34-3d22-4357-8ad3-90813b89b711",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7fde30a6-d5ec-4fc2-9925-43fdd96a3aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539b301b-9687-4cb5-8247-4b24e343ae49",
        "cursor": {
          "ref": "3608a737-4ce9-4655-b8e2-932773230679",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cde74af1-6c86-4367-b1d0-7cb4a3953482"
        },
        "item": {
          "id": "539b301b-9687-4cb5-8247-4b24e343ae49",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db5ff064-7ada-4d1a-a59c-f6496b8bb316",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d533928a-196b-4acc-94f7-d3b8f4c58c60",
        "cursor": {
          "ref": "2b55fab3-1f75-4610-9c4c-287ff690f411",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a208e29f-6e4c-4cc6-af4a-5d0795b8be22"
        },
        "item": {
          "id": "d533928a-196b-4acc-94f7-d3b8f4c58c60",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cff930c6-5951-4c3f-906f-9406ddd74acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8f461b-e17f-4d39-bc9d-8f8d216ba611",
        "cursor": {
          "ref": "8ab36999-d470-451b-8ce9-6499875d5844",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1778dde4-dbb6-4e60-8e82-fb269cebe5b4"
        },
        "item": {
          "id": "6d8f461b-e17f-4d39-bc9d-8f8d216ba611",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f9747c32-2543-4f89-ad62-435a27fb468c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144bd60c-76a3-48ca-be91-27d57656175d",
        "cursor": {
          "ref": "ce6faaa9-3329-494c-8872-ca76f6d77365",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7fcb33c6-4b79-4b73-a3ce-483522640419"
        },
        "item": {
          "id": "144bd60c-76a3-48ca-be91-27d57656175d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "41da2e8b-d6f9-4182-a195-d5039234e11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe0a89-afd5-4dd7-9b52-41454086b8a3",
        "cursor": {
          "ref": "1afc85a7-8b43-4ddc-b8e0-07481fc4ccb0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "74de42bb-b969-4013-a92e-8fe1776086be"
        },
        "item": {
          "id": "72fe0a89-afd5-4dd7-9b52-41454086b8a3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b1cc8504-64e9-4118-84b0-18db90b658db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb95bb2f-c282-41dc-9478-9311aaf7a8d9",
        "cursor": {
          "ref": "500a6204-fa27-40bd-8eba-69a8a363b4c8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4ccb0d29-1bd8-43db-a24a-f6a46f0930ba"
        },
        "item": {
          "id": "cb95bb2f-c282-41dc-9478-9311aaf7a8d9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "94cf9100-615d-40ee-8ce8-7a9986e26505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2989dbba-a040-4c21-916c-075b294aed94",
        "cursor": {
          "ref": "0e024a3f-f2db-4462-8825-0ef3d2f78390",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "caec48ea-707d-41ac-8a87-8ff35a46f151"
        },
        "item": {
          "id": "2989dbba-a040-4c21-916c-075b294aed94",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6811d3a-8645-451d-81d4-890510c3cd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09fd866-de21-4252-b480-7714f0e90dce",
        "cursor": {
          "ref": "ec2900af-bd7a-4c60-b473-71442b220db5",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1a5ab100-2b16-481d-9037-336f347b45a6"
        },
        "item": {
          "id": "f09fd866-de21-4252-b480-7714f0e90dce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5e4f5769-042f-4bb6-ab73-83915bd8c487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61405108-a1ab-4dc5-8db2-1b22741f33e5",
        "cursor": {
          "ref": "fe33047b-5fe1-4b7c-b3bf-7d4fcfdcf83d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86cea452-94b4-4223-8789-af72556957e4"
        },
        "item": {
          "id": "61405108-a1ab-4dc5-8db2-1b22741f33e5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "47d42752-825b-4889-8b3b-4a836d5c173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686428c7-88ea-4a2e-afd2-41e230339694",
        "cursor": {
          "ref": "88d99c5e-85cf-4f33-b199-af9c6fbd73b6",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b80aced-20eb-4911-b8e6-27eb99f5ec90"
        },
        "item": {
          "id": "686428c7-88ea-4a2e-afd2-41e230339694",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "af040ddc-efd2-4308-a945-b9753e4d4c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a25ce0-b2da-4ca7-8cbc-fa2b368655c9",
        "cursor": {
          "ref": "993c581e-e576-4f44-868e-ad1174451137",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e5c85c86-c1af-4d80-abd7-eedcefd07f6c"
        },
        "item": {
          "id": "35a25ce0-b2da-4ca7-8cbc-fa2b368655c9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4eca80eb-dd41-453e-8e43-1aa131872a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970cb3fc-91eb-4f5b-bca9-4e5fd52309c9",
        "cursor": {
          "ref": "a83d3a26-9894-44f7-8810-9f59cf179087",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dcf7efa5-15d2-4ff7-88ef-0298ad8aa016"
        },
        "item": {
          "id": "970cb3fc-91eb-4f5b-bca9-4e5fd52309c9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d034ae94-7211-47e8-85d8-697e4c1f6c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fddbbb05-1de8-4506-888c-9b28ce1eee15",
        "cursor": {
          "ref": "324c8f60-9dc5-4cd1-a082-692f3ac6f252",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fb43526f-88dc-48d5-8cb4-69142ad21681"
        },
        "item": {
          "id": "fddbbb05-1de8-4506-888c-9b28ce1eee15",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "de6b3e1c-87fb-4f65-a52d-f65f4cdaef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf02141-3937-443c-a60d-6f66c444ef54",
        "cursor": {
          "ref": "544eed86-221a-466b-aa4e-e29c80b0ebc8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "219b560a-058e-4097-b10d-143c453ddfca"
        },
        "item": {
          "id": "9bf02141-3937-443c-a60d-6f66c444ef54",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "10315abd-5c1a-408b-a0fb-8ccddf62011b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8512f0df-c99f-4edf-82b1-d242b1147b9f",
        "cursor": {
          "ref": "869ba672-72b0-4eed-8659-28af9b5ba0f9",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4fa4de17-e350-4427-8d21-a6d2af086454"
        },
        "item": {
          "id": "8512f0df-c99f-4edf-82b1-d242b1147b9f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0e7827ab-bdff-4294-9c70-152c03c49a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e01924-3cff-4b6c-8446-0978cf2d450d",
        "cursor": {
          "ref": "f572be16-2baa-46fb-9b14-2ecf3974a0c9",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f461c641-f74a-48e1-b22d-014ee9a80199"
        },
        "item": {
          "id": "60e01924-3cff-4b6c-8446-0978cf2d450d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7e8cb149-3379-4eef-a4f0-af1556770852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1a8ae6-8a33-436c-8fd2-0561c5d65761",
        "cursor": {
          "ref": "88539ec4-25c9-4dd4-9771-6bd7f1c6e826",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "926053d8-49dd-42b7-bf12-0bc7520f39cc"
        },
        "item": {
          "id": "1a1a8ae6-8a33-436c-8fd2-0561c5d65761",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e6938842-09f5-461e-8fab-ae6d8ca7333b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246ca6d7-1be1-45e0-9f8d-4c8f0e0425c4",
        "cursor": {
          "ref": "a1f5e64a-bee4-47bc-8a13-d97d7d2e413d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ab2613f6-6046-49e0-a1e9-5b09c0d3fcdc"
        },
        "item": {
          "id": "246ca6d7-1be1-45e0-9f8d-4c8f0e0425c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "87a05399-de1d-4bd7-a196-c885767e5b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1a01b-4fa7-4fd0-9a36-c675bf217ca6",
        "cursor": {
          "ref": "3a8c23c1-dd3e-4abb-a7bf-2f71b76a7e3b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "09e9bf9b-64b0-4a2c-9221-b426b182273c"
        },
        "item": {
          "id": "6aa1a01b-4fa7-4fd0-9a36-c675bf217ca6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "39a44644-2a70-44d6-9e12-ce9ce1482464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fc799f-17e3-4d63-9d86-3816ee3393ba",
        "cursor": {
          "ref": "c66be95b-54f2-40a1-9b72-c849f541147d",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "48ba708c-5e65-4379-9d55-ac6daba9e748"
        },
        "item": {
          "id": "43fc799f-17e3-4d63-9d86-3816ee3393ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b0d3bb17-51df-467f-b449-0c0d63c7ed62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f2b4b4-c28f-4043-8b33-cb1f3d059e97",
        "cursor": {
          "ref": "2c233479-924f-481e-8de2-b0ec44344af8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a1ae2c24-d954-4101-acf0-cc40ac7c3fb1"
        },
        "item": {
          "id": "64f2b4b4-c28f-4043-8b33-cb1f3d059e97",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0b812694-fb34-4b00-aadf-c707e3cf550a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcf9d94-bb57-4713-9efc-c98c4c7c0c42",
        "cursor": {
          "ref": "70c29441-76bb-4a5a-be3f-924977d81199",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b6c2df1f-c00b-42e0-b618-a09d2c7e5932"
        },
        "item": {
          "id": "efcf9d94-bb57-4713-9efc-c98c4c7c0c42",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "41c655eb-55af-471a-a520-5a686d4f9df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354c696a-8c05-4365-8591-b335693f6aee",
        "cursor": {
          "ref": "f6e6027f-7651-4555-951d-347556e8612f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "af5f6728-c5f9-4c44-bae4-4b31ed456363"
        },
        "item": {
          "id": "354c696a-8c05-4365-8591-b335693f6aee",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6cb49a55-8e31-4f07-bc01-44a45bbea74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f0dbb9-f0f9-48d3-bd47-301d3cd9e1c4",
        "cursor": {
          "ref": "d276bf61-85d9-4d3f-875a-a6f9b36d3e30",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1a8ea535-53e8-4bf5-8341-766d46d24a99"
        },
        "item": {
          "id": "11f0dbb9-f0f9-48d3-bd47-301d3cd9e1c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "44274eb3-c4a5-45ac-a0ca-e7d49dc0701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab43aec-844b-42e8-9633-3a01b03ac1a6",
        "cursor": {
          "ref": "189b3235-6f7b-4b76-84dd-4f9523c129b2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2847be6a-6428-4417-b3bf-0b62d52ac0f3"
        },
        "item": {
          "id": "6ab43aec-844b-42e8-9633-3a01b03ac1a6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e019da0d-501d-4236-949b-8bf6b61621ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e00ad4-3920-4d42-8c98-64a21c502cf9",
        "cursor": {
          "ref": "ee6637f9-c6c2-4248-af97-551ceac1f715",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fbe58e61-c73a-47f2-8ec1-95bff7371bcb"
        },
        "item": {
          "id": "50e00ad4-3920-4d42-8c98-64a21c502cf9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dbd3e6dc-138c-4130-ba44-8d1ce1884dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6202327-14dd-40d7-8366-d8c05206da77",
        "cursor": {
          "ref": "85baafaf-2516-4520-b99b-c22eb3aeb3ae",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "88edecc6-ec32-48e1-9a4c-1688d6b87d15"
        },
        "item": {
          "id": "f6202327-14dd-40d7-8366-d8c05206da77",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "72fd3600-2f43-49f7-96a5-e49b0ade4b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eaf80c-885b-4f9c-ac44-ea2ad33143c9",
        "cursor": {
          "ref": "3f31cccc-4811-4377-a922-581539530ad5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3771e447-0249-45b9-b0a2-4590de183256"
        },
        "item": {
          "id": "36eaf80c-885b-4f9c-ac44-ea2ad33143c9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "78de54c4-8554-4ed2-9909-847e44aadc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4ffba2-94c7-4465-9678-37f473661693",
        "cursor": {
          "ref": "6be6ed27-3632-4753-9845-7bd18f52de98",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "37a5fe19-3676-48dd-a35d-43ff66b655c7"
        },
        "item": {
          "id": "cb4ffba2-94c7-4465-9678-37f473661693",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1daf3777-a46a-4c75-869f-e6cb43529ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b6cded-6108-423c-ac2c-79e56a84ea54",
        "cursor": {
          "ref": "8f760e32-7984-47f7-8b87-3bf63eb62c21",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "da1facec-2011-4a64-82d1-e275fe83bb94"
        },
        "item": {
          "id": "f8b6cded-6108-423c-ac2c-79e56a84ea54",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "02948468-03bc-4deb-b1f5-9645dbf3bf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b780aa-9916-456a-98b3-c0ed1de200bf",
        "cursor": {
          "ref": "d6421c54-823b-4363-8a0a-df4dec5c72b2",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a4a471d0-96c3-436c-8aa3-4fd2a794a8af"
        },
        "item": {
          "id": "c8b780aa-9916-456a-98b3-c0ed1de200bf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "99851ced-ab51-4b7a-9a9e-473e5ea569b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df0c8b-e171-4056-82f5-9c39ea0d86d8",
        "cursor": {
          "ref": "e54d15fc-dd4e-454f-9664-80c5d6268552",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "880a15c8-e524-4198-987b-7a1841b60598"
        },
        "item": {
          "id": "37df0c8b-e171-4056-82f5-9c39ea0d86d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1f695d39-6d71-4cee-8073-cc232beecea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cf7aa9-5257-437a-a661-99795de2fcdd",
        "cursor": {
          "ref": "a11dcac7-7f1e-4e7b-8aaf-e8eb64a046be",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cddf8d12-0778-4935-959a-3716e1f3ac49"
        },
        "item": {
          "id": "a3cf7aa9-5257-437a-a661-99795de2fcdd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3f57da27-0833-4aee-b214-6d1011a87e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbfc70f-5214-4069-8e1a-50c2a1ac9b65",
        "cursor": {
          "ref": "3d5f93d8-9f03-4de7-bd4e-6ff21199efbf",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "857ee12d-1759-4914-8928-98a302799090"
        },
        "item": {
          "id": "9bbfc70f-5214-4069-8e1a-50c2a1ac9b65",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46f6883d-77a8-407f-8747-c0afc2659183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff3b255-1b35-4e19-807c-a00b360cf3ba",
        "cursor": {
          "ref": "53b0192f-6fec-4ad0-97c2-c2b71f0bcf77",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5c805ab2-0e7c-4a7d-abd9-ffe015de8710"
        },
        "item": {
          "id": "fff3b255-1b35-4e19-807c-a00b360cf3ba",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9b65c33d-8cad-4961-8d76-9af3455f23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c9a19c-a50b-44fd-8a66-bdcd63079927",
        "cursor": {
          "ref": "e6faa261-238d-404c-9283-bb4e9dbdfb44",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "636fbbca-58c4-45f9-bdd4-f189584723e9"
        },
        "item": {
          "id": "a1c9a19c-a50b-44fd-8a66-bdcd63079927",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2e74cefe-4df3-4f3e-a30c-7a9527800617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6954583-eaa7-4b31-9d9e-3f46b6bf0aee",
        "cursor": {
          "ref": "fd04f70d-6ff5-471e-a371-8c20be152416",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8c89d25c-bfff-4f0b-9500-6a4842f2ff3a"
        },
        "item": {
          "id": "c6954583-eaa7-4b31-9d9e-3f46b6bf0aee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6d0d266b-d21d-4164-88c1-e57c619f6a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f99b078-64c8-4a03-8eb6-6771b2a8d265",
        "cursor": {
          "ref": "53d0f3a8-ca18-40b9-b52b-d76a34ba2f7d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fd2521cf-976c-4068-a411-90b97a92357c"
        },
        "item": {
          "id": "0f99b078-64c8-4a03-8eb6-6771b2a8d265",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c503bc62-eee2-45d1-9fbf-14cf524eb79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57eb669c-a2b8-4bad-aa4c-1e1ea2ab3f38",
        "cursor": {
          "ref": "2cf49060-870b-437e-bba2-da035792aedb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "613d2d4a-bb84-4072-b304-48caaa560132"
        },
        "item": {
          "id": "57eb669c-a2b8-4bad-aa4c-1e1ea2ab3f38",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d97d29d2-c57d-4bda-8b89-5d7f9990c089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0368c26-7ce7-452a-a1ec-cca9748c9beb",
        "cursor": {
          "ref": "154929b4-ee90-4d75-9427-9c766a32e85e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f6a925d1-68d9-4e0b-ae72-8a15abf358c9"
        },
        "item": {
          "id": "a0368c26-7ce7-452a-a1ec-cca9748c9beb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a99e6d52-8124-4d10-8800-8d991e48206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62cc433-08ea-481e-88e7-cbb9821581f6",
        "cursor": {
          "ref": "a0678ce5-c0b7-4eef-8ef2-ff9ae26d88fe",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "74afa0b6-2cca-411c-8f54-42d0af84b700"
        },
        "item": {
          "id": "a62cc433-08ea-481e-88e7-cbb9821581f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "720a9cd2-f100-4f4d-89f6-e3ce6b16bfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2145b66b-fb60-4b9c-95f1-73b833876949",
        "cursor": {
          "ref": "ff427e06-a6bd-4985-bdeb-cc92918cd94b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fdc75f72-e185-4689-8703-e360be1bfc8c"
        },
        "item": {
          "id": "2145b66b-fb60-4b9c-95f1-73b833876949",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "080f7be2-ebde-4510-8bb5-20d7af4397b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67d4953-8e87-436b-a4f6-ab8c6a7eed61",
        "cursor": {
          "ref": "7608e3fa-6aeb-4663-b9bc-631fda6da70a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b36bfdc-e2dc-4a7c-8a35-9ab9b3f8da5f"
        },
        "item": {
          "id": "b67d4953-8e87-436b-a4f6-ab8c6a7eed61",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cbfa2a02-6cfc-413e-82e4-684a6c074d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1425fbb3-777e-4f42-a0dc-7c4d461afe9e",
        "cursor": {
          "ref": "3b42fb96-29d1-42d2-80c4-325f9318b7e3",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e5e27f2-24ab-43a3-8a0b-7123b9ee9f78"
        },
        "item": {
          "id": "1425fbb3-777e-4f42-a0dc-7c4d461afe9e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "36c625e4-704b-4c9f-b8ea-69e5c96d7c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576df9e9-c77a-4e7e-893c-087a1f1543d2",
        "cursor": {
          "ref": "96ed6b23-b9a3-49de-89e7-98b29ad9da59",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0f3e8d75-371f-4c55-a55b-8f12c75bb566"
        },
        "item": {
          "id": "576df9e9-c77a-4e7e-893c-087a1f1543d2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "06577cf6-39fd-4020-b46b-c024e32101f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0ad624-e9eb-4871-b958-d077cbd90dee",
        "cursor": {
          "ref": "9d136e6a-1a54-4819-87e0-9b8d5a813886",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "faf73a39-e626-41a0-93bd-4dc902b021b7"
        },
        "item": {
          "id": "5c0ad624-e9eb-4871-b958-d077cbd90dee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "60a3a1ed-3b13-4c57-a27c-b8ffb619c4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3653599e-d579-4c5d-990e-cf169e150e32",
        "cursor": {
          "ref": "07b6590e-747c-4eb0-999b-9ee009d42ecb",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5e60c87a-a3bb-40c9-95c5-bf2b187a6fa6"
        },
        "item": {
          "id": "3653599e-d579-4c5d-990e-cf169e150e32",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d7949bf7-df27-448b-abe0-c1ab025f935f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a638a97e-0ec5-4997-9b6d-085c6504fccb",
        "cursor": {
          "ref": "9b29c9d1-1ab8-4290-9e64-917ceb390539",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dc6ca995-1c24-4034-95a1-84c32d16b5dd"
        },
        "item": {
          "id": "a638a97e-0ec5-4997-9b6d-085c6504fccb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "10aa301a-217b-4400-923c-c39ea0141036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea1414e-c8eb-447d-98a7-6ef5b4ec8d8d",
        "cursor": {
          "ref": "dfa5aa0f-2d44-4d6f-99c2-e7e0219a3fee",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8d0c964a-421b-480b-9b15-6d31bd45496b"
        },
        "item": {
          "id": "0ea1414e-c8eb-447d-98a7-6ef5b4ec8d8d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "017128f4-6850-46b2-9d63-5022cba81cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907f44c2-e785-47cb-a30d-0dff4388328d",
        "cursor": {
          "ref": "daa8616d-5d6a-43e1-9f75-a748b24a243d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "42063c54-3486-4740-83dc-43d74f9e826c"
        },
        "item": {
          "id": "907f44c2-e785-47cb-a30d-0dff4388328d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64451495-57b5-4077-b153-472e161bfaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a20239-cddb-4b14-8349-5fe0a1351d0b",
        "cursor": {
          "ref": "0b7961d3-a12f-443f-b110-183fd1988aae",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1eac3b08-b2c1-46ee-987f-56b36069d370"
        },
        "item": {
          "id": "46a20239-cddb-4b14-8349-5fe0a1351d0b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7290f4a2-cb08-4f57-98c9-9319bd3e6522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6309ba1f-2a8a-425b-8afe-654edb06091c",
        "cursor": {
          "ref": "18cbb35f-23b7-4132-82e8-36f4899c767a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eedf478e-0a3d-4807-a1a9-3289d5e88c2e"
        },
        "item": {
          "id": "6309ba1f-2a8a-425b-8afe-654edb06091c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6e1b73ad-ea3f-48ad-ab13-4b7a4c5a1655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981c53ce-b9a5-4012-82d4-405bdc5cd0a8",
        "cursor": {
          "ref": "78ad1c8c-8b1e-4a88-b441-61fe9988f69e",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9062ce43-882e-4d3e-867b-890d014ff2a6"
        },
        "item": {
          "id": "981c53ce-b9a5-4012-82d4-405bdc5cd0a8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d6635e03-f821-4f32-b5b4-78dfea030881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa7e61f-41b8-44af-8eab-e954a7f2d151",
        "cursor": {
          "ref": "b5151a11-ae49-4ed6-a7c3-cc757d583255",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bc55eba1-04ff-411f-9d26-b69e72aef005"
        },
        "item": {
          "id": "6aa7e61f-41b8-44af-8eab-e954a7f2d151",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "67328c32-eeba-4844-a5ff-6c87f44c69c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdc32fd-154e-4508-8b6f-b839422fc5ba",
        "cursor": {
          "ref": "325e9d02-f3fb-4e14-b164-3c86efbf372a",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "29315d77-99fc-4bad-8b8c-a0b44dd89c90"
        },
        "item": {
          "id": "bcdc32fd-154e-4508-8b6f-b839422fc5ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d8533ea9-1dfa-4e7e-878d-c7d91593f41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eab54b-5710-4c16-b30b-10a20223465e",
        "cursor": {
          "ref": "92694352-e289-4f84-ace4-8f269bfe1c40",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e0655c8d-223a-4e1d-9934-e2c84395fbfd"
        },
        "item": {
          "id": "d2eab54b-5710-4c16-b30b-10a20223465e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "71b71736-52ae-4600-ae23-194583dc13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec84cb18-9e9c-4561-97e1-1130f7fb0411",
        "cursor": {
          "ref": "9f182077-e4e4-42c4-9f96-47f62410feae",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "abf168e0-c63e-48ad-b04d-f1129d806f55"
        },
        "item": {
          "id": "ec84cb18-9e9c-4561-97e1-1130f7fb0411",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e8237ef5-adb0-4aed-aff1-09a6951d99b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9457cf52-d040-4d87-9c27-8729a51b174b",
        "cursor": {
          "ref": "90506361-f864-4ed6-953a-89e1377d49b0",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3d68fc5c-e0ab-4d3f-a572-a7b4c9d9dca3"
        },
        "item": {
          "id": "9457cf52-d040-4d87-9c27-8729a51b174b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dfbbdcf8-ca69-43fc-abf6-8d2e659b2c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b68ee3e-6a04-4b71-9c9c-494dcb7c923a",
        "cursor": {
          "ref": "73dbf407-3919-44da-886c-5597ea41c88a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0e978708-770d-41d4-9b57-14f32dcaaf1e"
        },
        "item": {
          "id": "5b68ee3e-6a04-4b71-9c9c-494dcb7c923a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "008b5b59-53c7-47c1-8a86-32510a25c4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b83a643-3e3d-41b3-8ce4-750a88f4f596",
        "cursor": {
          "ref": "adb88b84-d6dd-4252-8a6e-ac52db3819cc",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f070c075-d89a-43c8-800f-9a32af923e9e"
        },
        "item": {
          "id": "0b83a643-3e3d-41b3-8ce4-750a88f4f596",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4393bd53-df20-4e8b-a035-edcc9630b493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2162c2ae-ba89-4184-acc9-858d0c1f49c2",
        "cursor": {
          "ref": "490452fa-b72c-4a3d-acb1-d2a0664a7b95",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9e77a6c8-e863-40cb-868a-caf1256e90fb"
        },
        "item": {
          "id": "2162c2ae-ba89-4184-acc9-858d0c1f49c2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "10bea3b1-8487-4de4-8aba-d8525f436125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c1605-d08d-44a9-8eb4-31a459daad04",
        "cursor": {
          "ref": "d32a4a8a-76b8-443b-9fe6-3ad3b7a89c29",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "694b1227-21fa-444d-9320-b7b37116e42d"
        },
        "item": {
          "id": "e02c1605-d08d-44a9-8eb4-31a459daad04",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c98c4249-c810-4192-86cb-898773d357e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd622af-1cee-45de-9b02-6f7b6756bb0f",
        "cursor": {
          "ref": "e6070e0d-6186-4e17-9d4f-61a9a9874414",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6a401658-f25d-42b9-a05d-18960486b9bc"
        },
        "item": {
          "id": "1cd622af-1cee-45de-9b02-6f7b6756bb0f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "43c78847-d6b2-4729-b61f-f3ef2239a2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240e52ba-7203-4884-8b73-3fd15eb1ca5a",
        "cursor": {
          "ref": "49ed9452-d421-4e4c-a335-64f705212718",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d415a833-40c8-4725-9dbe-9faee7713a2b"
        },
        "item": {
          "id": "240e52ba-7203-4884-8b73-3fd15eb1ca5a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b5637c26-1fa5-4c99-a852-133e814ca3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db9c33c-63c8-4241-9017-918ce4cbc5f4",
        "cursor": {
          "ref": "783a6368-c08f-4754-bebc-f695feac6d51",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1cf0df43-da4d-411d-9af8-9825b2a3f0d8"
        },
        "item": {
          "id": "8db9c33c-63c8-4241-9017-918ce4cbc5f4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c28cb003-7827-4359-8a2b-efed75f8c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdae82d-78c9-47c0-a114-57b0ecb93ee4",
        "cursor": {
          "ref": "e29280b8-3220-4c14-8b1e-28016814e749",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7d807e04-6661-476a-8b00-bc686781eda3"
        },
        "item": {
          "id": "4cdae82d-78c9-47c0-a114-57b0ecb93ee4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9266e5d1-91c3-4856-817c-5580585f24a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90cd4f5-0a77-4d71-8044-83b931f34ffa",
        "cursor": {
          "ref": "793fa2c1-520f-4d7d-9ebe-0db0eba1306a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "685488dd-7d08-4c2b-b0c7-0ea11f577534"
        },
        "item": {
          "id": "d90cd4f5-0a77-4d71-8044-83b931f34ffa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b9d2d430-dd4e-483b-855b-a05670b08d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a5fbdd-cb3e-464d-8eac-68eb8d6c519a",
        "cursor": {
          "ref": "aa859b4a-4f79-4ac5-b48a-6ec549e14471",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "788a23f5-a593-4530-b6b0-d08111c1c8ff"
        },
        "item": {
          "id": "d6a5fbdd-cb3e-464d-8eac-68eb8d6c519a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4c51f2ec-dcd8-4906-90aa-d23bc5d1e4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126d495b-0c10-4f31-9baa-d75994a92c9d",
        "cursor": {
          "ref": "1750082f-7825-4c63-9496-d06b6e003dde",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7bcc99b7-9a77-475a-adb5-d541f6486c7b"
        },
        "item": {
          "id": "126d495b-0c10-4f31-9baa-d75994a92c9d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6f5b22db-1947-472b-a2df-f8649a8eb8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72688a9-2657-4a2e-afb8-48e8ab8139f2",
        "cursor": {
          "ref": "3b17b6c6-9673-4660-ad43-142b18e5f9ee",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5c994f52-29e9-4043-a738-52a78cf20711"
        },
        "item": {
          "id": "c72688a9-2657-4a2e-afb8-48e8ab8139f2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "48bb1463-baf3-4a40-a780-49fdeecc1d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044763f8-ec8a-4780-b293-f6fa4f1d7067",
        "cursor": {
          "ref": "15e4964f-bf39-442e-8468-8479de07abab",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "77be0936-2849-4f1a-ae0f-f9c0dfa40b4c"
        },
        "item": {
          "id": "044763f8-ec8a-4780-b293-f6fa4f1d7067",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3be61a0f-a460-4e2c-8614-6a605bcb18df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a3aa04-edbd-453f-b7b1-a88b39930017",
        "cursor": {
          "ref": "ce2d7a8b-ed87-4f60-a9d1-ecfa11f2924f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4d348995-b3ad-4eec-8d0d-98a64c244873"
        },
        "item": {
          "id": "47a3aa04-edbd-453f-b7b1-a88b39930017",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f1daca7b-7d53-485f-b9c7-5defda272b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca73da2-c09a-4b5a-a49f-30e8831736de",
        "cursor": {
          "ref": "fe2ab4cd-78d4-4115-a0db-000a43a29b1c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b65b69df-4b2f-443f-8d77-c09c39cbc757"
        },
        "item": {
          "id": "6ca73da2-c09a-4b5a-a49f-30e8831736de",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9f90522b-ba77-41f0-86f5-dfbddc988146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bcd9ae-db7b-4366-bfa9-c848122e61c7",
        "cursor": {
          "ref": "a8ed2ed3-5d13-405d-9d00-f34df39ac955",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f1b4981e-8dc7-402c-a5e7-d12bcb1314ea"
        },
        "item": {
          "id": "11bcd9ae-db7b-4366-bfa9-c848122e61c7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d0f5ef92-9645-43c9-83b9-cd0ef14c7cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dab194-c42a-4e9a-be25-56726e5b8c31",
        "cursor": {
          "ref": "f09a6f06-2a2c-46af-9b09-f58842a88a8a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "48e3c24c-89c6-48a5-9733-522edfd6e5c0"
        },
        "item": {
          "id": "b3dab194-c42a-4e9a-be25-56726e5b8c31",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c09884e7-c99f-4d59-918c-43497da31d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaf8ae5-d7b4-4c9d-8ad8-64ca927e0880",
        "cursor": {
          "ref": "69690191-3ee3-4d33-aac4-0cc0c4a78467",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f3895eef-ced1-4d6c-8aaf-769675771e93"
        },
        "item": {
          "id": "ddaf8ae5-d7b4-4c9d-8ad8-64ca927e0880",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a84dbc6c-2347-451f-9380-b84edf7cf2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c928d-9e7b-4d5e-be45-a3bae31952c3",
        "cursor": {
          "ref": "ac131771-40b9-470f-adc6-81175e871570",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0b5e2f8e-0566-4580-b21d-afcce454097a"
        },
        "item": {
          "id": "c27c928d-9e7b-4d5e-be45-a3bae31952c3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1aaca3ac-15e6-4f41-8a5a-93b1abe2149a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be05ae-1de8-4792-b59c-c4b3c3c3848c",
        "cursor": {
          "ref": "e6c82673-2551-40c9-85ad-025478a60a38",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d6f665bf-2ee6-4fac-989c-922ead81a702"
        },
        "item": {
          "id": "62be05ae-1de8-4792-b59c-c4b3c3c3848c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7e8a4241-7911-49ba-9590-552cb3f4c3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475951ce-2bc4-41bc-94e1-a701e6068253",
        "cursor": {
          "ref": "5051fb88-5553-4487-acec-5c43c602b884",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e8a10557-74b9-4181-91f1-053b7fa3d272"
        },
        "item": {
          "id": "475951ce-2bc4-41bc-94e1-a701e6068253",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8df47300-0c37-4c51-aff4-d8e3963fea5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1ce5f6-ed1f-4731-b2e3-cc630dc35fdb",
        "cursor": {
          "ref": "fbdb1b54-f357-4a6e-a814-c8ed77bbbf98",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "83fc794a-8649-4e11-b79a-beb9dda6a194"
        },
        "item": {
          "id": "6b1ce5f6-ed1f-4731-b2e3-cc630dc35fdb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "180bc410-249c-4a1f-a094-2ef8e92e205e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65135cd-9328-4ed7-be29-e9c6e4fc04eb",
        "cursor": {
          "ref": "48233b64-6cbc-4dc6-8e60-2fef3285f57d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1645d9ff-c9f8-4e8c-9b97-4f566dba3b21"
        },
        "item": {
          "id": "b65135cd-9328-4ed7-be29-e9c6e4fc04eb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "971f3f8d-efa0-4d8a-8d7c-8814566526b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8813c40-cb60-43d0-905c-f47d4a2b9987",
        "cursor": {
          "ref": "ecfd8e43-c98d-4f54-b3ae-30808982f44d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3b17d422-54ac-45e9-92f7-c66e1d7d4708"
        },
        "item": {
          "id": "f8813c40-cb60-43d0-905c-f47d4a2b9987",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "583f5b3c-baee-422f-bd5c-39c107eb44ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396ccdfe-d7a4-4fdc-8b70-4cc1dfe1fcf9",
        "cursor": {
          "ref": "57990c06-999a-4783-814c-e72c65f3ae9b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1157cce2-a2e0-48e9-9a49-a61284e775fd"
        },
        "item": {
          "id": "396ccdfe-d7a4-4fdc-8b70-4cc1dfe1fcf9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ca7e3251-66d5-4646-beb2-87ff32354521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13d407d-dcda-46ef-8345-861b4175b576",
        "cursor": {
          "ref": "e7283528-a95f-4886-9227-159d68a5937a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d8b932bb-301b-4c5f-a85c-38d3ff62429d"
        },
        "item": {
          "id": "e13d407d-dcda-46ef-8345-861b4175b576",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf4110e8-7275-4f2b-8532-0aaea94b1478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372baf9a-05de-4a65-9a84-65dea2b403fe",
        "cursor": {
          "ref": "f8a9b137-0b15-49a4-8197-f9d31f081e0d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e39fcc20-a635-4be2-a16a-a576d7da46ab"
        },
        "item": {
          "id": "372baf9a-05de-4a65-9a84-65dea2b403fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51801bd5-5965-407f-8e1a-24c453eddfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721dfd67-6582-4d3f-b115-af05cef0c4ce",
        "cursor": {
          "ref": "4ce6aa7f-e7b0-4295-9d45-9f8dbeb71061",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "828f5a09-f72a-417f-9078-0c18d42cbd18"
        },
        "item": {
          "id": "721dfd67-6582-4d3f-b115-af05cef0c4ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "64a7097b-80d4-4ef9-a728-d1dbecf853f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6522ac-f81a-4518-a449-2cdfc9fc489b",
        "cursor": {
          "ref": "6fd0061c-c821-472a-b211-9dede178d398",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2c23eeb9-20fa-4cdb-ba05-6df2ea2337f1"
        },
        "item": {
          "id": "7f6522ac-f81a-4518-a449-2cdfc9fc489b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "65a53bc3-20d7-4ce0-bfe7-4fc9941b44e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaf2a87-1c32-4679-9d13-5f783f89417c",
        "cursor": {
          "ref": "f6a704ea-13af-4f08-841e-ba30f52e8872",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b00dfbf6-5314-4537-a4ae-2720708742ef"
        },
        "item": {
          "id": "8eaf2a87-1c32-4679-9d13-5f783f89417c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "296509fa-14c8-405d-8e2d-3286eceec30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33722e72-d1bd-425f-a5a6-6f2944aecdc2",
        "cursor": {
          "ref": "c610cef1-8312-4c1d-a33e-ba0c34dea67a",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0ecc8368-b6ae-4265-830c-20e190eb740a"
        },
        "item": {
          "id": "33722e72-d1bd-425f-a5a6-6f2944aecdc2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f6d02a3d-f4bf-4c57-88f2-57b81b5e9535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb7731d-aeba-4cb9-956d-f76e8432d5b5",
        "cursor": {
          "ref": "1d449791-ed5f-41e0-a2c4-32a0fe93d8e7",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "be8cdf7c-2f4a-41d2-b8fa-21a81c309322"
        },
        "item": {
          "id": "dfb7731d-aeba-4cb9-956d-f76e8432d5b5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "12bde137-caab-428f-a4fb-b14eaf518fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e56cfe-55bb-4477-b8ec-ad7e0e438a67",
        "cursor": {
          "ref": "b14a7adc-b86b-4712-baa1-32554d05c4b4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "27da2ed1-a544-4096-b76a-5bd57c56036a"
        },
        "item": {
          "id": "55e56cfe-55bb-4477-b8ec-ad7e0e438a67",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36a148a0-158c-4601-8dcf-4baa044015c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b40794-78dc-435d-96ba-e40e3a7b13bf",
        "cursor": {
          "ref": "8976ad77-d2ee-4f65-895b-703e3d704648",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2ef11f60-bcd2-4886-ad3f-a4ed06a8c2d0"
        },
        "item": {
          "id": "21b40794-78dc-435d-96ba-e40e3a7b13bf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ef9b6ad4-ed0c-4010-bde9-06ef1ad1e1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525488e7-2b7c-43fc-b1ca-40f3ba2f99f1",
        "cursor": {
          "ref": "5bafcff0-f8c1-4882-92fa-393e65064c73",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "781037b1-4150-42c3-8828-27cebb7eab82"
        },
        "item": {
          "id": "525488e7-2b7c-43fc-b1ca-40f3ba2f99f1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "abeee5c9-20f7-4fab-a57c-c3af4bd840e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d63e79c-775c-4e8b-b881-647baa9488e4",
        "cursor": {
          "ref": "606981e1-73c6-4f7c-9d8f-d639b8ef9312",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dc812a16-d4e1-42d2-a27a-e32fb5575797"
        },
        "item": {
          "id": "4d63e79c-775c-4e8b-b881-647baa9488e4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "50a01e7e-3bce-4a5d-a451-535f824c2c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf489eb6-4a22-4626-85f2-851a39273ac4",
        "cursor": {
          "ref": "abf570e3-fb12-44d1-815b-d6d3e6f6b4d7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a2660905-643b-4bf6-bfb0-60b04c0529ae"
        },
        "item": {
          "id": "cf489eb6-4a22-4626-85f2-851a39273ac4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "07e0392d-c9d2-4cb6-b4f8-d153c1a1c952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416c87ef-c1b4-446e-932b-03ce10d89f53",
        "cursor": {
          "ref": "b19f8bf7-935e-4352-b426-13eae12e0301",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "878835b6-5bc1-45fa-8bfa-66a75657f780"
        },
        "item": {
          "id": "416c87ef-c1b4-446e-932b-03ce10d89f53",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7a779b39-8af6-4344-97d7-dfb503cc1fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65939fd1-5370-4722-818e-af2d91fea53c",
        "cursor": {
          "ref": "ec19eb82-278a-4daa-839e-9c1746505db0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "80cc69e9-ce7c-4c29-91c5-b7c2106b1863"
        },
        "item": {
          "id": "65939fd1-5370-4722-818e-af2d91fea53c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e26f0c8a-eeec-487d-aaea-ce72f165f30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24231529-8e5c-4196-8185-1361c0ae855a",
        "cursor": {
          "ref": "dce7a146-67e3-45b8-8dd4-b2384e5d35a7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "315d2a5a-638c-4720-a621-56084b25cde1"
        },
        "item": {
          "id": "24231529-8e5c-4196-8185-1361c0ae855a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "68622b4d-20ff-47d6-a558-ed94412c3e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b13fd1e-ce1d-44cc-a9d9-5780aaddb012",
        "cursor": {
          "ref": "0fa19b78-6cd0-42df-bd6b-c49c2f36213e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "068440b9-4ba8-41ca-bc71-04647b0268e1"
        },
        "item": {
          "id": "7b13fd1e-ce1d-44cc-a9d9-5780aaddb012",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "afa84b4e-5a90-44b4-b2cf-76c40e61cddf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84446ec4-86dc-42cd-ba64-a44f0d7a9818",
        "cursor": {
          "ref": "641b695f-1af3-49f2-bb9e-81230fb389b1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "613c0449-a881-4f53-86a0-b3d2cfdb9d78"
        },
        "item": {
          "id": "84446ec4-86dc-42cd-ba64-a44f0d7a9818",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f087aa3c-6cca-4170-b7ff-a39f62228530",
          "status": "OK",
          "code": 200,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f01217-1aed-455b-8948-8b4111677c47",
        "cursor": {
          "ref": "db8d383d-2bb8-41c6-9a91-6180428ee835",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3589ef65-2c9d-4817-b006-dfde65a5a4c6"
        },
        "item": {
          "id": "58f01217-1aed-455b-8948-8b4111677c47",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc5f12d5-1c9f-4bbb-a012-526d21b236ce",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbf468d-0e80-4342-a24a-988cbd3bd01d",
        "cursor": {
          "ref": "394219f7-390f-4d27-9c58-fc9e9f1d6009",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cef1bff4-dc29-43b8-aa0d-64bebd686b66"
        },
        "item": {
          "id": "2cbf468d-0e80-4342-a24a-988cbd3bd01d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f777fbba-ae91-4d67-ae02-19c82a33e4f3",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0b433-8c53-4662-95f8-ec6541f2e4f4",
        "cursor": {
          "ref": "9f55cfb3-1677-4fab-8e8e-2dfdf2963a0f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a2a6e58-fa6c-4a03-8211-8dad19542934"
        },
        "item": {
          "id": "5fe0b433-8c53-4662-95f8-ec6541f2e4f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df0df74b-7f74-424e-bb02-82d78f838479",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0b433-8c53-4662-95f8-ec6541f2e4f4",
        "cursor": {
          "ref": "9f55cfb3-1677-4fab-8e8e-2dfdf2963a0f",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4a2a6e58-fa6c-4a03-8211-8dad19542934"
        },
        "item": {
          "id": "5fe0b433-8c53-4662-95f8-ec6541f2e4f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df0df74b-7f74-424e-bb02-82d78f838479",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f91d1a-6c30-40c8-8dde-3859c2675fac",
        "cursor": {
          "ref": "63e2815e-46e7-4be9-a6f2-396903f5dd9c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "612b8e2a-0050-4b25-b5e2-d96be3a49e3c"
        },
        "item": {
          "id": "b7f91d1a-6c30-40c8-8dde-3859c2675fac",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9c1c84d5-6889-49bc-b0ed-9570471f419b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b0a98c-6a60-47ca-8998-d155d5fdc059",
        "cursor": {
          "ref": "76a1ab32-ec16-4aa9-ab3b-ed9bd746d75a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c127f01c-9797-49a8-bc57-a0eded0853b7"
        },
        "item": {
          "id": "a7b0a98c-6a60-47ca-8998-d155d5fdc059",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c35f7378-2e22-42f4-86e8-41232a2200dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}