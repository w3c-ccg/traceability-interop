{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "168aaff6-d50f-419f-82ba-fec10a1f86e5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "552164ba-87a0-4472-a7ec-3b7e6da50330",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6421143-be4c-4353-8c4c-f7fc97d88026",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ebd346fc-04b9-457a-93f0-0285bd691d68"
                }
              }
            ]
          },
          {
            "id": "a93c97bb-fb11-4a69-adab-95835ab52dd2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12e4843c-8615-4264-b0ce-1fa9ff76ccbc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5c70649f-74bf-45b5-9cef-84f87b9d0a5f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "428e3956-bce4-47cc-bf09-e37e2ea685ab",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bb0e71b5-8020-4472-8eeb-feef9538e62e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f310706-1140-4177-883c-9fb51f6b5ada",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "705a86cd-1b6e-4485-bd4d-ab6b77b079dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51228a00-d5a0-4a87-b572-c5d44d0afb60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "086cf036-672e-4a23-b608-7c1925532c82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28f88888-a480-4515-b531-c996ff22f980"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ebb9237-9c99-4843-8640-1a3d248ccf84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e72009b4-4a5c-469e-a294-03724179cfe5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ae14c8e-e506-4e38-aadf-7446ddceeb25",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a896a90e-a58e-4db9-84e9-97803623f993"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1da3dc58-b992-440c-a7bf-be5aad1b8581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1f9496c-3460-458b-a09d-f62f9c7453b3"
            }
          }
        ]
      },
      {
        "id": "92990484-82c2-477a-8f61-bd74f0476d17",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a718b4eb-23a9-42ec-b673-2795eca31604",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3c3deff-31f0-4a8c-9397-0c1c15bca2a5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98b0ced6-6096-4a82-b88a-6bee45e17417",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9766cb-9acd-4174-b873-19ae91302e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13d66f3a-7bf4-486c-abcd-dcd4f37b0333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fada64af-d149-49d4-a42d-5beda90adb7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a957edd0-ff9c-4989-86f6-6e8ad8df1351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd2fbe6b-3074-40a0-b753-ee95ba34fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e832459e-753b-47b6-9fa4-13d94629dd8d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb347d3-ceab-4631-876f-af91cbbf39ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83c5c8aa-f154-4fd6-bbd6-34145a1cc34d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "017afb2e-82f6-4abd-b000-13243b3b1628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92753315-ca6e-4a90-8286-7369437a25fc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3976c505-252d-400b-b2e9-537ea8faac8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "023350ce-94fe-4a99-9c5b-fc43da2ce504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5481ac-abec-492b-91a2-94cdddbd771a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c1af1b-e3fc-4314-bdf9-3d39ca6a8843"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5665423b-f390-495d-94ef-88b7ea0aae36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d64fbcd5-dc9b-4b14-95e9-087c63fdec2f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab5d0bbd-55f7-4973-80a8-a731eaf67d31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ed939994-7308-4422-bd76-b1cbfa1e21d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e8b5e77-f7ce-4eb0-89e2-b09ebfc57652",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a222ed5-634f-4e00-86e8-4a90a104f3a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7725c73d-e628-44b1-acbc-a101d81d59f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b5926b9-3615-40c5-a84b-94e960fd7610"
            }
          }
        ]
      },
      {
        "id": "94ac3d2f-a2cc-4356-8c92-ba1e862c9879",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "57b71230-13be-434e-b6d6-50035eb17db8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6abcf4c1-6497-4759-a8b2-e9f168ed3c0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9d14eaf-fc3d-41b6-aa69-2e864410c847",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9109a7-c0c3-43a3-b6e3-c6a1ba369ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398be997-a4c9-472b-89bf-95311597f12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa5d11c-0b05-41fb-ac4e-0ddb00faaa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afde1751-7cdc-4acb-a0e5-437faff4eb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568ede29-b4be-4575-ba08-6285b5367b1b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8155114c-932c-4d59-8ba1-357646d64944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c74c569-123a-49bd-a969-42873376a347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ae7ad4-6de5-4be1-8256-342312cdccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22efea31-9c45-46c2-8f5f-b6aad459f35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632ada12-79fa-4261-b917-2bcea5e9a4b8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baf7e61-8d61-4e7b-950c-27766a5c78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c566a7f9-38cc-4339-ba66-d83ec44238df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c0f7c-7af6-40af-8e5f-9d9a5b7d52f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50cb46b-f2b4-43d7-bf96-60c511e5223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652a1697-3e45-445f-a22f-a7ceb2dad54e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334cfbd2-d26d-4853-94f5-3846a1f4439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdac1be-6d86-4996-882c-816d251f1082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b81717-bd99-41d5-9f41-5e350237f73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5787c0ce-61d0-4f2e-b011-492159eea117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59f8fe-0190-4683-a2e0-735174a31fb3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f483d01-8875-4b94-ba9c-9c4f072422c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebfb269-332c-4f0e-9c95-2a29f08dc46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4091d0c-fc9e-4dce-8a81-629fbf5128f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa905ff-5aa0-470d-9a1b-703098178ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30c1551-322e-47d3-91d6-33f5e3a6f79c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92801e31-4132-4945-9539-4d0ed422bac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cb9a20-53b5-4f91-9dbb-048b8bd17581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614f36de-164e-4fe4-a46b-0f35767df07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7b9de26-81d4-476d-bed0-091334992d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b468a63e-bdc5-41d2-8dc6-579651c4d45f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef70c4a5-142d-466d-9ac0-4b03344df4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babafb65-6eb8-4934-b68e-fd79a9f579de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e07884a-df87-4b3d-a0c3-20da897d08bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8523853-43a4-45f9-8b37-cbe21f152000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f60602-20ad-44b0-818c-9c8fdf29ce48",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8791be-3781-48e4-94a6-9a4c2a8da190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df37405-4366-48ce-96ea-82401da49769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c5503a-3ebf-496b-8695-814347be3250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9950f71a-a299-4e7e-a986-c8c4c1bd989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9bff9c-e231-45bc-9e6d-89d8de86ae03",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80430a5-4390-4cee-8e01-53c92a6b5970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c09cd66-8733-4b15-8e06-ea3b56e7ca78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893630c3-5e12-49a0-9762-04298eb12223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9158a720-17cd-46a1-a544-ef75e71c3545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2615cbcc-6b09-46e4-8f23-a8d6158f8e60",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5bd0e1-1fb5-4b08-819b-61babcda48ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a294d1-401a-4b39-b606-ffd006396ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b551a807-7985-497f-b56b-5694775d04a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b6a492-8384-43db-b087-84e22e8c2977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74684b0c-6cf4-42d1-aa82-dc85bff10f27",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9e65a-d425-403a-a7ab-42c3b13def8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49ec86e-cb8a-4dd2-84c9-c707c506898d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31a9863-73da-48fb-afdb-cee2efe3faba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9be71640-f2f5-4701-aac5-321eca43735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284fb9bf-edeb-408c-a6e1-a7482131f53d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e844bad1-38b0-4f33-9099-8b4bbc7284ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a57248-192c-4363-bdab-da67a8139edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1585f030-399f-49ee-9f09-1d53c92e8c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fef629c-36dd-4010-8d39-4b69ec58b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b411851-47ce-4654-b192-0d85eb7a0c5f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd6f543-b277-45f3-930c-ad0177f276bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9367056a-36e5-41f8-a7ff-48dc0d2312e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a683d7-450d-4b6c-b144-f8d741894e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b844afd-623e-44bd-9fb1-22161f7b911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f77475d-448b-4357-9261-6df13eb24d74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0292c889-54d3-4d48-adb3-da4230192601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8a8b99-1c2a-433a-910e-e6bfda0c1edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afb4b4c-58fe-4984-b6e5-81b6de8e9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e2932a-45da-4d23-9f19-b9583553c39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b73a24-ba0a-460a-b346-3ba36e28e5cf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad024130-33bd-4be9-97e4-62d181667674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "633fad70-a783-493a-9e80-8cd5d989b9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20534931-d82f-481b-9d98-fff0f4087797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7233d69-cbf3-4d90-88fe-19df7cf67409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa698fc-1ecb-4b66-9aaf-ce6be1d5fc7e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5005c129-115d-4211-92e2-b84a00f3bb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04ea4d7-e976-4c0d-ac1b-0d608ac87211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b8e992-3699-429b-aea2-42bfac60fb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f0a7ea7-e262-4614-b09e-4dc8c90cf32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c48735-fe8d-4dff-8336-0c3f8bf4d87a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533763ae-88ff-4bf6-978a-5577f707d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f410c9-d7e7-45d7-9a39-718ef71c29f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba8e41f6-bbfb-4bdb-b450-ffff1badde3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a0ae45-0316-41a5-95bb-4d7cbb9cd3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2e1ef3-2860-4b28-b093-7e7be8cbce1b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a07d1f-1233-4953-a05b-c15b47bc8bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4a09a4-7de6-4450-a1ad-ba6ed1a025cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65445f96-50aa-4489-bccb-328f6790cb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e7a1fc-e5d9-49a0-8e9d-ace5e56d8003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783a3e26-00ed-4435-83ab-5c0a93425ebc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992a9416-8623-47d1-a205-b879edb80488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4376e9ed-6ef8-4504-badf-d66852ce3123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e20044-a914-461c-b597-cda08deed534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23bfea91-7ae4-4fa1-ba53-7ce96c881ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c344283-4fc8-4651-b85e-8c9f876b1c95",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0346c992-beff-4063-ac66-052bafafaf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ba045e-9ded-4a4b-a3db-e72cf7fa6f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f0315e-b109-4753-b15b-3a85174dbed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa0af2d-5e7f-4533-905e-748378f3d16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3aba2e-8fa2-4a3e-b372-f1d4a8ee0408",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e412054-9482-4798-8284-02611b688faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d46e7fc-0c17-42a2-ad0f-038beb066322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d395550-8050-4eea-8922-4c328816a16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "157b3261-2d7d-4b94-b539-0d07670aad3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c9c3b-bd33-4192-863e-07e78b43b4e3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b76f23d-a294-4bba-9817-abb04bac3718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3390a90-4407-4a86-be80-fc54f442dffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4729c405-88dc-43a4-a8c5-45de65796546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41e9371a-2456-41d2-85dc-b5aaefb282ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a618a8-51a2-4548-9913-6de678460c1a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513de165-7d8f-4740-85df-1ae372552dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce613ab1-fd41-4b8a-b019-71608f093428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f225e3bf-ce85-4ea5-b418-91b717242c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0f8b56-b2b1-4b2e-bd68-3178fbaaa243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4119a68-6faa-48d8-9d35-c8e84fe8fba8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7877675d-9243-4534-adf7-30ea397864c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be81078-df93-4370-9d11-13ac842a2994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f04c58f-0651-4051-a728-82c2e5418077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d40449-4897-4aa4-bd9d-59c1822a9151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2435aa5b-1dc1-4d73-8a72-7be2a53cf941",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0257681-13f1-4e05-8344-4d3518148f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d288c7-f686-4b5f-9a18-0f686bd3534b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebd1549-385f-43e4-8ff7-ba40eaf87a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e721de0-6166-4d48-846b-4b6653372bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f70ecc-882d-419c-8c59-6d13f8f76cc5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4144ae-9b2a-4784-a424-6a9d0586af1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067c34d6-3820-4e8a-a8fc-2bb0024cefd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e05441-d80a-450c-9dd8-ec71287cec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "acbc8566-da03-4b14-8b7e-7d1af9d4c32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397a93e6-f921-486d-acc7-5e8b6e9784d5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680a7b32-cc55-41d6-a098-85af904a38d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a75007c-8679-49a4-b6be-21fb05f50def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ce0346-15b8-4781-a6ad-236d22093ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ec4aec-5979-477c-9fe0-08aaec9f9c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b5fd34-0410-4d41-aa53-eb12f414bb80",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e54957-0fca-45be-8829-cce70efc640a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fed39c-a065-440a-b2aa-b9f65bf9e003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92021fd2-ab65-463a-aed7-840ae0f53fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78668163-9398-40f9-8bff-8acd1e124581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558adea-ba0e-49fe-ae5c-13834dde14ac",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f953843-1fd5-4c97-a122-d762186de3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddac6ef-1f8b-47b7-bc00-b9e4c2673199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561e3770-749a-4668-bcfb-f361129cb58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ec201a-8afa-45aa-8101-8e90c48a0d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18604cd3-a1a0-4a91-957c-1f1d684c08ca",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2908e386-1ddc-413c-8017-4ac152299f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b276c296-c63b-42a8-9c84-3e6ca916eb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a710c673-af75-4fe2-837e-869aeed491a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf37bc6c-881a-4e32-96f5-3b7ee1f03c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde20435-7678-4783-887d-5a8f7ca0dfa5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0755b970-0e89-416f-86d0-8a753300efb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f778112-0ac6-4d29-aa84-6b6e4b181824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c3e4a4-8676-4035-b11a-6dc6dca4ca05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "866aff57-c3dc-4bde-8633-bc32ead85609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1f88a7-748d-4b7d-b375-cf9535e2caa3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0389b5c-8165-4dd8-9ce2-d497dd779fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1603edc9-b241-4caa-86bd-21c85ef7a5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b630e6-12ae-485d-ace7-dbef25ba928b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "249abffb-2c3f-43a2-b84b-e6bda320a8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52730fef-c23e-4584-9bcb-1183044cf7b5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa76c647-ab5d-4911-82d2-a6a036b52f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd674f58-076c-424c-a124-1eb01ef4a4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd9c76e-d306-4496-ab53-05551d8fa1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78c1c23d-c0cc-439c-a17d-1efa67de0483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b167be-4757-4d29-a26a-0e02ed07695e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b6da18-d29e-4806-a157-c56dea33f841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78dd7ac5-93d9-4956-9116-2d4c0cfaa069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bff2ea-4341-4f9f-89d7-b61da10eae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08cc37d4-671a-40fc-88c3-7a17e92739a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c92d256-0cce-4392-a0cd-19c6028394bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b476dc-e345-4a3c-a76b-bdde1e1aefa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d238c1-4ece-4a88-a8c5-e3cea80fb929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714bc765-b6b3-459e-83c8-8e86e87fd81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e073a6d7-c1e3-4c94-b395-eb8dfa2dc932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2490a7c-352a-4da6-a405-6bcc3109dde6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4bd0c2-7fcc-459e-977f-da9a3c01aa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8accb388-4dc2-471f-956f-6f577b47790c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98af7364-92e5-40ad-88ee-c64ffde82fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18b7a7f3-2eb0-4ee2-bacd-b33a6b562f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2280a7-edaf-40f5-8c57-589468fc8609",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce82b7-93af-4659-a2cc-0597fd39f419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef43f9c6-53de-48aa-bd63-e91894bef6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd614a40-e314-41ed-b25f-4b342e9e484d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b99c0972-a602-4665-88de-0d4f3b7ee860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f4db97-3f1e-4107-aaf4-d1d72dbcde3c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5448c5b0-63bc-485a-9d42-36ad2973f6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c173a520-6d7e-4e1e-9d43-45edec1f4e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516d8419-8f5f-4491-ba5f-5cb7143531cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "005bf55d-9a63-4ef5-9ea1-1eb7609e926b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1a5ccf-b7aa-479d-a92a-2c2d09e5a78a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb785977-46ea-4f7d-9ca3-2fc5baf8008b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9359c4a1-f3b9-4702-a8c0-9b7f7fdd934b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caf05bb-1e21-43bc-ad11-82485dfdae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5140ae-7137-4f74-a850-3891450bb519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bb42cf-06b2-4287-a8e9-b7f30e015ce1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04678d7b-d83a-491b-b1a0-607bf52c66f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5965a984-3c22-4670-b38f-a04cc13e41f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf99317d-7231-4dc0-8f2a-822ae95504b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf41fd9-26d7-4c9a-8ba7-189d10ac82f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c653c145-d805-4d5b-a5d4-192598f4d7e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c15951-0e9f-4e7f-be1f-2fdbd53958d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab3604e-0b78-4bda-9409-5ffe155f06e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807504fd-a012-429d-8179-d457761ca1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc81f3b-210c-4128-b9cd-585f6f3eb448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b430526e-4359-415f-ab3a-a57f920b0ae3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93229756-085f-4b2d-a514-ff6712d9e574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2b7b9a-bf56-4f00-b05b-5084eac8ef38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd61ff9c-af6e-42dc-b4d6-6347031386fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbf56c9-bee6-46c5-8a83-3af869405e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf38932-1732-463d-bea7-c52baf0b7789",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823ad1ec-ded7-44c3-8070-110769c7a4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4e6140-db77-4579-80b1-3414321cfafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e629c6-3fa7-42f2-b271-ab4bb03d5f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64f43631-bf98-4dee-9f53-6594b6d8ea65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c4ca84-ce5e-4426-a073-1cb80d6c1301",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4526b01-930b-4c8c-b73c-a061493cb342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd39b20-a70d-44e7-ae03-cb32401d2ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40845e54-73a4-420e-a24d-f22445708d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1539a1df-a443-422e-8673-0e92a05ab2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ca7082-bd6b-4e11-b173-a92636d12417",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e5f97-d6d1-4842-abaa-386ff5b316b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5260558-1d1f-4370-b5fa-80fbdecce4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3c91f1-1460-4f69-8faa-1e3f09cedb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e89bc3b1-8801-4fb7-9ca1-5992a635b674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18265619-6b81-4fde-b367-c10642f1b800",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9661c74d-071e-4d65-b851-fab43260c0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d327ba-b4ba-47f3-b670-5679bc6fc01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d05eb9f-75de-43ac-b976-32505c6ffab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98a4b10-3b16-4566-918e-483bb1f7ca07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1e43b4-7ed6-41cc-83f9-e81f6e3bd0fc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e8f3a2-5b86-47e0-b676-7998ad732d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98da45e-7219-4426-9dae-c1f2369e56e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e101695-4310-4a06-a3ea-f9173267ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6308628-d977-4a5d-9cd6-32136d8c9e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e49121e-4aea-4cc4-ab61-ed670c8435c9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d709128-c12a-49d2-9848-37f1e0835d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480e5e32-15be-4f07-93ce-e3b3a38777b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe0c7d0-d9df-47d6-a336-bd7b1a92c6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "289cfec1-184a-48ac-b330-8e20b810e882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d163e52-36e8-4ade-a131-1a0a4a08e283",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322bb7af-0b4c-4263-b4ef-bc6f6c4b6dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40caab0-17f0-4822-a884-bf9a41ab77eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f65105d-8bcf-4d08-b1bf-78b95ba8c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd0bb15-9376-4f7f-a174-2f31560fe08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d300a190-5431-4451-bbd0-10ae3d56a027",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3704e895-47f6-4863-b951-9a4859876d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492c1feb-9471-4367-b4eb-17c10623694e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4309a1d-f7ce-4833-92a6-fd9b40589470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52b2b1e4-fc9c-4751-b901-a3209d9b0053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708f64ff-eea2-4cfe-b2ff-879d15423c57",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726ffb26-1393-4676-b4ae-f95c9e14dd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea20c28c-cde7-4e4f-935d-9db7439c6de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13a874b-eb86-4468-aab7-7d010be5ebd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f186bd-fa3c-4684-945f-a7f1bdf6e4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d2e3c3-7a82-450c-a195-e247969962b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554f28f-7f5b-4654-bad4-8f2845ef3513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c0d531-aca8-46c1-8346-322dfe7ab4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b89e68-ff40-47c4-8fd8-2c9764e9130f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de516a5f-646e-4d11-8052-6b9c82c2d625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e12b47c-e959-4781-9f32-5f73e177264c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a7f159-8372-456c-9faa-9e4b853ab882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d0b888-c66e-4401-bb39-cda94fd6f053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22731386-fe3d-44e7-99cf-11bb2340f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e3a142-12a0-4ec5-b6a2-8abfdb086a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061b4e36-7d5d-45e1-8be5-625aefee8d98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43643bea-00c5-46e3-9559-3d7561f596b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4910cb0-49f5-4f93-a2bc-b1333f362b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e1cd69-83bb-48ea-a61f-8c172a613abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "acb5aba2-3cda-4c24-b1b1-4564f2f3d99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a256dec-42ea-4657-9eae-3a465eddffdb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a6e00a-1621-4fdd-acce-0acfd0476457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792dbb39-9afd-4d26-8d00-a839dde8df53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd122e9e-9946-48da-8ef0-2df3a3899aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96ffbd20-c890-4c03-8b51-3e1323282b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fa3e71-7f32-4a88-b294-c80c10c5a926",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32c1d47-54ba-4e14-a41e-20f7816c5ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805d2f2d-1668-4204-a41e-6fb7265ff605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453882b4-4a35-4e18-b32e-8397280f4ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "98ce2fdb-2003-416e-9a40-7e8c305f1d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96ddd57-d335-41b3-8604-54d62757573f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a568dc6-b7ab-4ba9-b5ad-cd751a03f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c66248e-7ed7-487e-8ff3-dd05403ddc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b159b-825b-4aa7-9e88-415a62b60552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c849815-88e8-4ca8-9f35-e5ba0ae03c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c4820b-0090-42c5-9db7-2b3d198d995b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6822a40-bf85-4c50-9b96-21da5604f72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7078a079-0229-4cca-b3d8-042976af8e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fd12c5-6f23-40bf-9098-3074f2485895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a49725-39df-4c40-9ad9-7938ab76fe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aeb2e2c-76b8-4c64-9f09-fc39a83bb245",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6d6293-1a9c-4811-a060-d0af81aae0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f86e209-3a5d-4538-b640-443c3169fee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2989676b-72b3-45fb-aa6a-6fe4128bef09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd9ba0b-f2a2-43f4-abde-aa98d9062fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beff1a6-10b7-4729-a94c-7d2bc1e3d43e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2925a4-83fa-45e5-a294-27d253463f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d554af14-eb24-4d62-8e6b-259cf469db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70bc6e8-7131-45e6-92d1-4bac2ccfd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40aed07a-8a01-445d-8c65-59d98cd6085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c14b33b-54bd-4279-8f93-97d56eb245bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84011994-a202-43ee-832b-35ea83848a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b430de0f-c9ce-4437-b745-98b4d71307bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e114d144-b30b-49e8-8806-0c0986984177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80dd6a25-1bf0-4903-bf88-452ffed73e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0c8445-a20c-4c74-aa04-63d54745595d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ce8759-9564-4515-87a1-aad290c30c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30b0b90-fece-4f3b-8a28-f9e79e51e7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a2a2b-d5ae-4ffb-b63d-80ed3ed9efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "90dd992e-93b4-46e5-a9c0-6813c15b243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb59ee2-31ab-4f37-a0d6-baf7485445ae",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97b5db-e4e6-4dfc-9d57-0c0d436e47ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258e2a6c-e49f-429f-9f8e-9a1ba05f8a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea43d09-0c6c-4477-81fb-e4833ea2ea43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "afd5c537-203d-4d40-b1ed-507be3f8c10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f02f2ce-37c2-4510-b1aa-c909a4c4a64e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fd8d72-0a41-4d7d-b9dc-93c9fa94b895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fe1342-ba1d-4347-8851-39b8d3327e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fec8dc-52f8-49cf-994a-5b360db762a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4718c2b-4bc6-4811-9930-3fb14c085275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45305020-7792-41da-9d48-3c14cc86367c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153ff262-a273-4ba9-a9e7-82524df37087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38362603-d6ee-44f2-9ed2-a30db227f910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb07cc48-eccc-4d10-87b4-3cd670e5a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "218b082d-37ab-459e-927f-04520beef8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784d91ab-73d6-4ec4-9da6-2708eaadb0fb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3728eae8-9b4c-4893-b4ad-43c46338ab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02effc6-5706-4a48-a529-06776688f0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1173046-b2cc-4036-863f-823c2045147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96bb2687-3afa-4789-9f38-f6ef01ad532d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131c30b6-37ef-43ed-83e2-2df31801364e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e149a9d-d872-4ed4-8912-cd06b780df7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e60da86-76bc-4be3-8b90-536010ef808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b7c0d2-742f-4767-80ac-e05495fbc9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb6b817-de62-4fa7-873f-a9b24f98d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578b3c6e-3dba-4da3-81b6-0d9343d6b651",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fb25ec-48c6-4c64-86fa-eb9a9c866d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a058bae-790c-4385-8c24-cc190687e2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9fc064-289a-401c-9b6a-0e3bc03fbb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8453fb0d-72c4-48b1-8ac8-b431f44da4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601634ff-5846-47eb-8729-8b8dd04990a9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56716991-1335-4625-9371-7c401c7b13ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c711006e-5158-4499-8344-3cfc0eff7afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3cc72f-c2ec-4679-95d5-8d13f5e025a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3baa2471-0bf6-4d9b-8735-bc408b49a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15664ff9-96d9-47e5-9652-99788e5a876f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b389dc-529b-42ec-b4cb-6406ef3d8cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b45b4b-5bc4-487e-89d2-b892ea4e5f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8625c0a-b9a0-4159-8148-bcd21c323cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d557cfa1-56eb-459d-b028-0f0df71bab67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e271f23-2150-4ff1-a719-3278c1b8b01e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbd057d-8ab9-471d-8e52-5b515f567c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f87a85-d514-4f27-945b-41f418d755d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef99c83-5aec-4b86-832a-2dd8aa29a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fafc13e-3248-4674-a33f-5ab76f12bf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e86a14f-3fd2-4263-9aaf-c5b57d746762",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f5709f-efb4-4ec1-a1ab-30c2e1159ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51149f7-2899-4953-a57e-ddb03eb3b1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a754b1-db37-4362-97a3-dee445251db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b142dda-5af8-4718-beee-a51196306b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e1c2e8-6f90-4d48-a317-1afb019f911e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a46009-f128-491d-ac35-9576e9d5aaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f00394-4da8-4cef-8afc-ad48dc0ed56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2faafe-23dd-4276-9840-17d02b975e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27ec697-fb1b-424f-93a3-0db989d3353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdfe263-64d3-444a-bebd-8c096649748e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84978431-94af-410e-a6fc-0b165859dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dc9a5d-953e-438f-8342-eb5409a8aad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ed1ecb-ac39-4461-b0d0-e8cb1a4d29c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d12b926-9cf3-4be6-87e4-868ad3654f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a8c14d-400a-4f84-8951-3af0edb88973",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3bc33-a806-4bc1-9d20-4866699b2c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4ae7ac-d051-4619-826f-7d2ef37f72c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5e9b29-cbe6-453d-9eb3-dacf78f4ad88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4ca736-577c-4493-93de-dd94913aea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb295a3-97d0-412a-8560-dc05aa057e09",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b519261a-1dc9-4c4f-992b-dbb1ba57f5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1496354-547d-4175-9c47-ddea61483966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e533a2-a73e-471f-9b5d-abd77c5a2ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c638c624-1fc9-4e78-8b52-0f72281bfbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89638ab9-6246-4410-a400-c49b63a51d94",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fca55-7854-4018-bf8a-6de8e6f0f96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b34cc50-ada2-42f0-b433-8a60bd7b92a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0371839-d6af-4e8a-925c-f2d431f4fccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28dd66ed-44c2-4322-9ab3-8ec53c739e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb276642-5011-43dd-b901-967d2a5fb4b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a1d44a-bb31-482f-b302-ee5d066b3697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46612812-dab7-4e5a-b58a-0eccaf8975b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794ea31c-8f4f-47f6-a4ac-595de68eb708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3482d3fb-b65f-411e-a087-68cd6a314bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63397aa-f939-47be-9fcd-2fb5f58e5e58",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa05cce-19cc-4e7f-b119-0c381af546b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad889e5-778b-4abb-803a-b2acb4f0d7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b28de0-77ce-4ba3-98e7-53130d21dc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18af544c-48f8-4d70-b9e0-10e8ae47a2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710977af-7fda-42e2-a340-ecd4623f2a8e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25df03fc-47d3-4ec8-bc1a-04fdefe8506e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc0cd96-6e2d-43c1-9b90-c29965de81c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc51b49b-e30a-465d-8bc1-7ba6d3405f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad28e99e-8676-4c1c-99a3-3cf04531d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b86e251-c816-4209-a562-4371b8f8c9af",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a253c712-c1a7-410e-b520-7ee096e05f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6addb281-5014-4a77-bce9-b2681d21556d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ac2f25-3238-4472-9993-549b58a9135e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5071909-e713-4881-ad73-8bd4bd8b340b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862c6c3-7f97-4610-a113-141807f8c58a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbde67f4-7f04-46dd-99f3-04e17ec055ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8d287f-f172-4c41-badc-93714d5c6cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85eb95aa-79ec-4868-a459-3433b270109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6da1bd-580c-42f7-a00b-4027cf3c5006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732dc4e4-4daf-4890-bbee-a81bb9a95cdc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49c4f7e-0bad-4d69-a050-834bd446076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610b8be7-6764-4aea-b424-2fc034753a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8982f89-d1c4-4538-acbd-6237b5fd4527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d6012e-8ce8-4a4d-9ccc-2380b929da2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374ec4cb-15f3-45fc-8f63-3d3b33588f59",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1656dd5a-0272-4ff8-a296-b2e02fb2fa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78dd7c0a-daaa-47ce-ba9e-fd1416ffe8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa8853-bf5b-4a9e-91ed-939e1b9571a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd474ce-54c6-415e-8f17-2dbf0b133ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdc933c-120e-4a60-a45d-9b1cc8d2e746",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "482c2f4a-165e-4127-919a-09310e8d69a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb889da8-31d9-420e-91a5-8ed53f8ca34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf540ff-1617-4cf1-88bf-c55774f9f1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d12602b-f43b-4689-9215-be3de266fd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797b8e8e-51e0-44c1-a2a0-e3f7e32106ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32038be-d7f5-4da3-8cd0-b5e7d659b384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1227dd72-a996-47d8-8c8e-b690072b563f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f09bf8-6359-4824-8d15-d9ecbcc1dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc54478-a4ff-4e35-b4ed-bbea6a3e59ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9094a247-e4fa-40fb-9268-8eb3154bf26c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9391993-c3fc-419f-a753-3878bf98392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd4ee23-791c-4533-b8d4-bb6ced04a4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f2111c-7b1a-4fe0-811e-d4e2c7a93c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3a8939-03a4-4bda-9bb3-d344f743bdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45fbd60-7585-437a-8e70-89f30d059320",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e2921e-2da3-49e3-ac52-9f875e5fff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3052603-e5fb-4f77-ad4d-d1c84f06308d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960fd277-743c-4fc0-9028-d2e279f2cc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a66ad1-3c2d-4739-8e5c-a8c3cf5414ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c8dfbd-021f-44d0-9f0f-ff52d3ce151b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe60e5bc-e039-4b7d-9bfd-95dfa5387dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1351328-5ea4-49ad-80e9-05ed391f6490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7f6915-4a5b-4cca-bbcd-b572b9a4d43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f77ad4-5f6a-4f9b-a3b3-7b62fec98cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76e7839-bec4-4e08-bb98-42b786e9cf63",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cfb9cd-325b-4431-b004-6ce6be572a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f17693-c85e-45b7-9eaf-6630b746d306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e272c-4040-451b-bb02-6f4b4fb4cb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "517b848d-dd78-4ecc-bcbe-bf28c7383a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec845611-65b9-4930-9137-e9678f21a0b4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f0c93c-9ce0-42fa-b119-3fa5108e9c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7635f61-93bb-4f2e-8454-3b014646dadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa51ade-d67c-4df7-999f-476de128d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "17e9f392-d2df-4d40-8747-6651e56642be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceace5d2-350b-4eaf-9853-ad743732e9d0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e98720-ef26-403a-861c-d4cf0c88d2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e399f962-7c3c-4d7a-8b8b-ed721051fc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e01f955-e9d6-4c04-b4b1-c4a7de1150f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "96b10df9-29a1-452f-9aaf-6edc15359f78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87e33b1c-bca6-400c-9274-4c6a9054eb20",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b69423e-9cad-4d04-9e03-9e7ddf6159bc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3217effc-6b03-411c-8d8a-8aa39a49dd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb47f758-4f45-487a-8ddf-63e7d0693407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651bf156-9de3-45aa-a599-54d8770f44e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "419d571b-b4a2-4cc2-8d6f-c9267b937e63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8449076d-0c34-4d2d-aa6d-a13edf83d46d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6273d966-0392-4fa6-bbda-1491be966fc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca7a8ee9-4ab3-45c6-9b99-9ba2e185df17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a68e7e82-a000-4957-85d8-ec0ca49d8f40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "055dd3aa-2ab3-4f88-b1fe-033c8201c6aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d16a233-d2b8-43c1-b356-a143b6f78c3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e5f535c-ecc7-45e7-bd09-2860db98555f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ce16076-20ee-4e84-b2cd-49bfe7fcc57e"
                }
              }
            ]
          },
          {
            "id": "ef027068-6ba1-4031-a82d-ae48c0d1016f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36ad31d0-986b-495d-a045-660ec4369118",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52b4058a-287e-48b4-a68b-0843a5f5932f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36bd3336-5497-4473-a2a2-fbb62f6d2f91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee98fbd3-58a6-4b3f-8ac0-b76e0bdf0648",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a887a5c-2f1f-46b7-a0ac-8fda8419be5f"
                    }
                  }
                ]
              },
              {
                "id": "914a6b62-2788-436a-8ca2-f981e761d31b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afb64b9a-9bd8-4715-91ca-7d54db8a913e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "311ba746-c0d7-451b-a911-6fdccdb59677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af0cdda7-8d1b-4bc9-8573-a3b5f3959290",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ea6ec6b-67d1-4950-bd64-7e438f9f1bc2"
                    }
                  }
                ]
              },
              {
                "id": "f4d51402-5fcf-4658-9f02-c20eb583821a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3625400-5af5-461c-97bd-eff34d9ecb06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abdbd457-e987-4be5-83d6-e23ea93130d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b5034b-34ba-4607-aacc-664545a9b1ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de6028b4-b6ed-439c-8765-4af1d6b9fee3"
                    }
                  }
                ]
              },
              {
                "id": "e0ec9ac5-884c-4a8f-afa3-696848e6341e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4233b333-eb96-4b18-9318-689f6e3806c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9c6da8d-d927-4831-8d1d-62c2bf73c2b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e12a10-42c2-431f-8bea-7ddfe1254d2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "98582e41-34d6-4136-a2b3-79d9a7e667c5"
                    }
                  }
                ]
              },
              {
                "id": "e7a00f32-08d3-481a-92b5-c03b6fcd607c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c7a8c6b-743a-4589-8402-e9007eab1896",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca36699c-2510-4d08-b8a5-a302d582e41a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e20be546-abfa-4bad-9a02-dfe14a649973",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "55afa2c9-091e-43e1-814e-981d10dc95b7"
                    }
                  }
                ]
              },
              {
                "id": "3f419b15-db08-4660-a8d8-a3f7aa9e1855",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0b12a8d-00e5-48ef-a336-03379632c443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5a006323-335d-4a9c-8fe7-89382a2689a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "677bd09d-cbc2-406c-b068-8c7b5ab96b1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3f967f7b-d703-43b7-8b7b-b23f2f0cf6dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39c52d77-6d67-46fb-91a9-41b316604bd4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0923da60-e7f8-4a23-8448-b05a55e2529c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36a2aa5d-e19d-4218-9ff2-581779c6fd6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83cd0cec-7fa1-4ca7-b494-19e63ab65bc2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad41d01c-7ed7-49e8-a436-fc966e832f12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "369020ff-3176-4294-8545-685f5e00ab29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36f708ac-6bdf-4dd6-bd98-54cb0c5c8d95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3de55480-7870-4762-9819-b41b736f32d9"
            }
          }
        ]
      },
      {
        "id": "c188bc79-1c34-429f-8c83-a36024dcef65",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dd3ac07e-a674-4bee-85df-b65bcb1169c2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "511435e1-c851-4945-9ffb-7b77d8c24764",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b76e83a-2504-49fa-86c2-9e1718fbf994",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4270faa3-04a8-4303-8fb8-c61e2db89819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a972c8c-e9d0-4251-879d-2f4425b8283d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b0b23f-8e70-405a-a05f-044259eec530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "03c4604f-82c5-48d3-997f-e7b7fe7286b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3c02e2-f195-4efb-a2de-4bd4cd59c324",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255167dc-79c5-4ca2-9a97-9bf6434acc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8ae268-ef45-443f-814a-022ab1139d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d68e6f-f528-4801-882d-3c547ea62712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ac32f8-e544-4b01-bd0d-424a0621ccaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05408c6f-a49f-43a7-a9d6-497455caf068",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf49c5f-de1a-489e-a36d-671dec2bea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c46ac06-b7f7-4459-b0af-345532c67f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a542d4e-e18f-47f2-98b9-205293e48838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68382eb4-ebc1-4d5f-b315-70f8a7de29b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd68b5c-336a-4fd3-9cfa-47dc64d9eaff",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf8f42c-f989-4abb-87c8-8bf6bb4e4f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c85b5eb-accd-40a6-af8e-b9409cf6d9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24219a83-3821-45bd-8ae4-3024f851c2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "948d0575-f400-4ac5-939a-648c59584576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7055908c-a236-4673-8cbe-22936fbdb2d7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683ba2cd-f9f8-4903-94b9-a8d2e8b33006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b828a6ff-258e-402e-97f2-5a9bfe06fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ba8cb0-a0f5-4607-846f-5ee243e1aa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee7a8fa-9e07-4753-aab4-a781f8638045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838daa5e-ccb9-470a-98ed-0941d23ba05a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedf9aa-2db7-4ba3-8593-91bd4dfd649a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b167ca26-d692-4368-afb7-7d4ae1957919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1870ddbd-9a40-4881-bbe6-22e7a20f89b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80b9b3b-0c6c-42cd-8c1c-edc32cc396e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d47040-cf88-4f33-b5cf-118cb8d39ded",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd50e7-5061-434b-aef7-6440c56bb630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3417b0f5-bbf0-4472-a466-0bb08bac048a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d844f9d2-96e9-44cc-8858-6a341f071587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3676a1c6-e73e-4544-ae66-02c09576f378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33585b60-e65c-4cce-8e56-7df98ae42205",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fcf138-d210-47aa-bb17-c4d77e5d1462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dca7e46-1d9f-481d-a076-30a60b13c559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221ab7fb-0163-4568-bc2e-1a22cf0619cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a61e2b-b810-4a3c-96c7-f599cbe0172a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b0a811-2f88-44bd-9d88-c2fd50cf5718",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3c0ab2-714f-4b9d-b2dc-315325374033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1a32a8-b76b-482f-8737-694d73c1be52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf50cb9-7d80-4021-a677-af994b31183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "163fc15b-19c2-40b1-a360-7b08ae76a17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54005a2a-08c4-430c-9262-ba1dce4aa768",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e7848-463b-4d6d-8b6a-4397be09cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d22056-b304-4a54-acf9-abadc82e73fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c5b736-886d-440a-b2c4-06667b2c9249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d77604-b1a3-457c-8c28-2a2f9fe677ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b908d7b7-fec4-4b78-8a1e-21521da77bab",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b37cba7-51f0-4fa4-82be-1a30eb8fdc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f82d99-46be-4a3d-ac33-c26176a082a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabb9e61-2def-4140-81b9-b1438a4584c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c465e751-2944-44f2-aac7-59c90990a6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563e16cc-acd5-43a1-b5a8-79f7154cf058",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b626937-cf1a-4480-a4c7-7d2e5c859846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3b9f2b-94c1-4368-ba91-d885e6fe755a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c734f75e-b699-46a3-9b89-8c0132ebaf27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2787189-97a7-4fff-ba4d-247a17850226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1f5122-9797-4951-ba15-a36bd3cfcdbf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716a7a89-3f25-4f8d-82a8-384f35ba00b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba23be07-fb80-40e6-be5e-7191362bfb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff422f25-3660-4497-abc0-507985fbcb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37705381-7b54-4fb8-9c38-4464e6d80f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d618404-a11d-4e2d-a245-e568148d56f9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e860b00-d6b7-49a5-bb95-2e5e99e65d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8fbda4-c6b1-4007-9d10-5df6b9863fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa71ac7-538d-425f-bcf2-8d3a2359f299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6541af-2323-4962-9f0b-c51bb9e92043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16fc350-1c57-4ba8-8d71-02af9a31bd69",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e9ee90-5109-4ce4-b1c6-aafdb7d6a528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27f3751-2cd7-4f1d-bf40-dd3f8dcf6aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d44505-b9ed-476f-9fa2-164f76ed5f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8182719-bc6e-40fc-8670-53a81a6e46b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b227b8ae-2189-4436-a5c4-75ba10b6a459",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c942b837-4a07-4173-9997-d6afb0a77a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b864d918-f063-4593-8be8-995ad553a220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cf8f05-7804-4718-8286-2f5e66179f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4fd1d7-24ee-4238-8daa-6ee3864bb4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fa20d4-78f8-484c-a39d-872569691461",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a23bf23-1108-4b31-97a0-5926e1e26a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8678479e-cd70-4d20-9697-8ce339da7264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c61791-b177-4801-a6b5-293ec0342577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c135b25-cedf-4ad2-b3c3-d772e1f3e738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5a4218-9b07-49ca-bbf6-d7423d69ee04",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca8c802-b626-478e-b75e-83f7ef8f99bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f05cbb8-fe0f-437d-b559-4bf1b2535988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765a5fd0-a117-4ca0-b943-2d94db5e6338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a74091d-c773-4dcb-a9f0-83817abc8b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16191bc2-e07c-4185-9190-f335f6ffb278",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b034e87-9306-4454-a56b-355e310f46d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73169ee9-c5af-4fde-9ceb-7b6c0e234102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d1bf94-7c1d-4bc1-9b40-9412bc82c44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fedf839e-530c-4c6b-ac0a-40a71a107797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e139034-b8ca-4e61-a2b8-a649e3679699",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2aa6bed-c6c7-49a5-8a76-ac7a497209fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87fc576-9ad1-436a-a5d1-8c65cfe6cb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc1f573-3e46-4b3a-b846-200f301813e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb227b91-1aeb-4824-8ac0-b030db4b0450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908e8515-22d5-435c-9125-76209e883ea7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74228e51-44d3-4a21-82dd-5b42b4e95f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a169ab5-c98a-4a3b-a9cc-d34138a4605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62cd7b4-9a9f-41ce-91a3-82a737a8b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fcfc3a-a012-4353-928b-c5ae91f2aef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33129b3f-ac83-4a72-861a-c11228365c22",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cb90e1-9c5f-4d3a-a75b-934ae53995fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dde417-b7c0-4d9d-b208-1f7a691d8508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddbc62-0ae5-49f9-914c-2d79447ccdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6976dca1-8128-4479-93d5-5db9a9c5bc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0610e86-8259-47c9-9426-d85535ef4d82",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1905156e-a03c-4a5f-b606-7d73b405d93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed98b89-1d1a-40e8-8728-60a59946d24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e622f82a-2ba2-402a-8bf8-bc7089038132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a9292-aa73-4b5f-821e-52914155574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9dd825-1621-49c0-9e1e-b0b205326a3d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a09a7d-4fdc-4f34-bc54-0e2dd0d733be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dfcd31-3376-4523-a47f-fa0dbb46c37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60497dfb-c253-4750-9e92-5d93802475b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbbe1ff-2afb-4f52-a17b-8c6deab22e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b429ed5-68ee-40c9-950b-a7088f22595a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09711b0-f101-4d95-8ceb-a61601f41b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e1db93b-c9fd-4cb7-b171-ee8798fc0a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce08e34-cd34-4f1c-874b-b59ac90fdc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6a8546-22d8-4bb9-9a4d-016a68478493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bbefd2-3b15-4d3f-b5f5-b7445cfd86cb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd418e47-51d3-42d3-82b2-d27712a0c7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d78844e-ac6e-4b6a-943b-0b5197ef5a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620d48ea-b5ee-4a3b-bb83-2614707a153e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd171bb5-ac92-4fd5-b796-628a2341c6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e1db2-f9ce-434a-b3a5-c1e1e3466cf0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a3a4fc-3565-4f34-9de4-2c6495b82815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca719b8-3dfa-4f35-b20e-a4b042193070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7fbebd-d0bb-4f83-920b-650f8cdc095e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c700bb5f-32cb-4350-9952-7695eb12ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d42309-211e-4dca-ba7c-4aef3b331d97",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ed5976-3162-404e-9a0e-e4f1c02aa958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c5f0c9-dad4-47c3-a374-a3dd365c67bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46694960-0bc2-4fa8-a8f6-53dea9749a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca24b8e-13f3-421c-b2cc-4f0b947710f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ebf5c0-00b6-4c62-8815-8462dec36c53",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769b6df5-8b11-4aca-80eb-9e6a98640904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e479445-26b4-4ef8-bec5-2789c29ff97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade7c099-6342-458d-b32b-eb46cfdeaf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb65de9e-6485-4307-9de8-3697b5a10b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91fd26c-a4f5-428d-8cbb-281120eee834",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12985dc-671f-44ba-bc51-06b7cef6672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7a1235-3df2-4752-bc99-04bcb12608e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb000a6-b902-4d81-9b2a-b1058d61549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85219fe-1ca1-4a14-afe2-085167418932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0844fd-1fca-4b84-94db-e7d4c6a71bc0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70329cae-e6cc-46b9-b56b-2b2a751f599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded64eac-81f4-4bb4-ad8a-d9116d295a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eddb8c0-c7f9-49d2-a8d2-5374d89e2ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc5abac-b7d7-4dc3-9828-8180741c72ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adda21e-4b0e-4fde-affb-4c6528c02837",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2f02a8-e578-4064-a4f2-3b734ed14c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851b5431-05b4-4c3d-8c4d-bfc3b2a66621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91a4ab7-57db-41d0-ba20-5fb5a632dbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312cfa09-ef50-4e6a-b822-b9e6473d335c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adfbfbc7-b775-4698-b173-48237d699f1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9e0f9768-bd7c-414c-ad14-fe7874a58b75",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354754ef-8a60-476b-9c3d-77c75fb11281",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "38ae3ba9-a90d-456c-a427-7d2d24d0cd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94335fdc-1090-458a-903b-ccc1331525b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c2bb639-8a3c-4b36-88bb-4997ba2d87cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48555043-346d-4c02-b683-d951296fd57c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8134d8eb-9381-410f-bc15-23cb91c03e42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b07762b-8cd1-48ee-a7eb-c26a1f9f1399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4b02b8b-6e43-462d-8cf4-dd78a140c834"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f7960c9-10b7-4091-b057-0e2692604600",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2b9894b-9b48-49ca-bf6c-d94c040017f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "716ac1c9-2831-4698-8ea5-f04f14ae4774",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8098112-9286-40b9-a71c-12dd6a0523f6"
            }
          }
        ]
      },
      {
        "id": "cc247b90-27b8-4ddf-9153-e8d2e8a20c00",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "66dc9df8-fd2a-4f27-bce0-9975958ca6dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fb408d5-0fb8-476c-8fe4-d47c8698aab0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0442b32-bbf9-4392-ab84-ca0ac45e1798",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72265881-2ce4-4f18-8da1-1e65c321e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a328983-2bd1-4046-9fce-b17edf4a5fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c32309-43fd-49b8-b153-829026e46952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bca8163-a319-4e2e-9109-197b09c412d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11212d48-abd0-4872-9e47-4bea9696600a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f84a82f-4b0b-41bc-a80d-ace0f86bfdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcce7d4-a133-41b4-8f57-0f1897ea2697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250c11ed-04ac-4b16-92c4-22dba8f6b758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d69130-c956-410d-966e-c9a4e2443eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06200be5-19ab-48a9-bfc9-4a6fdabf2f93",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2bdcb3-637f-4a48-a3f8-91189a89fdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7a5619-c273-4deb-9ae7-9d37e19e4915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d158cbdd-a411-49ac-99cf-9264b24a8f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01de5474-89fe-4bfb-a5ab-4b4051db574b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27011321-694a-4304-9ae0-810a94f4938b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c9acd-7762-4b38-bfed-bff4d1e3c18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db24191f-ce61-422e-a90a-fca5f9544bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c16d7d-41ed-42ff-93f3-038224369fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ff9e18-4ce1-4d6d-b17a-0238b07a299b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e78b53e-966d-4cdb-bc33-b76c1dd7487c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4c753-f505-409a-960a-1b4be88dddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ba8eaf-555d-4fe2-b08a-b839e0bc96d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e5aaea-e4a4-4d37-af3f-8cf54517cff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "973bbcd3-ae80-4d25-be95-0deab4ac42d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20435a18-57da-4e78-9639-e62e2a0086d9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a8742c-e724-4f71-b6b4-e532533d6d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c10bed-ff70-4dc7-97c4-2cb469e5b6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca04b4f-2e9b-4414-84b0-949c62c9a930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30935a08-2c10-43de-9b84-0d46b28066fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd432179-5aa3-4752-91ef-762c3c57310b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63edcb2-c186-43fd-85fd-0f6be867a2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1b38cc-4a7f-4170-938d-6d59e2436a3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3a4712-ade3-476e-a1b3-a098f0bc741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c4d7c2-180b-43dd-af78-c73df128834a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ded4ba-6c83-404f-83e0-d17739a13591",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5a1cfe-35c9-4c9a-b1f6-c1773980911a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db7065c-1e09-4285-ab23-6199765f9ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17296b98-af57-4e93-935d-99113f4e0605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b05e620e-e5ca-4520-8c23-5765d9eb219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b686ce-2e7c-4718-8948-e1bca4a4f869",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4e29f2-bf78-4e8d-bc6e-0f92e923259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a498c6c-6f62-4f82-8e76-08e425303562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee2117b-1962-4224-847f-eca7c7461c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de2df1d2-1462-4c9d-bbe4-df928a6bc8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd6c85-b8f1-47e6-ba07-dcfaea261769",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4fa622-3312-4294-9da0-2ba18913b62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948772df-95a7-41fe-9190-8e6241d58c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cadc8a7-bc39-4d2b-9c5a-e8e4c9629c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c86fef91-8f24-49cc-835e-10ee025ae8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b9dc93-2292-4858-8835-9e19f3b9ce27",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06758b8-03ab-438a-87b3-42b0c4ca2f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb62e914-fe1f-4075-ab72-20f4e652a421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcfc000-318d-4ac1-8c8c-a35b37854f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd40eaa-519d-4206-8019-e9bb067e4788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5c58de-45f7-44f6-b5ed-a3389cb036e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564980c3-6c1a-4397-84be-e9d182402338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e329bfee-e222-44a7-8f21-0ddb7704ea13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ae8f1-1dab-4c4a-9733-2a117674ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b8078cc3-78b9-4edc-8209-a978e861c7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bcd9b2-d221-431b-939d-dd1747b204e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65030b72-cebe-4027-9e09-80f8908554e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1ff0a7-51dc-4a23-85dc-76ef51ad8316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e703027b-80a1-4221-aaa5-d669d5c4f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "949ff91b-f018-4b2e-9782-2f13b10f377b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eadcbd3-2f16-4044-b6c4-77ff8b362f46",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a70d889-5796-4d1d-9f16-756b0c1d4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca76dff-9e60-430b-9346-14b0768a0ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac150e6b-4f19-414e-a69d-f2a1f29e58d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "51114097-8533-49e7-a21c-20f0b1d48b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d625c4b-c651-4fd8-bb85-9cabcb8d42b9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76168f76-dd38-43ca-96f6-0001f6f86c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05757e2e-36a3-4ae7-8cf0-80611527e77a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d05303b-cc2b-41b3-a688-73b9505fb76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc5e1eb0-aa93-477d-9365-3e0659401c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ae668a-1ee4-4c20-9001-562a58bccd23",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16242fba-888f-4c69-9a1f-70e40a823a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4d7eaf-37ad-4240-9e8c-b88092103bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46679923-7f83-4042-a38f-253c83bb277c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e629d0aa-f785-4c25-b4bc-02621a1a0ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df88fbb6-1e2b-4f50-bd39-469d2e7d602d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec9a50f-1dbe-448c-a070-e0f49299c517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81cb9d7-2aa7-407b-85ef-40525286fb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef4f2a7-4127-4220-80cf-2f435c93b0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74a4972-5210-4198-81a4-33e90d40c7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e6dac2-6da5-4bcd-b793-ee91e76c1c02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba506300-d2f5-4718-b8f5-49534b574548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432bfa86-4a64-463d-98c8-05ca0c39021d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8243d2d-e5ff-4100-8376-cf03d2292d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "159482f5-f546-4834-971e-6b54d35fb988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e357ca9-cc88-4388-95e6-525aaca7debc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b857ad-9afe-481e-bac9-fd73648ed21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a22c201-dda2-4a4a-bd3e-9553b030e831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b29744-0ba3-4c6d-bf3c-e04ca970cb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d8dc99-ec08-43b6-978e-a2370aea5506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91365a0b-a9a0-4836-886e-19465dc68202",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cae7ce-630b-41ee-898f-413e94419ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8393ea1-22d8-4288-b0b5-b3424bf12183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912f8074-e4f7-4428-ab36-026428eb72d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4151c4-4d29-4102-8ce6-aeaf689def1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9925fd58-85f9-4d96-ae2f-794f022ba2c7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bc1d51-a9c7-4e9d-a0c8-33e3fedfe78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d816bbf5-f84b-4186-beba-efb02fb995a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f920d6-fc70-4fd3-a2cd-7d7c61ec3bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c222b5-f334-4848-8d10-96b5efaf2314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f8a7d8-1ea7-48eb-b7dd-f1b2e2cc374d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711dc0c4-e07b-4870-a312-ccb7fc269e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8e78f4-4cd0-4587-ae8d-86fc5d64695a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba21629-fb54-4655-8548-b84f9d51e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9df668-120e-4079-96cc-84cfcd1dc544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69d8f00-f546-432b-bf86-1f1dfeb340b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17791ee-5c86-41eb-a983-85f71d6ffea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f871875-1d9f-478e-8b56-9d39fe999500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145f40c2-6f38-496b-80a1-5aa204c6c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6362345e-9590-4cb7-9ec8-30bdd5a2a533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad11240-cf9c-4ff1-8ad1-02d56c0c1977",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011fb9fd-9bd6-47d6-a167-08b89fecce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613ad3be-eb18-4e2a-8082-575c862e3177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3161f5fe-f263-44a0-b268-caecc215a91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15b76646-8279-441a-bf6c-8ce06cb6d0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1322c1-e49f-4a1c-8be5-cd49bf02a5b0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070c9f8d-1fea-4924-b9b7-5ef839be1e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6a019e-6757-445a-bc85-f1af15e40c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71496942-2b72-4f2b-9814-fe4a4b3b5a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7166b268-7c16-4eed-b67d-c5b5f55d17f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7d3f29-e6f5-4d5a-976e-d3befa1bead1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374a7c91-ce54-4612-adf0-62f6e353959a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9539b22-101c-429d-813c-b15b1ad56b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932e38e0-912c-45ae-8729-5e00fe2311ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e52210-4f70-4c2e-8d4d-52219a5988ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5f6490-c653-4c91-a0aa-a8963a5618df",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e309a8d5-8b9c-4a6d-aad9-e665da799290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be92131d-a8df-48db-a218-49266e5e72da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b11cc8-f92e-402d-9a16-e4d9ce7983b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9672c252-2a57-4b6e-9a7f-ed25c1f71fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072d5ffe-6946-4bd9-b833-25d22fd3009c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28476d06-e07a-48fe-a1ea-bfcd2db58d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660d76d3-141d-4c3f-b081-061eeff18e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8b1bb1-c7ad-4509-b251-7e8f42da0224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3f1d8c-644a-493c-a0d4-b5aecb042d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac94262-b368-40e3-961c-9351c88639a9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e668279-6422-4e68-aaac-3dcc00fa3a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d566e4f5-b447-441b-8c6e-af7197fd8e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de93951-1a50-4dee-b18f-284a679f4a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83bb7dd1-ca7d-4bf6-a7f4-a15ca86998f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158c9edf-7c82-412c-80e8-6cb8e3c23793",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b24556-cbf6-47f5-b2ff-8f5d1359178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e891a2ed-13a2-4a76-a49a-24b0fcf7b769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00fe73e-cb14-4a16-945f-e9d59fa60d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6925cef8-1ae2-48b6-9e9f-73690e22ea94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6220f80d-15e3-4012-bc9e-267bc6e6e3d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcb6159-7ae1-408f-8dcb-904376b86f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66981340-ea1e-4344-9b87-7d349f6e6e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e4adfd-3aa7-442f-914c-6f3a6df02abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a733dcc-6d52-49fc-b9a2-27d0d459f905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e743c680-af46-4f95-a698-3e1a7086ef8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccc17bb-4599-499e-9a2c-a323dde7946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d646ca-846f-4877-b149-da1bde31e160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063c154a-9699-40b1-aa55-c13226231462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b75b782b-6a13-4e05-a8c8-8c1c38a383af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df68061-bcde-4ac2-9fde-822c6066449f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd63b0b-4b56-4ce7-8d15-a99a36f7c5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fdd838-e254-47a7-807d-b76f1af499ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f404ee45-ece5-428e-9443-3a0a1a9be508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5de84e4-cf30-437a-a443-0fc373142ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e914da-f22d-4309-b8d3-3e41146ff7e8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec2e378d-b5c8-42ab-8e55-66e613154326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3897a09f-7f0e-4c33-898b-3009a0c22b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdab735-8e05-4c71-bbd9-744a6eb77254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa0ada3-6e23-40a9-8659-341a5f4f8b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae23a45e-5b93-4e43-81a6-eed5d0714efc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98291015-a3bd-463e-818f-ffe0749a9d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2231d2-0b67-4965-860c-7a935a43e3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad75b9d-f62b-4c72-bc1c-b9b814b9ef99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a2660f-078a-45d2-8649-4406e3e7fde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f7e87-75e5-43c4-a742-a65ec7daf8c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d758ba26-dd20-4208-8c7f-ea9cd7c72f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da73883-227d-4b32-846f-26e8d15c6633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c4dc56-4dd8-4f2e-bedf-4a0c96578b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb19dd09-f2ba-4798-919d-4d346a485978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053ebcdf-359b-46ab-a791-d11427a0237c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc45f52-dd5e-4e0c-9a41-96f12076119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae212cd-eedd-4ff1-a21f-96ffd0cfea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3788b4-d719-4f6f-8518-b1866778fd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c3b03c-d22a-4ed3-9092-71788e387c53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75f8b77e-864f-41e5-9f3a-00a74c6008a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88a5480e-9bec-487b-a6ec-9fc13b178059",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f89bd4-1df1-4163-a0fa-740c16118e35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40889e1c-ef53-4bf1-871b-6c90ec96daf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a15808-7c5f-4129-9bcd-3a8421e6d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea403878-2468-45e3-8b45-bb9268bc79a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "723ad697-e56a-47e7-b5fa-b9d244047991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c236cfdf-0345-4362-8ab3-91478297f30b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0da58f7c-f3e7-42b9-b576-f227ebeeed91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d8c32e4-f7b5-4be3-b090-d410b37c8d40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e942e43-ff0b-4d87-9642-5f0c984ebb06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "839946de-e59d-410f-abed-6677d89ccce4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45c5df97-087f-4046-9ca5-722d3bdfa31d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea1b56a8-80f9-4c2a-a6e6-8830f148b48c"
            }
          }
        ]
      },
      {
        "id": "9f9ef2c9-b9e2-4415-b649-442cfeaca719",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3fe265a6-bc72-4023-9c12-a3de59a29377",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97c25d61-07a7-4a3b-b74d-d0be2d279b71",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b602be0-f6f9-479a-9b35-a691a5891499",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af197b1-b424-4a40-acbb-5e952d6356eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f45e95-2921-467f-8265-983401b83fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478b9b5-e86a-40f5-aa8e-ff1aba49ae5d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b43949e-195d-410f-bd5c-22719a53d698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8795167d-769d-465c-946a-4d6ea3672786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a1975d-47cf-400e-9d2f-f993caa08230",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4cefc8-9337-4c2d-9804-112b32daa2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fcf219-4b97-47b3-bd25-c27a07fcff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a4ef7c-1796-41c0-a835-c1e94e33911a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e97791-3946-430d-beb4-8c5c8667df71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5f668f-2e36-416f-9a4c-53504ca3f96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a28a8-0f15-4355-a6ce-071f1c2fdf2b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35156797-2c62-47a6-9cc2-cf0001c9b6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4d1245-26d2-4c62-a628-e50beef3049c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d943c7-11e6-4f1c-b067-4c0c98d72104",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d55a6a-3952-457c-8c0a-88e6c25d93be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6765b6-75d9-49b8-ad0d-c587b0df99c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e244fbcf-da26-4a01-b6c6-c562a603deae",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35c8333-399a-47a6-9c73-d07f47655730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222b776a-89ea-4384-973d-a271d8579ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137d3503-cb38-402f-9d4e-ae6982c9a29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035bee87-0394-419c-bd6e-9e87b93415d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89dd297-4fc6-404d-8cb2-4b396608f42c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608dc64c-ca17-4262-96f3-aef27c904e31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29bfd331-d5db-4cbd-a3cc-4e2e3756ef3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8972328-d568-4959-9300-96b8443b501b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d2efa6-7914-485b-ab38-8a22682f2457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe243c0-f45b-4d7d-9afa-3e39cde03203",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148bf67d-bb4b-470d-a5f3-54ba608b3159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da993ea-909b-45d7-8172-8f8ebfd35376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5876b1ed-129b-49ce-a9ac-db201d977bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d82bbde-b9ef-4387-8700-5020f4e7389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213a468d-dc8e-4555-8f66-1a12c031e16c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449ed716-a69b-4732-b3ba-961928a50f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa916db1-ed23-468b-a773-d88996175dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3318d4-350e-4980-b5c4-f922ca63a318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec8e6a7-7a8c-4839-8fc1-367101168206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877bfe83-c528-4545-8896-f544df38a688",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54030fa2-3a3f-4a6d-a862-d852f3e3e923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a6fbd8-2768-4298-a1f8-acc815cbd463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fa6e63-5174-4bed-ba74-bf48d1a0a67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf30a4a9-1a56-43d3-9381-384c73d3d3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b78bd8-d579-4f22-8a8c-2fb3881a6244",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3679605a-7525-48ca-9c89-1d2429699788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fedce61-8dc0-4bc1-8269-68cbf3474602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd779f57-8244-424d-9d6f-4e7fe3af00ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f782ab4-5c8e-4a81-8d5a-d3ed49b6a512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e9e0f4-98eb-4a9a-9652-f8c88b776548",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdf5f36-f57d-4b0c-8989-167a6b1c6911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7df0ca6-2959-4162-a7f8-1bc284d7f706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744afcbb-aceb-45d6-90d2-75c4b66b3d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ded9d2b-af46-4e66-af3f-48dabecc714a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6238196a-06da-4c93-8d55-7b6aa44f1ff5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb963cbd-0b89-45c1-812a-d80c60f8ab79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959a440b-412a-4711-8b00-1fe01cc3d6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f770bec-f5b2-440d-8902-4a463237b44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6f7cd7-4e93-459d-a7f2-01c3253f92e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ac6950-f1bb-4012-ba05-486bb8d1a1d8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7385eb-8073-4781-b249-eb8d49f51e44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73100f9-3963-4c65-9a58-8d194142ea1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce2c89f-61ca-408a-a0a2-5906d4ee7c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199aaca2-a8d0-4180-af65-a6f934824a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c0ccfe-14c8-4d89-bf22-63a36cb9f79a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6aa718-11c1-4f18-9091-ab3d49316668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96316f37-ab43-4bbd-a3b0-8bfe1a71796d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1a42ed-043a-4d3b-98c9-ce8aca4e20ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed000713-7aa0-4dfd-a578-5f23a01377ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb517e72-10eb-4d15-8806-f1440ba7f65f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b3b905-2a7c-499f-8ec1-0f3df7a0e9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e2006e-37a1-4294-a529-c87ad20005dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd9595e-27b7-4d43-a067-407c205013f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71cc9651-8206-4875-abe5-a8942dd73d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f132c8-e367-4859-a2d6-93db955ba1d9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8db95a7-8515-4b98-a528-0d2ab4e943c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a468b8-bcf6-4545-a575-9a0bec674ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c3cfcb-90b5-4ba6-867a-faa46c9c7640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6877953f-a8b0-4c43-9ada-2195157958c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35004a65-aa3f-4b81-8384-b3d188641478",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2eda26-0e29-4569-83c0-9414c8a6ddf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88139340-4bce-443e-af69-8c87bd942327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f067804-49f6-4b6e-8020-a74e0efaf5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a87876-486c-44f9-ab97-8bd71427fadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a083115e-f75f-4f5e-95bc-1a046fe4b5c4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3143826-7560-4ea6-881c-917cde8b28c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1d1854-cd58-4779-b6ca-44d9cdb5a648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f13774-4e7e-467a-890b-e7208336115e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd04feff-de05-4508-b509-e9f775e0f3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b953d160-4c2b-452a-a120-04ab0f41d4af",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a6b50-b8e3-43e6-9a39-b31a0b8bebb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e764f9b5-03e4-42ba-99f1-35452a11f215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc0b249-e4a3-4b5b-be9e-21a2fc2666ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45477488-32e6-4daf-8671-d82af92a7e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801af9a1-2364-4086-aa99-efe666c16556",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a3c8e8-52a2-4dc6-aa1b-4dd9b5ae0f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d19e08-1e17-49e6-a7ac-b64caf17c69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c2adba-7ff4-415f-a4f8-b8c8743b3316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1fd18e-857f-4c74-9cf3-a2a618d3e3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2c6d64-ccb1-473a-ad15-03b682c5a3d7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36995559-39c9-4307-8999-2bb0612bd042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6318d4b-3708-4bd6-93a5-578ba7486048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0813b87f-150b-4def-ba86-a91e1f7b62c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e59a1a4-1aa3-4c6c-bc69-0d8685570012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad139725-dadd-49d9-9602-40afbd1950cf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446267a3-d842-4a0f-8e90-44a59db2e405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8585cc81-3061-4245-b424-ed4669253095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05956c7d-bf0d-4977-8643-3a67dda93dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7585199-fdee-49f0-8632-115e792e32fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ef17c8-3bf5-4b2e-9581-b0bb74682494",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40db7c7-88ab-41c1-b5a6-c0f0402d1e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d501e93-3941-48d8-b34d-235176fbd71c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac2a7f2-248d-404f-ba6f-7060b1f46b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72064b2-da95-48e0-b694-798f69623970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2385d534-3014-4432-9816-b8e0f2685981",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cb4e2f-cb88-499a-95c9-279d681b7030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb55dc0-6836-45bb-aeab-c1681f7e8800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8363cd4f-436a-487f-9ed1-8150429648e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b33a31-1491-430b-b11e-9affafa3fbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7debf5e-5a04-4452-8344-50d4cd0f5b91",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162089dd-02f9-4370-a047-4cf1b18c71f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35dc2f8b-ec90-48c1-932b-774673028049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a10939a-f95b-4b30-a3f2-8fa6a0f86171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681f9582-5dcf-4086-8599-a5d11e92784a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17f8d10-d584-4703-9c73-bfb1c9f2e46e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b5a42e-15f2-4f6b-ae4e-6957a99bf5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16931ef3-d0b9-4e83-8e12-f01c36bcb6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f35f84f-2519-47dd-8390-544e39c9ab1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4355ec3-4ae1-4fd5-b7a2-c7bf1b7f8003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ee3e19-9dba-46f9-ac4c-21f54ecc2531",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ef52a0-d698-4169-89ab-f46a1d462882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb19a49-bc93-4212-b8d9-dd24d4f6a7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a2a7a7-1d8a-40db-9a7c-7670b8956535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ef384d-0f03-4966-b054-4042b3c64059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc681fa3-d27f-433a-bab8-98dbf8f95439",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c34b307-54b2-4ee0-b391-c85f554a41ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87787441-f594-4992-aa4e-53d83c57eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b41e7d-ba92-4e74-a9a2-5ec99b54af6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470b652b-6774-4b31-8fa9-9c3548706780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113c343-b707-45b2-a6bd-4f7e6c983cd9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae98629-fdea-4cc5-9c18-a9acc1d80353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b600a57-bc3e-4c26-a5ed-129578eaea71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf8b76b-39bd-416e-8751-a88c87a77cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a0d12d-5080-4b83-80d0-77f85244e112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc799cdb-59ec-407f-b4be-5bfc7431737f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e8c9bc-ab37-4234-a318-92db02462641",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77f3c968-1629-42bb-8772-20ba4f9b14c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbe26f2-a791-40f2-a03c-c0b14f6d2ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dde5a5b-7dbb-41fb-9289-afbcead4ad06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bef272e-b0d2-4666-a83f-bd18c3e81e1e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f264e672-02dd-49bc-9675-f0a1f73eb811",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c313b140-fb9a-45b9-861f-85663247f318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876f1812-681d-4fb4-bf10-72d6afe5ffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ddde5e-a9ca-4966-a6c6-00a62a25d463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f452bf9a-826a-4440-9d83-04513feb1cd4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e4685d-ab61-438e-a3ca-a9830f87beea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948e155b-c652-456e-9618-b30599cbe4b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b0da18-3011-4603-a043-16c565c1db5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2263c8-36c6-4f88-a43f-6143e6d9b2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eac130-c47b-4943-adba-6dc7e4b2d7aa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aa4aef-3148-4731-b25f-bd415438979f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd77f07-44ae-42ce-a805-ec526705d47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f2222f-a265-4003-a80a-4e6a347e3c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850081e0-77f5-4b14-9e58-6f368aa39de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ac1de5-f831-4ea0-96a3-cf336a20adee",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9a0e37-20fe-4b7f-a6a2-8dcff2eb53a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193ed362-1d4d-42f9-9e86-7166ff8443e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6ddda1-482d-477f-ad18-5235bd006423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c3d0c8-2501-4365-ba5c-da312a6e4b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f5e804-ba40-4f9d-9a0e-9654b05dcb78",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05d6deb-cfef-461a-b5c0-8dc234d0febf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8632837-15a0-4081-aa0c-393dc4c212be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99312f7a-9906-452c-a457-b2407476de4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c59f0d-b163-43c6-bade-0d8ec6df0ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670fa032-e31a-40f0-96d3-ac04652d2124",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bde084-77c7-4687-988b-c9b683c5a070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71b796d-b72f-4244-bd03-a1890717123c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db2ecd9-186a-4c43-9c44-c772ca0fbc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5744dda-04dd-4813-bab6-7c2a44e4eab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d703d-359c-4807-aa92-03c19c8a5691",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99570633-23f4-4baf-a507-506300cc7650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad239b77-c6d8-4e03-9518-e72059eefae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0428c0e0-7c65-4665-b6dc-f92a64ee131d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dbb30e-21f1-4360-8f96-3d5d2c82ff7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3831f6-c56b-4348-a08e-978acc7f3ad1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d76c6cc-a2e8-4053-931b-576f7c3a4dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3859da-3bf5-4cfd-813c-5daf3c44c727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc50863-292a-4970-9659-8bb4712fcefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37961f48-aa37-42ca-9da1-d6cef03ca138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4535167-d861-43f0-898b-0e4a71258a8e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e11da-d263-4dfe-8949-9dfdacc9c6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34914f06-d922-40e3-852b-d237a1d33254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a61244-8c80-42d7-a44e-3343503c7f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300d914f-cfbf-4247-b413-4b96dd9cecc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ff44b5-4bbc-40a3-901b-7ba2def66644",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e620aa-73b8-4d2f-96a1-a71e2f5aeaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c881663b-419f-412a-925c-6bbd9b50a4a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5985a3-3d0d-44ef-b839-11c4eec4b8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84956f1-6897-40c2-8015-56f4acbdfde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5947db-505e-4123-ab56-a2dd77a8b6ee",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b7da86-fdf0-435e-bc2f-a643e405bb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578bb264-3f66-4dc0-b85e-4b66767b4c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac173ade-dd11-4073-a48a-ee6b6e485872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5659c4-37f0-484e-9c9c-36b633e7fac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fcbb5d-e9b1-44fe-a499-d697224b1eb5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35e92b7-a51e-4208-9c8f-b0910bfee250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde8f604-cb9e-4a57-91a4-719b7ee4b5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de494b2e-b9c0-4ab5-83e8-489c00df04ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb97d694-8cd5-4a5e-9b89-432dae0bd350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc9e402-a981-4802-941a-edf9b29388f8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e5e0ba-ae91-44f8-aa64-1427be24c852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df9f141-abbb-4b52-b806-f3697c45ae49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e308636-08af-4606-9364-371539ed8608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933e686d-72e6-4b92-99fe-b68a46e41e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca05d0f-709c-4616-a664-ee81c7905372",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866dd94f-6c86-44f5-ac8a-7337b27a3257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fbc8db-c20c-4c1f-b3fb-ec73ee43f219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a741a8-3a95-4de2-be35-4a2cbc14a737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7422624-3b5b-4b94-be66-495cac67b8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6302fc5f-6c82-4063-a52a-2af9ec0cdafe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f0e3a2-bdcd-4c3e-98f7-f175a6def291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce3178d-b4fd-4b4c-8fae-1a17af398912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71003939-d1c0-4d2d-9aba-3501d42f9496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a1beeb-77c8-49df-86d3-6f58ac19fe35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402fd3ac-7956-4e84-b883-1351ddcd8ee5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cb39fb-054a-4ece-b3e1-5539bcfc01d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32c36e7-0305-4f8c-809a-ed00b60b42c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481a9a2f-5751-4090-af1d-4a4a299e1555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d1ca75-9aa4-45ee-90c2-2c20a61db6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1922c502-5408-408d-8f54-28703c47402f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c960f5f-64d2-453a-a63f-cba34be574f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3d9396-f347-4f07-b757-d1617d2e1d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea83cfc-8fb6-4384-8061-ff35f5c9c1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6e62f0-5d44-4e01-834c-b9c2718f312b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea2d45b-f684-4961-acd9-c21902c31fa5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce3d798-6b63-4f4a-824c-e37b7ec357db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c39f36-447a-477f-848d-b46dc5353300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e308611b-0dda-4a38-abf8-1347b06a8cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd53e78-ea8c-46fc-81dd-9c3d453663a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c9a2cd-1ea7-4130-82e7-59dc55ddd0ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7991a8f-3e32-403b-bc1f-5413e1df98a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bbd247-f295-43cc-a14b-81de2c7dfba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b61cd59-b6ad-4ced-a3d5-d984feaff6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299a8b2f-8603-4940-afc0-3fdec468ad33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd3a801-45ef-4992-8fb0-023141f22a17",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d8b1b3-e476-4177-8d8c-d329d7ef8a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504c7e25-9570-4606-b1ad-bba661fb03e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84970963-1c68-4c9a-9b88-27896776ee8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c8a8b3-c128-4474-bae1-79f989cfdf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94508229-773b-450a-85f1-edb5ff729a3b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d19cc38-adcd-426e-a845-44e9befee6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b5c6e0-eedb-4b01-a672-904f250bee49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e3df50-1b6a-4019-b13f-8d3772fec29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b4a434-0f27-4ffe-85d2-d06d178b9933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93236b6d-38ab-4f8e-b662-97727706194c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3665e8e7-6168-4555-9b8e-7a5c9f984afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9578bfb3-c778-4661-ac0b-b4fe5cf62d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64275e63-86f5-4f27-a0c2-2ddd5bb0c921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcde781f-733a-4154-a82a-c6775e76a708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945cdb57-9b35-4dff-b86d-fdf83ee4de1c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e9560d-2900-4f19-9fcf-781b64ca4206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31fbfb5-6cbf-4b3c-a64a-bc206d588fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318389c0-64f7-4c9e-b0a2-a0f153ccdb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad632b50-4195-4055-acf8-8d77ba5bf0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e977651e-148a-460e-8e09-047ce86c7b13",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337cbba5-872f-4ade-986c-78401c552ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1da65d3-2d97-4e12-a924-6e41c6184917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0565b14-da13-4091-bb49-910175a24e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d919e20-5729-4720-9c4f-12f3be17e0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dd842c-eb2c-4a9e-b774-c8045c262d27",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54360bcd-ad9f-45b7-bdf0-22a7fb26a4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7615080-198d-4caa-9a7c-25d9da2d184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3718d3-e1e9-44bc-bc04-60a3ac56ed22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4680688f-5997-4421-aff8-799e36bea098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a42c62-ea05-4615-a14f-5e06acc4960a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7ec8e7-4c1f-47ce-894c-feb6729eebd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8446ae-21b6-43c0-b80c-cfe7110de081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb5dc94-4502-4657-8330-cfa94a78862f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfeefbd5-4340-457e-a0ae-010936fc9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa6ef5c-a45e-42b8-951a-9e3e3a71f3e5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614775ef-6d19-4b0e-8cb4-b834dcde0723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf87dc-dffd-4a2e-943d-1cc4bbc7ef1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc190ee-35c2-4f8d-93b8-240e188e20cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de08ebe1-6389-4e00-b944-540590a8bcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538238c-7c84-4d39-9fc3-855674b2d28c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6558922c-c6c7-4cd0-ab70-f7fa4160f741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1fa9f51-2674-4ddc-90c0-2df9e6d50640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ddc483-39ea-40af-91b2-6ce14550c701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9c3f6c-76ee-4551-8f7b-0b3dbf59845a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069f7d0d-b81b-4fc5-a03c-ed7ceb6a5d04",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd417655-2607-4acd-92a7-a5495cef1a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9db211-bd2f-4ed0-bef7-ca40d6a02ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb99afc2-ae2f-40b8-b7f1-38101f885128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5d7e6c-9b97-46b7-bc12-677aac90f1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac5cc7b-7665-483e-9dcb-ef8a69f115da",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc7deb8-3235-4cb7-8358-cfa0d2e00144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a750a64-39b5-4666-9003-238a816fa8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7666c024-cc3c-4c52-88ec-cc7d1dbda1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e54d48-e8bd-4fd5-809b-be4a03e628bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86eeda8-1c81-49ac-8225-1a5bea9d6861",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc2567-004e-4013-b169-985cc3882a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8e2807-a10a-496c-a456-0359644aea8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb21bed-1769-435b-a56c-0b41a9bda7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c90f36-dc88-44cd-8450-5a0046988116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeac7ce4-c2b2-47e1-8aa4-d651359e8696",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508bb0de-f283-4d1a-a272-caf0c04ccb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2751004f-cb7c-4b95-96bb-43a14d79a1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44382b44-bb5c-4824-8488-d5511306d88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcfb015-e222-42fb-954c-a0ba21472598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a856a2-e1fc-4a5b-a67b-e7b3050d0b09",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0b143-79c8-48cb-a7c2-bc8ed73af4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "241ae620-571b-47c4-ae40-bf81ad0b0b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f786ab70-e6e7-4e83-8a80-a5886ece2f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b697f94a-de46-4a5f-8470-ede93eeb0f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2ac163-aabd-4af2-8187-9e67fa1293ce",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a8431-6ed3-4e6b-bc27-c78c76e3baa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1346bfc-30b3-43f0-80d9-871e4688dc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9b98eb-d2b6-4cf8-9acc-079ec33667f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7918c6-b6fd-4a39-87b6-0c26529447b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8795ae37-4e53-43d3-9abe-9d2900350dfc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c251218f-e678-40e1-830d-3e413b6bb5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bf0b9d-6d86-482f-81c3-09ed32fe2bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e32867f-b349-4208-9a87-1cb88ea5baaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da8aa47-a24c-47c4-b1be-949ae125a14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcf4b4a-4bbe-48b1-9066-287db6ecc64c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d60309-ac9e-40f1-b4ea-898e3e3338eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8049114-011e-4374-b225-4d1d1f224640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca9c20e-d6e7-405d-8ec3-2601c5c808a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29cea5b-c47d-4a52-8d1b-8783f8d56f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033bb6a-a9ff-491d-abbc-44139e078fbd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f903a796-190b-43c3-9f07-fc4c01141cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ee6a26-6b48-4ea6-a274-4dd9e4ccfeaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcba2ec4-6cdc-4700-9e75-9a0857e9b8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b77c293-b3b0-473c-a969-ea6b33dc271e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bda2b46-ce83-402f-94de-f9201d79a531",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568fc1c6-6360-4174-bb59-716767c17a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d86397e6-6452-41ff-a427-955611c9caa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7d5212-1930-4fb5-9b7e-7c303f4a9e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa87d18c-8369-4a26-989c-dc0072872534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168d6c7-8562-4d6d-b35e-e2c729d42237",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb7cc8-af24-4c7e-84d5-01fc17dc5212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed14c5e-4cb0-4534-9897-5283aa300459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabde90f-d414-4817-8696-7be2c9a95e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b837ecf-5453-4a7f-8e28-6212935fa7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ad6aa6-25bf-4dcd-9a3f-b25c0ee304b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3acd3b-a722-484d-859e-1eaa0a72f015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6bde0d7-722a-4e12-afaf-1e71b6514d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa34c10d-0c36-4c2c-886d-976c6059dc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03750ac4-80a8-4dd5-b0ee-6943699d9b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db99e0b5-4ad0-4445-94cd-8339b624943c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309deb1-bc58-4c5e-b7fa-7e1dceb67e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92b3747-f56b-4db0-aa09-820894d259c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfc9d8e-22ab-4568-9202-e1c5b505cb0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f85963-840d-4efc-8837-3517df453edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5004fa0f-fc65-4aa2-a73c-134bb088a5df",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3c2d28-5ba6-4e66-a893-528dd03c85b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49a4c561-8e2f-45f1-a128-9f1ad655998d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdac0bd-5472-43d6-ac60-4b51304d7ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867bb170-b593-411f-948c-a1995738b251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db8c16a-8aa6-432d-81ab-55e721f4bc87",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82749358-4599-4120-ab9c-9fa26c134214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6777a417-08ff-408f-b75c-71138e0a6f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e612a12-e17f-4c4e-8182-c82d74744e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4c9bad-c284-475e-8d58-58fcc77efcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9bf6fd-ea31-47dc-8372-2adcd0e078c8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df3e7f2-7644-48d3-aa98-799dfc4536af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa9ef77-9bf8-42ed-b0e4-fd8ea7d35247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53642d30-4967-4ca3-9c9b-eda1f07e20d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f28a6c5-5d27-4285-a447-3c4afd1885b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74652d3-081e-41cb-9e0d-82cdea41ffbe",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b22cda9-b474-4a21-a630-0f37392fc2d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045a263c-8e38-48d2-9419-65da06fa67d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca138b7b-6426-427c-8e4f-07b87608928a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bedaad6-25eb-4847-9132-60d8babab6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92ef6fb-861f-4215-82f0-c3c3c0d495cf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf354c32-fb00-4a9c-b0b9-63cecf01118f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2be816-ab50-4e62-b603-dcce0d2be0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "499f8bad-bf67-4091-b461-a7b37d92a21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a93cd7-8461-4925-af15-48946c12557a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32c15d5-0997-437e-bef4-4e84faa231d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd8415b-f00e-4efa-bf11-fff851792c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd177c1-3108-499c-9156-d042155b512c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff752321-77a6-4b32-b2a7-68358d57159f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c8a58f-cec2-4dec-8b04-53da20f77f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ceb36-3d67-474b-be63-748c57442d40",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0088c71a-438e-46ac-a53a-2ce28d96e0b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2085c7b-4f14-4561-8075-a26498149528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d36d3c-b27b-4a67-ae99-03e5535a93a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f7dfe8-5f9f-4985-8c4d-1b63ab32f877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6eff6f-cb74-46fc-97e7-b3a797e93483",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d2a807-8438-4bfe-8975-685d361eeb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1211f8f1-bf35-48f8-9ed4-acf68764b377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8751169d-c76a-413c-9084-1d227822fdd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c743293-45c5-4299-a84e-3889d48e0ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549018e2-cade-441f-ac3b-ac38c4f2e573",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a7befa-752a-4d58-8716-ce94f2b9f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dce98f4-78a8-40cd-9db7-b84c13e84424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32727d43-64e5-4def-be45-6ddc1854a15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858bac36-e593-43b1-8360-21607bfc65dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b5f3b5-af5a-4202-bd35-d1a0c3b56a93",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311315e3-afa8-40d5-a1fc-a5d361d9a5f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436256f4-27ca-4af0-b345-103201b885b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570649af-c05d-4857-9dff-1c0afd57d932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aec5f6b-ec5d-4f92-9ddb-33d9c500d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82d254d-0e29-4a4e-b9c4-2f533c979406",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a1283e-99ce-4965-ae59-f967a6225d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad29c8cf-694e-465d-a147-8191522a4b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b40d0b-5faa-4aae-87ef-cf102452084c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7bd375-47ba-4df3-842b-bb3e93b73dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056ee553-3003-4fb0-8982-9b51c1e35124",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e3b766-3af2-4f4c-a6f4-5fe37c78a34c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67132dc-8850-48c6-b079-0f577b67c349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "043973cf-c229-44da-8441-f17a4bdd7ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75115099-e425-456d-b167-79636c045ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1557ca-31b0-424c-bb68-0f85293355bd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf787e08-b3ad-4f18-b1ef-3e82d1c3a686",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988a7b2f-482c-45fd-ae8d-82b04130cd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d10753-ec66-4aa2-b8a4-c0cbbdc220bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61937881-c3c9-45e7-b69e-7c0e68a8f678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1425f4ca-33b4-4563-8b55-d74cbff36bab",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96536a3-c65a-4ad8-a592-3eaf355eb149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c7f30fe-a99e-4bb1-a75b-d54657f40f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9212fa60-f3d5-4359-9769-4f209b3e6848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49159f7b-8c86-4a02-b624-923818a24d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d00ca5b-542f-41a9-9931-a645130dee66",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a073b4a1-f7c9-494d-bd26-2acfc4bb0d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38a85af9-1a70-413d-9909-11bacbce7c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ca7fa7-5ed7-4e19-b7f6-f8a34f7c81a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84253ed8-1e31-4451-a665-a116c9a46106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0e3747-f33e-41e4-a2a8-2ff886c3252b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ec4136-1ccc-439b-9e02-7ef4044ca813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4daa477-d0c6-4956-8050-0253008327bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281eb47a-e7f7-4b10-81c5-c5833b527850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a4cc1e-f9d4-4f27-943c-9cb7e3c16abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e5dc7a-3dc4-4b84-baf6-e03ccc97407c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0601dd-6de8-459b-8c65-82cdef859c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78a968e-01d7-450a-aaef-9f0deca96879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232ce2c3-9ad9-4d86-b460-d20e76e8c340",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d0150c-690f-4e5d-a76d-218300aac143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a626212-da92-48be-852c-bf1f718316fa",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3bcb64-d045-43c7-9b1e-8ad5842062e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b874923-cf76-437a-a8c5-ce384d4a5fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b8d4e5-d996-4c12-a1a7-3cf8e07859c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24960dd2-5702-4c59-86f9-7fb1e4680413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0385d1-82b6-49d0-aaa2-a7c407c46988",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ac117-1d23-4b33-884e-2590bc1503d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "852f7b7f-a18d-45e8-91f2-80d3348a5e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c8e53-4f16-447b-b7f5-e2a355169a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5302446a-8ec9-4853-a819-c20dd06f827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45919a-d655-4d93-9c6f-f9692cd6e4f7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039b56f7-4a7a-4bd4-9077-b34c595c089c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4abe3f01-a0d0-4796-b6ae-1f4fb71c7b7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6290866c-cb1e-44a3-8497-14a6677eeb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520ae991-8a76-452f-ab41-ea20dc4fcd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef1168a-5ced-4a24-a692-e38eafdb19ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c88ae-6104-4243-be13-84e739a56182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aedc965-e7c7-4cab-91fc-db10ce64b904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78adb7d0-f399-4043-8e27-6d60cdddd574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e34ec1-241b-44bb-85ae-c846906561ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bebbaf-dce7-4c1a-ad17-ab6fa5421f14",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6eeeaf-a8ac-4c12-a35c-918a123faecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0684cc82-27cc-45a6-9fe9-f9913f2d6ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9335b00-7448-4acb-a0c6-135ea5799944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f377c56-b931-4115-9152-bce3e27aadc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0022a6-42d2-4610-8d96-b6ab2fbb366a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f16b66-005c-44b4-a88b-c94f488bc97c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62ff450-8034-4eee-a5fc-7a74f38cd63c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9a7620-f347-4e16-98ad-df7d675b7a0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c380de51-c3e3-459d-968e-0b6855a53776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd092ff-e0fa-421c-8210-ba1e044786a0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419ddbf5-e56e-4451-9e82-2c3b353239c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f2d2d4-226a-4adc-810b-927d0b945092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186c72d2-9ace-40b6-949d-4931b7dc90be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482feddb-db4b-45e8-b9b8-c4c71487131d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "543e8529-e124-470b-b4c0-37bad8a87b0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "258e9661-afc2-4156-a580-ad1939d47a88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fd69d2c-f334-4bb9-8908-f8bf1a5e8033",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d627fed-5985-45dc-9874-aba74ddd6b17"
                    }
                  }
                ]
              },
              {
                "id": "d2923017-ea2f-4d89-962a-e41871718cf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b35d4e1f-61c9-4442-81df-3098c9ac6915",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bc7cc0-7c69-4dfb-af22-efd236529f31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44519e48-23d6-4c27-91a6-0cd353305bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1637467-f4dc-4da7-8294-c86298431008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc82c3c3-6fc0-48e4-a255-b8a72ea2ef1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "165a16fe-3c8c-44ac-92e2-3de614c41335",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c7d268d-405d-46b4-b6d0-3b51ed4646fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41438239-b6ee-4e21-9597-96431b7a08d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20d51c3b-c54b-48c6-8845-2d622a244427"
                    }
                  }
                ]
              },
              {
                "id": "8816e4ef-8b6f-47f8-9fc7-4558802d3980",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "606140c2-938f-45bb-9b6f-bba9f2b19045",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de213170-7639-4d35-8daf-5c42109524b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d621d9c9-ea91-473a-b6bf-517c06bf4f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6069177a-1248-4bc7-bf1b-ddb26ecef484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d185a4e-afd3-49e0-b23b-20363bd5bf90"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3e57108d-2a35-4a63-9797-c1404097784d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49f89ddb-587e-4383-9652-7a0d38a6fc9e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f67c104-d1f0-410e-ae6a-9782a8bd5c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a4433e50-7dbf-4eca-b3af-57b20a8e0fab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c6ef67-8b99-4a96-b224-d8711b4e979b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79b3cfb2-329e-4ece-a084-546d022fbada"
                    }
                  }
                ]
              },
              {
                "id": "4809fa21-44a7-41f8-981a-ad790084f872",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceddafcf-f0e2-458a-ac3b-4af6d783a27d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1c20ea5-ad24-4ef9-819a-7b4c77462b40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b03ce64-b5e0-40fe-8a2c-426fe1ce25ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "230dbbb1-44f3-4b1e-87b6-0d2554d60523"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "596416b3-3b0a-4612-89de-deb3c503d5c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4ef7eb28-e0cb-4488-b38e-8039d83eb1c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04161ceb-66dd-4dae-b5c9-8f6dbff94267",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a083cb51-e61c-486c-9fdf-27425639792c"
            }
          }
        ]
      },
      {
        "id": "996888e7-6a3e-42e4-bce9-0471890f7cfd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4d29fce5-bd5a-4c0b-93f4-130180ba405d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16e795ad-a721-45dc-b096-c75dc4bcced8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fa6d837-1465-4d82-ad49-1c313eb9f8d8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d595ed48-d6b5-4e13-bad9-b25b5fd3cc41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1a12c4b3-2190-4f15-8ec5-8a47e1a7c04e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb58bc34-da59-4a45-8d51-ac1d76ef7324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8af470c-a43e-4d64-8b88-80b4fef0f6ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e37ddc74-a586-45e7-bf40-85d556051971",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e63787d-822c-4917-889b-51e101ebb995"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816ab36f-3c05-49a5-a6bf-86d11b0c11f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4471933b-9d6e-4717-b3a6-24b6cab81430"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e29d5ab-5cfa-43d0-a63f-ab126997c2d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "708493e5-cc23-4772-a4e9-72f38d89a947"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "377e51fd-eb28-45e9-b7c6-d34780f70976",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "616086e8-8430-4dba-8f3f-c227625030e4"
            }
          }
        ]
      },
      {
        "id": "f1be3274-4b6a-4906-a6b2-0dfae3e4170e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c7a00786-5bab-4ef0-a721-4c4fbed2a331",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff547a83-c811-4b96-946c-5194a47e7fb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f74f1e10-b06f-4551-abc7-9d4364b0d536",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16ecf0b-ca9f-4b80-b1f4-ff226deda722",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71a98a88-d8db-45ad-abf9-81a139e26b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821b825e-56d1-4148-9a07-35312f436cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ddc8551-15bc-4a08-963b-7ebaca2dc4cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5864b8f4-20fa-4056-8571-8714183b5fff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d846cc98-52af-4e99-befd-5baf4d959d2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0063e10-b241-4960-8dc5-889636d430de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa2117ea-4c41-4511-adfb-164f29ad3829"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b9a81cd-ed15-4037-a5a3-e438b05bbd8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34ae8a9c-4bd5-4ead-8786-2a2ea9ff526f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47ea4769-3b5d-4033-9c7d-6b681b9b1b61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da6945e5-c6e5-47d9-9332-1976bfa3441b"
            }
          }
        ]
      },
      {
        "id": "e66766cd-a548-4621-bb27-e632f0b1a020",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "68488876-7b03-4039-8e35-90cd39bff414",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e87479c9-b45d-4be5-a659-0cb78d146543",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a316fb22-d663-477b-9032-acc734e3221a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df93b09-f4a1-4b47-b55b-34c8aab6d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68a810a4-fc77-4d26-bf44-309511e522f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be0b3ce-ca85-4374-adf4-e33f3d9ce8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8442755-e128-4704-a160-9bb021a859cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dd97ad9-46c6-416f-b1af-ad4e9a8a9f81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "722bb106-0f9f-47b7-8cd2-928fca167be3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83b1b80e-1ced-4802-8f43-99420ae84a6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5392b711-c95c-4703-86cd-534732ccdc1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1279be24-b287-4e16-9a80-cab3b574d69a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a761293-686d-4b79-b6c1-440973b6aa5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b55d97d-3745-4684-896c-37fe30c57a15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a1a7a44-200d-49fc-9e87-3da0247052a1"
            }
          }
        ]
      },
      {
        "id": "badef9f9-ae84-4b66-8846-2480e115b6f2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f04c083e-df5f-480b-aeb1-c49576a93daa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40518b21-5829-43bc-b803-f9343a18c63f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9b705aaf-92dd-45c5-9915-e546baa8d917",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00877de7-b274-4dd1-b10f-a05a93d9cf93",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3b24646-4832-4d3e-a2fb-91edb5fc6f72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 316.5281690140845,
      "responseMin": 12,
      "responseMax": 6856,
      "responseSd": 852.3548382764463,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696293227426,
      "completed": 1696293329679
    },
    "executions": [
      {
        "id": "552164ba-87a0-4472-a7ec-3b7e6da50330",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4d28dae3-8827-4fec-9adf-45d84cd314c7",
          "httpRequestId": "6c1816b9-71a4-49d5-8ba4-7f6757bdc6f6"
        },
        "item": {
          "id": "552164ba-87a0-4472-a7ec-3b7e6da50330",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "84e142e6-6a94-4dab-9f70-d5873623973a",
          "status": "OK",
          "code": 200,
          "responseTime": 129,
          "responseSize": 0
        }
      },
      {
        "id": "a93c97bb-fb11-4a69-adab-95835ab52dd2",
        "cursor": {
          "ref": "3a5421b2-65d9-4299-8386-01250c6f9ecc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c37e148a-2c2a-4a94-b9e6-b5e637d10b0c"
        },
        "item": {
          "id": "a93c97bb-fb11-4a69-adab-95835ab52dd2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6437f216-7571-4f0e-8a9f-a351e24f398a",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "3f310706-1140-4177-883c-9fb51f6b5ada",
        "cursor": {
          "ref": "87e3eb51-8029-4561-bbb8-7b886e734e73",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "94f5a4d5-bfb2-4ee1-90e9-b2fbe0dd6b2b"
        },
        "item": {
          "id": "3f310706-1140-4177-883c-9fb51f6b5ada",
          "name": "did_json"
        },
        "response": {
          "id": "fa0c2f86-be8c-4bde-b0cb-6766ccd5ce0a",
          "status": "OK",
          "code": 200,
          "responseTime": 1099,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b0ced6-6096-4a82-b88a-6bee45e17417",
        "cursor": {
          "ref": "9f4e51a0-055d-434c-b143-c1b6e703a158",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5aaa391-326c-455f-8e7f-7fcc63daaa8f"
        },
        "item": {
          "id": "98b0ced6-6096-4a82-b88a-6bee45e17417",
          "name": "did:invalid"
        },
        "response": {
          "id": "e21e97db-3b27-4aaf-a4ec-e336a3dc86ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b0ced6-6096-4a82-b88a-6bee45e17417",
        "cursor": {
          "ref": "9f4e51a0-055d-434c-b143-c1b6e703a158",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5aaa391-326c-455f-8e7f-7fcc63daaa8f"
        },
        "item": {
          "id": "98b0ced6-6096-4a82-b88a-6bee45e17417",
          "name": "did:invalid"
        },
        "response": {
          "id": "e21e97db-3b27-4aaf-a4ec-e336a3dc86ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fada64af-d149-49d4-a42d-5beda90adb7d",
        "cursor": {
          "ref": "77c2733c-0188-4d16-9ce2-07873703973f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "42336fb2-d3a9-453e-847e-16a35f1585ad"
        },
        "item": {
          "id": "fada64af-d149-49d4-a42d-5beda90adb7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2a3ca662-d136-4ec7-ba87-c905d95f5870",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e832459e-753b-47b6-9fa4-13d94629dd8d",
        "cursor": {
          "ref": "64d5bf7b-7238-418c-95d5-32459674718a",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cae776a2-fc6e-4008-8255-04d7f01075c0"
        },
        "item": {
          "id": "e832459e-753b-47b6-9fa4-13d94629dd8d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3f60c94c-5918-4e2d-8952-94a99ef1d451",
          "status": "Not Found",
          "code": 404,
          "responseTime": 256,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92753315-ca6e-4a90-8286-7369437a25fc",
        "cursor": {
          "ref": "9d5a1077-0fd5-4f42-8841-28a948ce066e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a81eaa3d-8eba-4e7b-93f3-37ece7864004"
        },
        "item": {
          "id": "92753315-ca6e-4a90-8286-7369437a25fc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e2364ce5-34a4-442c-9bef-498d452126c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64fbcd5-dc9b-4b14-95e9-087c63fdec2f",
        "cursor": {
          "ref": "ffc839ff-3dd8-49c6-a77b-ce1eab66a68b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "07a09695-dd07-4219-8e5b-d3e10fbf37e3"
        },
        "item": {
          "id": "d64fbcd5-dc9b-4b14-95e9-087c63fdec2f",
          "name": "identifiers"
        },
        "response": {
          "id": "f5f6ce7e-1a17-4bf3-a49e-953c1e412808",
          "status": "OK",
          "code": 200,
          "responseTime": 1188,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d14eaf-fc3d-41b6-aa69-2e864410c847",
        "cursor": {
          "ref": "4ce776ef-274e-4976-a640-8cf12c3f5639",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca0ea8e9-4bbf-477a-ba21-f1a9f37709e4"
        },
        "item": {
          "id": "b9d14eaf-fc3d-41b6-aa69-2e864410c847",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac6a1e6a-8644-4399-ba34-18222dc4d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568ede29-b4be-4575-ba08-6285b5367b1b",
        "cursor": {
          "ref": "68b082ab-a17c-4f9b-bcab-86174ab7e27d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f207ee61-d9d3-475a-ab96-2aa68f54ecbe"
        },
        "item": {
          "id": "568ede29-b4be-4575-ba08-6285b5367b1b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "13d58f69-ab8d-4d7c-bba9-77ef195380b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632ada12-79fa-4261-b917-2bcea5e9a4b8",
        "cursor": {
          "ref": "c8572f54-ff9e-40b2-83e5-78a589ac0d1d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f9e0ff54-fbf3-406b-838a-d4b344825561"
        },
        "item": {
          "id": "632ada12-79fa-4261-b917-2bcea5e9a4b8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "28f30768-507c-4e00-8d3d-ba55e16dbedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652a1697-3e45-445f-a22f-a7ceb2dad54e",
        "cursor": {
          "ref": "fdcaae83-b6da-448d-8596-ac56302f813a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3cb7d8b2-109e-4ff7-b559-fee863358772"
        },
        "item": {
          "id": "652a1697-3e45-445f-a22f-a7ceb2dad54e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c1a73399-3cc9-4870-97ca-be8748afb39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59f8fe-0190-4683-a2e0-735174a31fb3",
        "cursor": {
          "ref": "e7c1c637-bd77-4674-b7dc-6e06283a38b8",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "694c41c4-bbfa-42d1-9c56-d217d1ac0962"
        },
        "item": {
          "id": "8a59f8fe-0190-4683-a2e0-735174a31fb3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c723f3a7-66e0-49cc-a5b9-c85123ba7386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30c1551-322e-47d3-91d6-33f5e3a6f79c",
        "cursor": {
          "ref": "9e38fb85-cc23-4581-96d3-f0370ae5d6da",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dbdc000f-4b25-480b-9a65-9d80e836a7fb"
        },
        "item": {
          "id": "b30c1551-322e-47d3-91d6-33f5e3a6f79c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "79e1bbdb-9543-4328-8f98-d6955c74cfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b468a63e-bdc5-41d2-8dc6-579651c4d45f",
        "cursor": {
          "ref": "cf73c2de-2a4c-4fcf-9725-fa3cebdce13c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2ed6a81b-47da-4890-b8fe-60250b0cc8b1"
        },
        "item": {
          "id": "b468a63e-bdc5-41d2-8dc6-579651c4d45f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ca0fcc2c-7f2b-46e9-8f7d-5f97daa1b78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f60602-20ad-44b0-818c-9c8fdf29ce48",
        "cursor": {
          "ref": "d8fd789e-befe-4b15-9be0-f60773d3acdc",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "80473920-1ece-4a35-bf34-92398d965ae3"
        },
        "item": {
          "id": "60f60602-20ad-44b0-818c-9c8fdf29ce48",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "38f3d269-e4dc-41b7-896c-1292c4523f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9bff9c-e231-45bc-9e6d-89d8de86ae03",
        "cursor": {
          "ref": "4b1a7ba1-4523-4985-94d4-748f50af3027",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0bbcc806-c87a-4e7c-b599-a93ed6ba0562"
        },
        "item": {
          "id": "ea9bff9c-e231-45bc-9e6d-89d8de86ae03",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e8916ae6-8a27-41a5-9995-696b9c537a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2615cbcc-6b09-46e4-8f23-a8d6158f8e60",
        "cursor": {
          "ref": "30951c2e-ec44-44db-a25f-874c62b91429",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e7db248-03cd-4e64-95e6-aef8a8a4cd4a"
        },
        "item": {
          "id": "2615cbcc-6b09-46e4-8f23-a8d6158f8e60",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f67da510-be7b-49af-a5e2-709d6ea5fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74684b0c-6cf4-42d1-aa82-dc85bff10f27",
        "cursor": {
          "ref": "9c956704-4373-4558-a094-96cc452b36d1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8d47588d-c9f7-4e40-a796-4d34e946c5c9"
        },
        "item": {
          "id": "74684b0c-6cf4-42d1-aa82-dc85bff10f27",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "365194ab-7c70-4837-afeb-2ad2182703e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284fb9bf-edeb-408c-a6e1-a7482131f53d",
        "cursor": {
          "ref": "11cc5290-ae71-4b1d-ae68-01223586c92d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eb18da9d-a497-495e-813a-5781a24795f7"
        },
        "item": {
          "id": "284fb9bf-edeb-408c-a6e1-a7482131f53d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2e87fdf1-10f1-4823-b4d1-d4af9ef482fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b411851-47ce-4654-b192-0d85eb7a0c5f",
        "cursor": {
          "ref": "027a7c95-a680-4ad6-8bfe-10849e0529f3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c4d24060-0081-41ac-b61d-5e228ac86c26"
        },
        "item": {
          "id": "0b411851-47ce-4654-b192-0d85eb7a0c5f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dbcfcd5f-07a2-47fd-a52e-0ff5b6b95abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f77475d-448b-4357-9261-6df13eb24d74",
        "cursor": {
          "ref": "e567e905-95b8-43fa-a8c7-4625f378a561",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "58c785c8-1975-45ae-9798-a47cb687be9c"
        },
        "item": {
          "id": "7f77475d-448b-4357-9261-6df13eb24d74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8e970a01-4cfb-447b-ba58-56c4e05a6c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b73a24-ba0a-460a-b346-3ba36e28e5cf",
        "cursor": {
          "ref": "a750e902-af57-47d7-9a66-246a6cb0233b",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b817b4ea-0ff2-4443-9ab9-f4e665d7761a"
        },
        "item": {
          "id": "e2b73a24-ba0a-460a-b346-3ba36e28e5cf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "612b41e4-92dd-42f1-b4b7-da8d57543a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa698fc-1ecb-4b66-9aaf-ce6be1d5fc7e",
        "cursor": {
          "ref": "ca83eaf9-10ee-4533-aa9d-6f38694aad5b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a2eba64c-486a-457d-a5f1-55033dfba34d"
        },
        "item": {
          "id": "dfa698fc-1ecb-4b66-9aaf-ce6be1d5fc7e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1a1c010-615c-4cca-bf0a-0758f3c5d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c48735-fe8d-4dff-8336-0c3f8bf4d87a",
        "cursor": {
          "ref": "bf193744-09de-4c1c-8fe3-73d63a2bd521",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ba034e6-466e-4642-8d49-b437ccbb595b"
        },
        "item": {
          "id": "73c48735-fe8d-4dff-8336-0c3f8bf4d87a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fdf07070-3124-4e45-b583-40da35fda450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e1ef3-2860-4b28-b093-7e7be8cbce1b",
        "cursor": {
          "ref": "f9dda248-ed76-4457-8e58-7a0f4ef060b8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5aa44ee8-3f59-4cd2-919f-9a976badfe1f"
        },
        "item": {
          "id": "bd2e1ef3-2860-4b28-b093-7e7be8cbce1b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "014ad661-93f7-436f-9b34-84069488aef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783a3e26-00ed-4435-83ab-5c0a93425ebc",
        "cursor": {
          "ref": "fc36c24f-c141-4993-b1a0-14c357eee098",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "39d02c70-9e48-455e-bab0-b3f94b0811d7"
        },
        "item": {
          "id": "783a3e26-00ed-4435-83ab-5c0a93425ebc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b8fee337-36a0-4f3d-9964-81199b3a4a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c344283-4fc8-4651-b85e-8c9f876b1c95",
        "cursor": {
          "ref": "781876b7-9dd8-4d62-a95d-a9a1c79dd825",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ace36403-526c-472e-bf87-d90fbd5c2987"
        },
        "item": {
          "id": "8c344283-4fc8-4651-b85e-8c9f876b1c95",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "18e94a9c-bacf-454a-92b0-fcdb2088bef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3aba2e-8fa2-4a3e-b372-f1d4a8ee0408",
        "cursor": {
          "ref": "33689095-2bf7-4b15-a6bd-6e13741893c0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82f960c9-3ae7-4d2d-bf95-f22ddcd3c135"
        },
        "item": {
          "id": "1f3aba2e-8fa2-4a3e-b372-f1d4a8ee0408",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "16ba4c78-f2fc-4e29-ba3a-c78bd3bc15e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c9c3b-bd33-4192-863e-07e78b43b4e3",
        "cursor": {
          "ref": "37cdc9c6-bfe2-4bb8-8a16-4448036f2d97",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dac7841a-0884-4897-8556-f67d01539c17"
        },
        "item": {
          "id": "0e3c9c3b-bd33-4192-863e-07e78b43b4e3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c5485689-af35-4e2e-8dbf-d1fbfabde9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a618a8-51a2-4548-9913-6de678460c1a",
        "cursor": {
          "ref": "b053a110-8714-4b8b-87c2-a381be5a53b7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "95332adb-5988-4973-a541-73dffb562d6a"
        },
        "item": {
          "id": "b1a618a8-51a2-4548-9913-6de678460c1a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7603096f-347e-45ef-b72e-880d54f893f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4119a68-6faa-48d8-9d35-c8e84fe8fba8",
        "cursor": {
          "ref": "8144d631-c670-4146-9f5f-2387633786cf",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "12013993-ade3-4d0e-9084-be2ca742db11"
        },
        "item": {
          "id": "d4119a68-6faa-48d8-9d35-c8e84fe8fba8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90b053e8-3258-4e96-b9bd-abbc4bc1b2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2435aa5b-1dc1-4d73-8a72-7be2a53cf941",
        "cursor": {
          "ref": "a53d5836-9745-4588-b6dc-60fa6460a47f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a54154cd-edcd-4860-96ab-4ea2297fd80f"
        },
        "item": {
          "id": "2435aa5b-1dc1-4d73-8a72-7be2a53cf941",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b0d11a30-9e5e-4060-a453-b7cb235197a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f70ecc-882d-419c-8c59-6d13f8f76cc5",
        "cursor": {
          "ref": "29bb5bca-a99d-4e95-addb-0a271867f812",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d6030eb-0ed0-4bdd-baf2-f433f1a49ae6"
        },
        "item": {
          "id": "07f70ecc-882d-419c-8c59-6d13f8f76cc5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c9289137-320f-48c2-ac61-a504ec175b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397a93e6-f921-486d-acc7-5e8b6e9784d5",
        "cursor": {
          "ref": "0b8b3b90-6d44-48c8-8ae5-07b45a3cefaa",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "48b5f307-5066-4287-b7df-279cc3b897c3"
        },
        "item": {
          "id": "397a93e6-f921-486d-acc7-5e8b6e9784d5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4a7e3644-5763-4463-aafd-ff698af26881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b5fd34-0410-4d41-aa53-eb12f414bb80",
        "cursor": {
          "ref": "337ea265-08d5-4084-be36-e301022f9b00",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8ac11877-6e74-4cfb-8891-d2afab968c23"
        },
        "item": {
          "id": "23b5fd34-0410-4d41-aa53-eb12f414bb80",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ebd3bbd5-198f-4ce5-8458-8fe782201945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558adea-ba0e-49fe-ae5c-13834dde14ac",
        "cursor": {
          "ref": "ec417f39-d4a9-4d0f-86eb-e637bb3060a9",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37fa3433-478d-45e7-ace3-f661ffecd31b"
        },
        "item": {
          "id": "2558adea-ba0e-49fe-ae5c-13834dde14ac",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0842f651-ece2-4328-bf9d-65a14d084a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18604cd3-a1a0-4a91-957c-1f1d684c08ca",
        "cursor": {
          "ref": "42f2968b-edea-489b-a7dc-cff7436c795f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4c9afbd4-410b-4e4c-bee9-12a6bebbc6e1"
        },
        "item": {
          "id": "18604cd3-a1a0-4a91-957c-1f1d684c08ca",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7e44fe36-d4ab-45ed-a495-c9bfb59c2bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde20435-7678-4783-887d-5a8f7ca0dfa5",
        "cursor": {
          "ref": "5377d629-7f1b-456f-9def-48483d567ed1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "249d424b-bf92-4160-a820-7c793209c0a3"
        },
        "item": {
          "id": "dde20435-7678-4783-887d-5a8f7ca0dfa5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e57730a0-0ab5-40a2-9878-7071d4a18a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1f88a7-748d-4b7d-b375-cf9535e2caa3",
        "cursor": {
          "ref": "de2a3f21-ecbc-421c-bdc6-d5d12e195f7b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c6858f4c-f157-4e4f-9cec-784b90c15da6"
        },
        "item": {
          "id": "4c1f88a7-748d-4b7d-b375-cf9535e2caa3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f508def7-a895-4257-be6e-caed8019ded9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52730fef-c23e-4584-9bcb-1183044cf7b5",
        "cursor": {
          "ref": "655624a6-799f-47a2-974d-77a2ffd3405f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f13f8113-f6d9-4192-b4f3-d0b5e45240ee"
        },
        "item": {
          "id": "52730fef-c23e-4584-9bcb-1183044cf7b5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c88edf62-c050-42c9-920a-8602dd9634b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b167be-4757-4d29-a26a-0e02ed07695e",
        "cursor": {
          "ref": "bcc1e581-19c3-4f3c-b3b0-da3ef58209d1",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5b77a1c9-427e-4912-86f0-eb91fbe9d7ce"
        },
        "item": {
          "id": "b3b167be-4757-4d29-a26a-0e02ed07695e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f28fa0c9-32f5-4f6c-8c96-564c65de757e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c92d256-0cce-4392-a0cd-19c6028394bb",
        "cursor": {
          "ref": "6db1b608-eff5-4548-ab46-de53d30cff50",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "68a1022f-bf8d-4fcb-94c5-2bc6452b01a3"
        },
        "item": {
          "id": "8c92d256-0cce-4392-a0cd-19c6028394bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7077fcd0-f199-422d-8101-4c57dd3d30ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2490a7c-352a-4da6-a405-6bcc3109dde6",
        "cursor": {
          "ref": "6eaf5769-e602-437d-b3d1-205fe18908bb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c6e028d9-4d29-41a7-a293-02987fe2209d"
        },
        "item": {
          "id": "e2490a7c-352a-4da6-a405-6bcc3109dde6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "832048e6-16e6-45e7-8852-3894b0fa2841",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 582,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2280a7-edaf-40f5-8c57-589468fc8609",
        "cursor": {
          "ref": "392129ea-9443-4e0c-b821-b5a5450ad46d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2d9e59b8-e32f-46b9-a9d5-5e3849c5e70b"
        },
        "item": {
          "id": "1c2280a7-edaf-40f5-8c57-589468fc8609",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4aefaf88-ca92-4957-88fd-75cac7ba8233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f4db97-3f1e-4107-aaf4-d1d72dbcde3c",
        "cursor": {
          "ref": "8af8162f-21f2-47c2-91fa-3e0ed62d5e1f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "976545cb-aedb-4e80-8b62-f39a42748ac3"
        },
        "item": {
          "id": "d8f4db97-3f1e-4107-aaf4-d1d72dbcde3c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04cff9d6-7886-44b6-a910-bfb75b50fde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1a5ccf-b7aa-479d-a92a-2c2d09e5a78a",
        "cursor": {
          "ref": "f3b316a0-3825-4530-b22a-0c0e5125943d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d2c96e4e-52af-423a-b9a7-6bf7f0800d56"
        },
        "item": {
          "id": "2a1a5ccf-b7aa-479d-a92a-2c2d09e5a78a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9c63ad3f-5d60-4b49-a980-3821259dee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bb42cf-06b2-4287-a8e9-b7f30e015ce1",
        "cursor": {
          "ref": "c7fede21-8cf3-4dd4-a322-0faef1cf9860",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "323abf0e-8bfc-4bef-a344-a4e504b4d469"
        },
        "item": {
          "id": "92bb42cf-06b2-4287-a8e9-b7f30e015ce1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d7961bb-16cc-4bf7-b115-40fa16587147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c653c145-d805-4d5b-a5d4-192598f4d7e8",
        "cursor": {
          "ref": "9d803bd7-c2b8-4732-ab52-4a7b7c8388e6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "556b5673-c821-496e-a781-17ad29cc2d67"
        },
        "item": {
          "id": "c653c145-d805-4d5b-a5d4-192598f4d7e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d05e3dab-4865-4b37-9e5f-9eb52c59347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b430526e-4359-415f-ab3a-a57f920b0ae3",
        "cursor": {
          "ref": "44c9b9a9-1f35-4420-8e6c-d2ba281f94d5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0690ddc8-414f-49e2-a021-394fb6f622a6"
        },
        "item": {
          "id": "b430526e-4359-415f-ab3a-a57f920b0ae3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e69d4b39-02a3-4f5e-9387-fb058f7bf9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf38932-1732-463d-bea7-c52baf0b7789",
        "cursor": {
          "ref": "2553ab03-d8be-4e2a-8e1e-791896abbacb",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d3d3a8d3-d5f6-44f0-9ac7-005a2c6a04c3"
        },
        "item": {
          "id": "eaf38932-1732-463d-bea7-c52baf0b7789",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ce147019-1e47-4b19-aaee-5b823f1bf83a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c4ca84-ce5e-4426-a073-1cb80d6c1301",
        "cursor": {
          "ref": "257d7921-9753-4342-a972-43b9065108a9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3ecb4c2b-2919-453e-997c-dcd606d1228c"
        },
        "item": {
          "id": "30c4ca84-ce5e-4426-a073-1cb80d6c1301",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "99695576-7cc1-4d73-bcfb-561e3a9ea66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ca7082-bd6b-4e11-b173-a92636d12417",
        "cursor": {
          "ref": "ed1e97f3-3a8c-458a-9f27-659e297ca7c5",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3b4a82c7-3f70-41bb-9747-d9cd8290ab98"
        },
        "item": {
          "id": "49ca7082-bd6b-4e11-b173-a92636d12417",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "004afae6-f5a0-49f4-9fff-8050a0d01dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18265619-6b81-4fde-b367-c10642f1b800",
        "cursor": {
          "ref": "c20316ca-3f53-4403-83dd-3799bf34e2e1",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e23980b6-7ba2-4bd6-9220-647a37152de1"
        },
        "item": {
          "id": "18265619-6b81-4fde-b367-c10642f1b800",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7efc446a-af7f-4a29-b025-29df39af4100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1e43b4-7ed6-41cc-83f9-e81f6e3bd0fc",
        "cursor": {
          "ref": "802e7926-75b3-4d9b-97ff-7aac9f7a9f6d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9c3ed802-e120-4946-8460-219114df9ac9"
        },
        "item": {
          "id": "ee1e43b4-7ed6-41cc-83f9-e81f6e3bd0fc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cbcbc1b3-afbf-4535-a6cb-0b1f1d44683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e49121e-4aea-4cc4-ab61-ed670c8435c9",
        "cursor": {
          "ref": "6d94251a-e170-496b-ac9b-cd5f9b531963",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d72ea38f-bb69-47da-8c1c-711524cab4f9"
        },
        "item": {
          "id": "1e49121e-4aea-4cc4-ab61-ed670c8435c9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7d914bdf-1a49-4cd8-bd45-89b76d447bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d163e52-36e8-4ade-a131-1a0a4a08e283",
        "cursor": {
          "ref": "50e768ec-9528-4b1c-b69a-f2d5a4112c3b",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42c8ee6d-0c85-41f5-aada-50d3503f9c02"
        },
        "item": {
          "id": "3d163e52-36e8-4ade-a131-1a0a4a08e283",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "462c117b-7ad6-438f-b0de-9ce17105ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d300a190-5431-4451-bbd0-10ae3d56a027",
        "cursor": {
          "ref": "db19f120-a004-4daa-9b02-00d53bd64d72",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6dcc0812-162c-4479-87a8-77500faf8693"
        },
        "item": {
          "id": "d300a190-5431-4451-bbd0-10ae3d56a027",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3022a8b6-49a4-4338-a587-1a45f88115a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708f64ff-eea2-4cfe-b2ff-879d15423c57",
        "cursor": {
          "ref": "7f0f8c09-13ad-42d0-81f2-147ecaa00e48",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3d66cea9-5803-4c69-b2cc-cca7bfbc70a4"
        },
        "item": {
          "id": "708f64ff-eea2-4cfe-b2ff-879d15423c57",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9e3bf32e-bd0b-49dd-9646-f5d0dce3c6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d2e3c3-7a82-450c-a195-e247969962b3",
        "cursor": {
          "ref": "aec849be-eda9-4bdf-9a22-bc9b2b6d5a5e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f0c0490f-c7d7-4fdd-951e-c72c71e75b69"
        },
        "item": {
          "id": "06d2e3c3-7a82-450c-a195-e247969962b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "47fc9aa5-3834-4c29-b329-a9a93d8ea88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e12b47c-e959-4781-9f32-5f73e177264c",
        "cursor": {
          "ref": "07ba72ed-6715-4bbc-9fa3-1ab599f4e305",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5394e94c-4f24-41a8-8799-7f181290f759"
        },
        "item": {
          "id": "2e12b47c-e959-4781-9f32-5f73e177264c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4ce67bee-9a99-49d2-b864-4ad5ff3cd2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061b4e36-7d5d-45e1-8be5-625aefee8d98",
        "cursor": {
          "ref": "c7bdee35-7bf3-42e6-b872-a1e15060b962",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4ec75dcc-46a3-46b9-920c-b0182cd3583e"
        },
        "item": {
          "id": "061b4e36-7d5d-45e1-8be5-625aefee8d98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e7c89792-dd08-49ad-b78d-c0592c5349bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a256dec-42ea-4657-9eae-3a465eddffdb",
        "cursor": {
          "ref": "3a04cdce-193d-42e8-92bc-30a72a7784cd",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "987e0d66-94f6-421d-ad7c-10c4d24ea92a"
        },
        "item": {
          "id": "7a256dec-42ea-4657-9eae-3a465eddffdb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4278b331-222a-4104-84fd-19b84002e7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fa3e71-7f32-4a88-b294-c80c10c5a926",
        "cursor": {
          "ref": "9ce7303b-f548-4114-87bb-39c287c6e8e9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e4c15e07-cd12-4c30-975e-52cd93a069f3"
        },
        "item": {
          "id": "e6fa3e71-7f32-4a88-b294-c80c10c5a926",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e2f810a2-8f60-420b-93ca-8944933a7e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96ddd57-d335-41b3-8604-54d62757573f",
        "cursor": {
          "ref": "567b4a98-6f7c-4209-a1af-7c22f523973b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a282ec81-941e-4476-a705-a56388ef3be5"
        },
        "item": {
          "id": "d96ddd57-d335-41b3-8604-54d62757573f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "51ad182a-f97c-4d64-86e4-7dff7f0e273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c4820b-0090-42c5-9db7-2b3d198d995b",
        "cursor": {
          "ref": "fa60186c-38eb-4836-8bf4-9fa3a9c5cf7c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "089065e4-2eea-4f45-bc07-bd7ad37918ea"
        },
        "item": {
          "id": "e5c4820b-0090-42c5-9db7-2b3d198d995b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12b01446-642b-4026-bf1b-e31bafb81edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aeb2e2c-76b8-4c64-9f09-fc39a83bb245",
        "cursor": {
          "ref": "e17c19bf-af5c-49d5-a12a-9dc5a1a323e9",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "566ac6b5-0571-4390-ad14-a336b1eeab54"
        },
        "item": {
          "id": "7aeb2e2c-76b8-4c64-9f09-fc39a83bb245",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eda2f62d-7624-4578-99be-08c23dd7b76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beff1a6-10b7-4729-a94c-7d2bc1e3d43e",
        "cursor": {
          "ref": "e2cc05e6-2e2b-406b-ad0d-0932f340c71a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3ded03b8-00dc-4df0-b82f-6ea26b886ef0"
        },
        "item": {
          "id": "0beff1a6-10b7-4729-a94c-7d2bc1e3d43e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fd3df5f5-762c-42aa-9a8b-99273f0e5f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14b33b-54bd-4279-8f93-97d56eb245bf",
        "cursor": {
          "ref": "75ba2daf-25ac-40f6-b659-ad53d0bcd125",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "be57959a-5167-48cf-93bd-56ab511eaf84"
        },
        "item": {
          "id": "7c14b33b-54bd-4279-8f93-97d56eb245bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "addd9d5d-379b-40e4-91cc-7538c7d2a7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0c8445-a20c-4c74-aa04-63d54745595d",
        "cursor": {
          "ref": "93d7e900-b5bf-42ef-9d2e-8699c522f9a7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bc827c23-bc32-430b-b2a1-28551816c30c"
        },
        "item": {
          "id": "3a0c8445-a20c-4c74-aa04-63d54745595d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2a360414-bc3c-4eb6-b8e6-c2548007cab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb59ee2-31ab-4f37-a0d6-baf7485445ae",
        "cursor": {
          "ref": "f7a035d8-ff85-4d33-a35f-38837f96c66a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "40512cf2-73fc-4030-b7ba-fe05284b99fb"
        },
        "item": {
          "id": "ebb59ee2-31ab-4f37-a0d6-baf7485445ae",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c6667bde-7ea0-4e89-bfc3-256f26e8a5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f02f2ce-37c2-4510-b1aa-c909a4c4a64e",
        "cursor": {
          "ref": "17cf7880-acc9-4501-8aef-4e88b5269bbb",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ca1441d1-b625-4aec-92a1-92cb626900a4"
        },
        "item": {
          "id": "0f02f2ce-37c2-4510-b1aa-c909a4c4a64e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2463a7c9-8d80-42f6-b5b5-854d104579cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45305020-7792-41da-9d48-3c14cc86367c",
        "cursor": {
          "ref": "7e843580-de44-4654-9bd8-3696e716af2e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b6869809-4d06-4625-b957-67ded55e7987"
        },
        "item": {
          "id": "45305020-7792-41da-9d48-3c14cc86367c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5fda0bde-2168-4e45-8881-848bb080acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784d91ab-73d6-4ec4-9da6-2708eaadb0fb",
        "cursor": {
          "ref": "114e089c-ec95-40bc-b925-19fcc4deb2c3",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6951a093-97a0-4bcc-8116-55202a37e474"
        },
        "item": {
          "id": "784d91ab-73d6-4ec4-9da6-2708eaadb0fb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3fe74190-0e14-4902-8fa4-b6e56d2c5380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131c30b6-37ef-43ed-83e2-2df31801364e",
        "cursor": {
          "ref": "294fab3e-8e8f-4601-b435-a3af57b45774",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ff1b91eb-3567-4b99-840b-97760c29ad18"
        },
        "item": {
          "id": "131c30b6-37ef-43ed-83e2-2df31801364e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8d4bc15b-7772-4696-8221-9d780b30c775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578b3c6e-3dba-4da3-81b6-0d9343d6b651",
        "cursor": {
          "ref": "038ea7f7-80ac-4938-9778-8d2288b5aab4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "af20b692-98e0-45b6-ad1a-5c83323926bb"
        },
        "item": {
          "id": "578b3c6e-3dba-4da3-81b6-0d9343d6b651",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2c273574-43b5-47ce-a9e1-278c1eb14782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601634ff-5846-47eb-8729-8b8dd04990a9",
        "cursor": {
          "ref": "afa72d06-629d-4527-914a-44431d5a8377",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4b7bcd8e-64fc-4a78-a650-597aa0509334"
        },
        "item": {
          "id": "601634ff-5846-47eb-8729-8b8dd04990a9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "324033e2-b27e-42c4-bd15-54697e11169c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15664ff9-96d9-47e5-9652-99788e5a876f",
        "cursor": {
          "ref": "bc46f7e2-86d1-47e8-a923-d3975f13a1b9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cb5f60b2-31f7-4262-bf9c-822b3eab3f6c"
        },
        "item": {
          "id": "15664ff9-96d9-47e5-9652-99788e5a876f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "34bd9e9a-8a78-42a5-9dac-12b9d03e2a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e271f23-2150-4ff1-a719-3278c1b8b01e",
        "cursor": {
          "ref": "1e818079-461a-4858-988e-4acc662d20c1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e9ba6c00-cf47-4337-a896-e50c39b785f8"
        },
        "item": {
          "id": "4e271f23-2150-4ff1-a719-3278c1b8b01e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5bc08f17-bee8-4aec-93f9-7a7f9b90ec08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e86a14f-3fd2-4263-9aaf-c5b57d746762",
        "cursor": {
          "ref": "5ac60c6c-684e-4295-b27a-c89805dcd3cb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "449cf48f-cc69-4ea1-9aaf-650aa9f6c6e4"
        },
        "item": {
          "id": "4e86a14f-3fd2-4263-9aaf-c5b57d746762",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a95109ce-77a0-4999-be8a-355e92f44764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e1c2e8-6f90-4d48-a317-1afb019f911e",
        "cursor": {
          "ref": "08eb7575-3d63-43f9-84c6-06629595c23e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0ed75601-86ba-49b0-88d7-9218463d4ce9"
        },
        "item": {
          "id": "40e1c2e8-6f90-4d48-a317-1afb019f911e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b65207e8-0f5f-425c-b89b-d139ed73d317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdfe263-64d3-444a-bebd-8c096649748e",
        "cursor": {
          "ref": "6f5b4089-377b-4a68-936e-eba95ea1e6ba",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3556cc98-25e8-4e3c-a3a6-7228b0acdf89"
        },
        "item": {
          "id": "bcdfe263-64d3-444a-bebd-8c096649748e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ec3b1c61-f918-48e2-80f2-a82764993eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a8c14d-400a-4f84-8951-3af0edb88973",
        "cursor": {
          "ref": "8a3fa512-d306-4b98-aa05-1487a29c9525",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b2628846-66b9-45fa-848c-1f2babbb6d2c"
        },
        "item": {
          "id": "c6a8c14d-400a-4f84-8951-3af0edb88973",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f3d6f3e-3853-4f3b-9926-e9bbba4406e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb295a3-97d0-412a-8560-dc05aa057e09",
        "cursor": {
          "ref": "03e9e197-d5c5-43a0-846d-707cdcd16f05",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bfa14e20-fc2e-4d77-a174-1f36af1c770f"
        },
        "item": {
          "id": "afb295a3-97d0-412a-8560-dc05aa057e09",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2f7c134d-63e4-453b-bed7-15aac2c053b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89638ab9-6246-4410-a400-c49b63a51d94",
        "cursor": {
          "ref": "54849a97-c7b9-406a-8609-657a614372ee",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bc3b7a47-baa0-4242-b2c6-1bea1741ecc1"
        },
        "item": {
          "id": "89638ab9-6246-4410-a400-c49b63a51d94",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6365f7e8-2db8-401d-83dc-e3b9e3e105c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb276642-5011-43dd-b901-967d2a5fb4b4",
        "cursor": {
          "ref": "c024c8d7-efbe-4c0c-82b4-aea03dcb7d21",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "af35b25c-907a-4fa0-9daa-c18431f2ec7e"
        },
        "item": {
          "id": "eb276642-5011-43dd-b901-967d2a5fb4b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b61d5ab1-f0c5-4a8b-9834-032209281e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63397aa-f939-47be-9fcd-2fb5f58e5e58",
        "cursor": {
          "ref": "68399019-20ed-42fb-b8d1-097b450050bb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "606d9209-4356-4465-9328-8fd9c2658cca"
        },
        "item": {
          "id": "b63397aa-f939-47be-9fcd-2fb5f58e5e58",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9a210d01-b72b-4452-87ad-82869c6b753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710977af-7fda-42e2-a340-ecd4623f2a8e",
        "cursor": {
          "ref": "d9bb4076-f135-406d-b0c9-9a63a2bad623",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb6b0adb-7c9c-4756-bad3-4a93a1d978e5"
        },
        "item": {
          "id": "710977af-7fda-42e2-a340-ecd4623f2a8e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e31f2560-79e5-4ff3-8bf6-b27dac853670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b86e251-c816-4209-a562-4371b8f8c9af",
        "cursor": {
          "ref": "40147b6f-9ba8-43c8-a200-65d3ee812aef",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "defeb8e3-788b-4796-a13f-4c56d8beb662"
        },
        "item": {
          "id": "2b86e251-c816-4209-a562-4371b8f8c9af",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "228cac85-d44b-4aff-8396-a732980c31b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862c6c3-7f97-4610-a113-141807f8c58a",
        "cursor": {
          "ref": "23c83e45-173c-4a46-8023-220efe061697",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c749944b-b94b-4c94-82fb-fa26944d3adc"
        },
        "item": {
          "id": "c862c6c3-7f97-4610-a113-141807f8c58a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "521be812-3433-49b6-a4b3-621fbfb6e04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732dc4e4-4daf-4890-bbee-a81bb9a95cdc",
        "cursor": {
          "ref": "7918e896-4ff2-4cc6-899d-c959baba9f85",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4068292a-08e5-4421-9fd7-54ec0f2e24ea"
        },
        "item": {
          "id": "732dc4e4-4daf-4890-bbee-a81bb9a95cdc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5b850a5a-75fc-4d4b-8d10-4495d3e549d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374ec4cb-15f3-45fc-8f63-3d3b33588f59",
        "cursor": {
          "ref": "6352ae53-da12-4e28-b61d-a0b9d3b9a971",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ea6ae27d-8a72-4e48-ae90-aa84e39e4d82"
        },
        "item": {
          "id": "374ec4cb-15f3-45fc-8f63-3d3b33588f59",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c079db8e-a48b-4974-add5-a37e76e593a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdc933c-120e-4a60-a45d-9b1cc8d2e746",
        "cursor": {
          "ref": "3dccd0ca-bcb4-47d0-9573-ec217d1f7479",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0a8be9c0-88d2-4d42-8390-86aa871f5cd2"
        },
        "item": {
          "id": "8cdc933c-120e-4a60-a45d-9b1cc8d2e746",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bc8de571-55fb-477d-803a-41ae1b1427d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797b8e8e-51e0-44c1-a2a0-e3f7e32106ce",
        "cursor": {
          "ref": "a9cc0a50-7356-47dc-9818-b6f03cd8e009",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1e2d8e95-c0ec-4cbc-998a-e68234e9aeb7"
        },
        "item": {
          "id": "797b8e8e-51e0-44c1-a2a0-e3f7e32106ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c7a05cf5-9f13-4e7a-b2ff-eab5223b15f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9094a247-e4fa-40fb-9268-8eb3154bf26c",
        "cursor": {
          "ref": "e79b1020-51f2-4d89-aa6d-b49b5eb5ae6e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7b162f99-e874-4385-bf14-be4a3e32784a"
        },
        "item": {
          "id": "9094a247-e4fa-40fb-9268-8eb3154bf26c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "214f3575-0428-4b6c-a6d0-17172b88e027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45fbd60-7585-437a-8e70-89f30d059320",
        "cursor": {
          "ref": "7b5e9313-2e14-4543-9221-e3346e772058",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4c9257ef-fe9f-4909-a71d-08aaeb753fd7"
        },
        "item": {
          "id": "b45fbd60-7585-437a-8e70-89f30d059320",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c0a74b26-6ece-4c1e-a109-f9550a350246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c8dfbd-021f-44d0-9f0f-ff52d3ce151b",
        "cursor": {
          "ref": "f7d11602-5d2c-4d2e-a3f5-be29c9505a45",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c7056018-fd84-4baf-9a8d-e8b0b21d55b4"
        },
        "item": {
          "id": "51c8dfbd-021f-44d0-9f0f-ff52d3ce151b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b56d9360-6873-40ba-b737-6e48138a6f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76e7839-bec4-4e08-bb98-42b786e9cf63",
        "cursor": {
          "ref": "a0868191-072b-4723-9e7b-9ff53d8b9f9f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9e88b28e-942a-441f-8d19-36fc95816f1f"
        },
        "item": {
          "id": "a76e7839-bec4-4e08-bb98-42b786e9cf63",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e3292bf7-f5fd-4e2a-acac-b5f98c323e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec845611-65b9-4930-9137-e9678f21a0b4",
        "cursor": {
          "ref": "fc9973bc-069b-4ad7-a07e-99dac17acd7e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b2048f36-2d21-4860-82e6-1d80a1f6d5ef"
        },
        "item": {
          "id": "ec845611-65b9-4930-9137-e9678f21a0b4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "62f52280-7099-4235-bb2b-75c43a04227c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceace5d2-350b-4eaf-9853-ad743732e9d0",
        "cursor": {
          "ref": "19f9c9e6-85ec-42f6-ae50-7338810295e0",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "77f35987-55f1-490a-a791-964569b81e59"
        },
        "item": {
          "id": "ceace5d2-350b-4eaf-9853-ad743732e9d0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "233f73c9-3389-46d4-9e8a-e305eaafdce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b69423e-9cad-4d04-9e03-9e7ddf6159bc",
        "cursor": {
          "ref": "10c55e57-26cc-4ba0-a49d-473d3b203498",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "0e840373-1238-4dfe-a859-4beee12c3065"
        },
        "item": {
          "id": "9b69423e-9cad-4d04-9e03-9e7ddf6159bc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "801cde8e-be6b-4ffb-98fe-4fbe06883f00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ad31d0-986b-495d-a045-660ec4369118",
        "cursor": {
          "ref": "2a94012a-f44a-4e31-866c-f60160f5fe81",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d0ccb194-e3b8-4015-8f58-3f916c67ac38"
        },
        "item": {
          "id": "36ad31d0-986b-495d-a045-660ec4369118",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eaec878d-7362-40e0-aa27-cb5452be383a",
          "status": "Created",
          "code": 201,
          "responseTime": 6582,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a6b62-2788-436a-8ca2-f981e761d31b",
        "cursor": {
          "ref": "7e9ba411-4c3b-4404-a31c-56205678878f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ed2f1f45-c179-4344-a284-9bfbe77d547f"
        },
        "item": {
          "id": "914a6b62-2788-436a-8ca2-f981e761d31b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "19d4b01c-17e8-40fd-a398-771696208ee9",
          "status": "Created",
          "code": 201,
          "responseTime": 6482,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d51402-5fcf-4658-9f02-c20eb583821a",
        "cursor": {
          "ref": "2709c5d4-4129-4c97-9f11-d78cb3eee3fd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7a623c5-4a49-456c-a60b-d5c3b8e0ddfc"
        },
        "item": {
          "id": "f4d51402-5fcf-4658-9f02-c20eb583821a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "225b0c49-0094-44b6-935c-8bc8e55e3e24",
          "status": "Created",
          "code": 201,
          "responseTime": 6856,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ec9ac5-884c-4a8f-afa3-696848e6341e",
        "cursor": {
          "ref": "c2b1d9b0-43f8-4986-b4aa-0196e81601cc",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a1d2faad-900c-4c1d-8c13-8306afff3e28"
        },
        "item": {
          "id": "e0ec9ac5-884c-4a8f-afa3-696848e6341e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c1d43dba-e517-40fb-a706-96182be35502",
          "status": "Created",
          "code": 201,
          "responseTime": 6456,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a00f32-08d3-481a-92b5-c03b6fcd607c",
        "cursor": {
          "ref": "b08d3ee5-cdd4-46b8-a921-a89b2af0dace",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2716311b-9eb5-4576-831c-24952f37052b"
        },
        "item": {
          "id": "e7a00f32-08d3-481a-92b5-c03b6fcd607c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "18e20f3f-a6f2-47a1-9b39-f158e5e70cde",
          "status": "Created",
          "code": 201,
          "responseTime": 6312,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f419b15-db08-4660-a8d8-a3f7aa9e1855",
        "cursor": {
          "ref": "2aa0d427-86fb-4f97-99f9-f26308bffc59",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b535089c-2d5d-4b6f-ada3-e8af9ef4f15d"
        },
        "item": {
          "id": "3f419b15-db08-4660-a8d8-a3f7aa9e1855",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b5871d29-0fe6-4630-a0ef-6aa649b319bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "2b76e83a-2504-49fa-86c2-9e1718fbf994",
        "cursor": {
          "ref": "815aa0ab-3166-4a1e-833d-1c0f786030a2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9d7be17b-eb2c-4a92-a94b-a606510e8bb7"
        },
        "item": {
          "id": "2b76e83a-2504-49fa-86c2-9e1718fbf994",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "af81bb0c-5581-4851-8862-7515d69bb193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3c02e2-f195-4efb-a2de-4bd4cd59c324",
        "cursor": {
          "ref": "80d1d3f5-9290-464c-b52c-897675fb9ed4",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e7d7182f-787b-4dc8-b8e1-f99128c532f5"
        },
        "item": {
          "id": "4f3c02e2-f195-4efb-a2de-4bd4cd59c324",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0020ad7b-1b43-4c81-ba90-f777bba773d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05408c6f-a49f-43a7-a9d6-497455caf068",
        "cursor": {
          "ref": "24bdfeae-3f77-46c1-8d4f-bf1656a444ce",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "724a726c-7caa-42a7-a4ed-ad3ae47eacd8"
        },
        "item": {
          "id": "05408c6f-a49f-43a7-a9d6-497455caf068",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "174a0f8d-c21c-4550-aae2-da3b121ce176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd68b5c-336a-4fd3-9cfa-47dc64d9eaff",
        "cursor": {
          "ref": "3f21e8e5-276b-4360-a98c-0a5da151f975",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a5e59225-b121-475a-9d45-b3947f6a2ff0"
        },
        "item": {
          "id": "ffd68b5c-336a-4fd3-9cfa-47dc64d9eaff",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ffb2d82f-07f7-4a06-9259-749e17b60e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7055908c-a236-4673-8cbe-22936fbdb2d7",
        "cursor": {
          "ref": "e5c20721-970c-46d4-8ca4-54df09f72176",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f2999b51-e810-4507-ab88-2659d92afc25"
        },
        "item": {
          "id": "7055908c-a236-4673-8cbe-22936fbdb2d7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "07f646c4-4d11-4158-bccf-972402a7191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838daa5e-ccb9-470a-98ed-0941d23ba05a",
        "cursor": {
          "ref": "126dfda5-3d89-44e6-8298-2b782e427914",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "de22084d-f185-4326-ae16-babc4ccae1dc"
        },
        "item": {
          "id": "838daa5e-ccb9-470a-98ed-0941d23ba05a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1d5470d9-5203-40c3-9bb9-0d4965538675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d47040-cf88-4f33-b5cf-118cb8d39ded",
        "cursor": {
          "ref": "83dfd937-9384-4779-99a0-806672ce4c00",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "89b24f54-3ce8-431d-b00b-0399a8dc843d"
        },
        "item": {
          "id": "c5d47040-cf88-4f33-b5cf-118cb8d39ded",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "28f3c33c-84f7-4fd7-83ce-82b6fcd69f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33585b60-e65c-4cce-8e56-7df98ae42205",
        "cursor": {
          "ref": "a450a8bd-daa8-48a4-ba45-3c8d74c9c4e2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e308161f-6b33-47da-82c1-a795a4394ffb"
        },
        "item": {
          "id": "33585b60-e65c-4cce-8e56-7df98ae42205",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ad59317a-7d88-46a6-bbf4-0bb7815c3dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b0a811-2f88-44bd-9d88-c2fd50cf5718",
        "cursor": {
          "ref": "4ae6def8-d014-4b78-8569-71e4c6fe967b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff949060-52bc-4404-98e7-c287a45971db"
        },
        "item": {
          "id": "b6b0a811-2f88-44bd-9d88-c2fd50cf5718",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7fc3b021-b507-4d2c-badc-9402f6d0b1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54005a2a-08c4-430c-9262-ba1dce4aa768",
        "cursor": {
          "ref": "f3d2a35c-6cb6-419a-bffb-73b811b7e80c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "caa64410-0412-4435-8a8c-0314749e2028"
        },
        "item": {
          "id": "54005a2a-08c4-430c-9262-ba1dce4aa768",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2568cc7e-56c2-4f91-801c-57fc84955430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b908d7b7-fec4-4b78-8a1e-21521da77bab",
        "cursor": {
          "ref": "ac5a5617-01c8-4622-a750-aed50389f23a",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "25cc2005-1dcf-4a66-8e01-8dfb820b6b59"
        },
        "item": {
          "id": "b908d7b7-fec4-4b78-8a1e-21521da77bab",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7cac9dd6-5d7b-4161-9bd1-808685992a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563e16cc-acd5-43a1-b5a8-79f7154cf058",
        "cursor": {
          "ref": "f67f5b9f-79d4-4de8-aba4-8af55f8806a6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a5d1cfb-9890-4cde-a39c-c35a5258090e"
        },
        "item": {
          "id": "563e16cc-acd5-43a1-b5a8-79f7154cf058",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5fbab01c-497a-4cee-9bda-d94452155331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1f5122-9797-4951-ba15-a36bd3cfcdbf",
        "cursor": {
          "ref": "04278826-f7f2-4b9b-b034-a38304a626d8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "145c3cc4-9605-451e-ac16-40ff3806d288"
        },
        "item": {
          "id": "3e1f5122-9797-4951-ba15-a36bd3cfcdbf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff21e89d-9d71-4c30-aa4d-8e81dd4ea8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d618404-a11d-4e2d-a245-e568148d56f9",
        "cursor": {
          "ref": "53067c0a-2bd2-46cc-b191-1cc5e29d75d8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4c1e023a-3a73-49ba-9df8-ff12fea34ef0"
        },
        "item": {
          "id": "2d618404-a11d-4e2d-a245-e568148d56f9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef7384fe-a84b-4bce-80e5-08c6feb9bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16fc350-1c57-4ba8-8d71-02af9a31bd69",
        "cursor": {
          "ref": "f6b66e1d-538a-4d0f-9917-67b089eb6bb1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e6dbc39a-dcd7-4760-9b78-88fa6159964d"
        },
        "item": {
          "id": "a16fc350-1c57-4ba8-8d71-02af9a31bd69",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b2f733a-1c9d-430c-b55f-fb46b2846f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b227b8ae-2189-4436-a5c4-75ba10b6a459",
        "cursor": {
          "ref": "fab23fba-8b1f-4e4f-a5d5-3d8c5e691cbb",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "79707ee2-92e5-4ed6-bcc3-bf79be4e2a95"
        },
        "item": {
          "id": "b227b8ae-2189-4436-a5c4-75ba10b6a459",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24413e75-f82d-4e16-9bdb-dc1c631fa71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fa20d4-78f8-484c-a39d-872569691461",
        "cursor": {
          "ref": "33f2e3bb-6b93-4f4c-a3d7-c2451ee01b9a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b3829a0c-9e3a-4671-baec-69db4698c5e1"
        },
        "item": {
          "id": "35fa20d4-78f8-484c-a39d-872569691461",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "efa77637-2942-4cec-ab27-745052d4659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5a4218-9b07-49ca-bbf6-d7423d69ee04",
        "cursor": {
          "ref": "fd767ad3-8b01-4c82-b900-4c3aebe59906",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8aca23bb-2c1b-478e-be16-c25fca23d71a"
        },
        "item": {
          "id": "fb5a4218-9b07-49ca-bbf6-d7423d69ee04",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0f933ba-57d9-4766-b709-2384da3af9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16191bc2-e07c-4185-9190-f335f6ffb278",
        "cursor": {
          "ref": "b616c5a1-9043-4273-8058-cc2ce45b205c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7c5d6296-b45d-4e55-abc9-2a9dadb4eb12"
        },
        "item": {
          "id": "16191bc2-e07c-4185-9190-f335f6ffb278",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4bfbd692-112c-42d1-a574-6d4288b04a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e139034-b8ca-4e61-a2b8-a649e3679699",
        "cursor": {
          "ref": "206d3097-ed13-4759-9604-667c9fc2cbe2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "56ac81b8-6aa5-4f12-ae7e-fbf6eaf4f8e1"
        },
        "item": {
          "id": "7e139034-b8ca-4e61-a2b8-a649e3679699",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "18afb660-3356-40c1-8179-d5041794c1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908e8515-22d5-435c-9125-76209e883ea7",
        "cursor": {
          "ref": "8cb02352-8002-45e0-bf97-dc3aadcf148c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca773849-80b1-435d-a017-434f0d68efb3"
        },
        "item": {
          "id": "908e8515-22d5-435c-9125-76209e883ea7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db4befee-02ae-4619-b44c-41501d02d0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33129b3f-ac83-4a72-861a-c11228365c22",
        "cursor": {
          "ref": "b32cce39-dcbf-47c0-8bd5-712d51f4dc5d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8972b2f3-f289-49d6-9929-69adb79f5ba6"
        },
        "item": {
          "id": "33129b3f-ac83-4a72-861a-c11228365c22",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abd7a5f5-9fd4-41f2-9a06-703dfe4541e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0610e86-8259-47c9-9426-d85535ef4d82",
        "cursor": {
          "ref": "113f7d38-83e8-4de3-86a3-4b78caea7611",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b702091c-8b1a-4edd-8e27-3713748e31e9"
        },
        "item": {
          "id": "e0610e86-8259-47c9-9426-d85535ef4d82",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a34d5cf5-78ec-451a-9f4b-c451cfdb5dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9dd825-1621-49c0-9e1e-b0b205326a3d",
        "cursor": {
          "ref": "41ac5fcb-9e5b-4214-bf9f-f8df49f36140",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2947563d-3d95-4768-a3ff-bc758aaac72e"
        },
        "item": {
          "id": "6c9dd825-1621-49c0-9e1e-b0b205326a3d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d349d828-2558-44d4-be08-7c03f75e98b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b429ed5-68ee-40c9-950b-a7088f22595a",
        "cursor": {
          "ref": "38e46a7b-98c0-41ca-917f-de232db923c7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "05afde37-9a49-40a3-aaf7-9d087b1f00ca"
        },
        "item": {
          "id": "6b429ed5-68ee-40c9-950b-a7088f22595a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b4aadf35-9ea1-4b8e-beba-1ee3f2496abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bbefd2-3b15-4d3f-b5f5-b7445cfd86cb",
        "cursor": {
          "ref": "a0c1785f-e7c7-4c5c-a78f-f272236c78c3",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5954d77a-4f96-488b-98f8-818f60182a41"
        },
        "item": {
          "id": "a0bbefd2-3b15-4d3f-b5f5-b7445cfd86cb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "00fcde64-bd38-44ff-8889-93f25d751c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e1db2-f9ce-434a-b3a5-c1e1e3466cf0",
        "cursor": {
          "ref": "c8062a4d-cc43-46da-b9d2-a46636748783",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1488b643-5028-45bc-96f8-b4447a26cdf2"
        },
        "item": {
          "id": "433e1db2-f9ce-434a-b3a5-c1e1e3466cf0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e85ea2d-1c0c-4dcc-8194-3a6b43acb66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d42309-211e-4dca-ba7c-4aef3b331d97",
        "cursor": {
          "ref": "874eef2a-d125-4f62-8992-8cd74b4528a2",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "42910430-ccc5-494c-bafc-e67917d58744"
        },
        "item": {
          "id": "64d42309-211e-4dca-ba7c-4aef3b331d97",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1c4744c9-cb66-4bef-b012-4296e53dd77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ebf5c0-00b6-4c62-8815-8462dec36c53",
        "cursor": {
          "ref": "e4ea6ccf-a397-49de-bba7-598eb46d2dfe",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "054d174a-28ff-4552-89c9-3b4572f3240d"
        },
        "item": {
          "id": "a5ebf5c0-00b6-4c62-8815-8462dec36c53",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d25fab87-a74b-404f-a042-6d2be25f95cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91fd26c-a4f5-428d-8cbb-281120eee834",
        "cursor": {
          "ref": "0f13b47e-7eb0-4900-86f2-a25eb5c65f18",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "40780071-677e-4a98-b2d0-51564892c6bb"
        },
        "item": {
          "id": "d91fd26c-a4f5-428d-8cbb-281120eee834",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4b6fcd13-6c67-44c2-b79e-529c6ec479b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0844fd-1fca-4b84-94db-e7d4c6a71bc0",
        "cursor": {
          "ref": "2dac2fb2-9f04-4569-8c0d-24e06db8339b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "161cdeac-d097-45bd-bf22-e3604da4f170"
        },
        "item": {
          "id": "7d0844fd-1fca-4b84-94db-e7d4c6a71bc0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca593fa3-0a9a-4761-811d-e6af550912f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adda21e-4b0e-4fde-affb-4c6528c02837",
        "cursor": {
          "ref": "68aeead4-0a89-46eb-a978-bcf750c25b55",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "44ae4bb4-846d-43fc-b0cc-97dd9adcbca9"
        },
        "item": {
          "id": "1adda21e-4b0e-4fde-affb-4c6528c02837",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "95012500-187f-475d-94c6-e5b7786e244a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0f9768-bd7c-414c-ad14-fe7874a58b75",
        "cursor": {
          "ref": "01f2d05c-398b-4af8-88a1-9e9f316b677b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "463f3095-f36d-49ae-b3c0-1d7414e1737b"
        },
        "item": {
          "id": "9e0f9768-bd7c-414c-ad14-fe7874a58b75",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3da4a3a8-7832-436c-b63e-71139f52b7dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0442b32-bbf9-4392-ab84-ca0ac45e1798",
        "cursor": {
          "ref": "e5f4ac3d-8010-40b5-8285-d4f90ad80b63",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d5e60256-9153-4777-99bc-b867bbea0b68"
        },
        "item": {
          "id": "e0442b32-bbf9-4392-ab84-ca0ac45e1798",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7a766e27-28b4-484d-bfc8-1ad42ee70b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11212d48-abd0-4872-9e47-4bea9696600a",
        "cursor": {
          "ref": "b1baf7f0-e7c1-4aff-9317-236eb16c8054",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7bd380be-19fc-4c2a-83a9-7c37f62efd06"
        },
        "item": {
          "id": "11212d48-abd0-4872-9e47-4bea9696600a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "47348390-c9c0-4107-90b4-03961af7346a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06200be5-19ab-48a9-bfc9-4a6fdabf2f93",
        "cursor": {
          "ref": "11d35fd0-8410-4576-8a3f-878f26bfa9d9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0dc1713a-56de-4f1d-8ed9-94c1adc96b85"
        },
        "item": {
          "id": "06200be5-19ab-48a9-bfc9-4a6fdabf2f93",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "af935a79-94ad-4237-ba60-9a59b0257a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27011321-694a-4304-9ae0-810a94f4938b",
        "cursor": {
          "ref": "329178c2-cb94-4fcf-afe8-add6753efd43",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ade0f5e6-149e-4cd1-a96a-bada51d1d03e"
        },
        "item": {
          "id": "27011321-694a-4304-9ae0-810a94f4938b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8cf7b595-2266-450d-960f-a426f6f708af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e78b53e-966d-4cdb-bc33-b76c1dd7487c",
        "cursor": {
          "ref": "7893b6ea-31c6-4c81-9029-fa7e356bc320",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f7dcf332-9d39-460f-9c0d-ba50062efb42"
        },
        "item": {
          "id": "2e78b53e-966d-4cdb-bc33-b76c1dd7487c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "98993a9d-5004-46c8-b07a-26e88c143af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20435a18-57da-4e78-9639-e62e2a0086d9",
        "cursor": {
          "ref": "3f3189a1-253b-46af-a1fe-759ab1c0b5a6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b8af118-c2d8-49fd-ada3-7306aeff48ae"
        },
        "item": {
          "id": "20435a18-57da-4e78-9639-e62e2a0086d9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2186e570-1681-4bb3-b00f-4233e67583df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd432179-5aa3-4752-91ef-762c3c57310b",
        "cursor": {
          "ref": "d3d65fcd-217f-46ef-bb04-2fd66225b0fb",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "90683398-f041-4892-879f-63035147bf4f"
        },
        "item": {
          "id": "dd432179-5aa3-4752-91ef-762c3c57310b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "35f7ea91-8467-4e46-8392-71cbfc079a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ded4ba-6c83-404f-83e0-d17739a13591",
        "cursor": {
          "ref": "22157087-c111-4554-b80c-6ecc721217b5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "baeeb5b0-10a4-41c8-902c-f287696933a7"
        },
        "item": {
          "id": "a0ded4ba-6c83-404f-83e0-d17739a13591",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6b09b79e-d02c-4933-8ea3-6e9bd26c0c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b686ce-2e7c-4718-8948-e1bca4a4f869",
        "cursor": {
          "ref": "09379363-aa86-4211-8c53-24ac01b8e38d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "67501592-bb54-431f-91e5-eff838655ca3"
        },
        "item": {
          "id": "f9b686ce-2e7c-4718-8948-e1bca4a4f869",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f9c4db05-75fd-4d1e-aa8e-84aed444fd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd6c85-b8f1-47e6-ba07-dcfaea261769",
        "cursor": {
          "ref": "d8901826-07ab-427f-a8c6-b1d48a6bc95f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "837003a9-19de-4144-b25d-feabeb56bd46"
        },
        "item": {
          "id": "2fcd6c85-b8f1-47e6-ba07-dcfaea261769",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "da97642a-148f-4af0-8f47-564d2723cd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b9dc93-2292-4858-8835-9e19f3b9ce27",
        "cursor": {
          "ref": "fb7346ef-65e3-404b-8818-6267404596af",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0d6695e2-3403-41d3-9d7e-25f4f180aee3"
        },
        "item": {
          "id": "08b9dc93-2292-4858-8835-9e19f3b9ce27",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2d41ad07-34a7-4783-ae94-7b50ac1613ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5c58de-45f7-44f6-b5ed-a3389cb036e6",
        "cursor": {
          "ref": "c79efc1b-6b4c-4708-ac16-f4e4869288a7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "14e5a49c-27c0-4d03-99f4-5c614e69cb12"
        },
        "item": {
          "id": "1c5c58de-45f7-44f6-b5ed-a3389cb036e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a6126498-7d32-46c4-ae38-8db45f6428b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bcd9b2-d221-431b-939d-dd1747b204e5",
        "cursor": {
          "ref": "0ea4c07f-2860-46a2-b2a6-ca7b36fc5c6e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "011ed153-d4fc-40ef-b7b3-51e252f7e410"
        },
        "item": {
          "id": "f8bcd9b2-d221-431b-939d-dd1747b204e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "682c1a92-0a12-44d1-8219-a3758491c2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eadcbd3-2f16-4044-b6c4-77ff8b362f46",
        "cursor": {
          "ref": "35f4c258-be47-4889-94c9-8179ec67dfe9",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d168a147-8e69-4245-a781-87de0bf771fc"
        },
        "item": {
          "id": "7eadcbd3-2f16-4044-b6c4-77ff8b362f46",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "719e82cd-1f31-4ddb-95d9-2a7702bab0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d625c4b-c651-4fd8-bb85-9cabcb8d42b9",
        "cursor": {
          "ref": "8c809a5b-523f-4114-8faa-ab58ea3eca80",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afa340f8-55ea-431e-af45-1d77dc8df402"
        },
        "item": {
          "id": "3d625c4b-c651-4fd8-bb85-9cabcb8d42b9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5629adee-d714-477c-a6d8-22e6a139b3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ae668a-1ee4-4c20-9001-562a58bccd23",
        "cursor": {
          "ref": "973754e7-9232-4aae-a13d-fb5be10b90a1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "919ee9ee-f5dc-46a1-a9ac-da3dde9e25ba"
        },
        "item": {
          "id": "a0ae668a-1ee4-4c20-9001-562a58bccd23",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2abe452d-b68a-4be5-8099-e32e75acd758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df88fbb6-1e2b-4f50-bd39-469d2e7d602d",
        "cursor": {
          "ref": "3907ee20-a126-45d2-a00a-87ed846809d2",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "17c6765d-4aac-4134-bd23-56adbcfd3ed7"
        },
        "item": {
          "id": "df88fbb6-1e2b-4f50-bd39-469d2e7d602d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "82d965b3-8634-46e7-aeb5-fb7ec60506d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e6dac2-6da5-4bcd-b793-ee91e76c1c02",
        "cursor": {
          "ref": "032703f2-f368-4076-924c-8b5363ce50b7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d70a435a-1374-4586-9163-3156332f1c5b"
        },
        "item": {
          "id": "f6e6dac2-6da5-4bcd-b793-ee91e76c1c02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fe74dd90-3023-4870-8263-cc3929e978b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e357ca9-cc88-4388-95e6-525aaca7debc",
        "cursor": {
          "ref": "dc4f3fb2-6da3-4e7c-b679-fb29bf718729",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "faeebef6-13d9-415b-93f1-347bb09340ea"
        },
        "item": {
          "id": "5e357ca9-cc88-4388-95e6-525aaca7debc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1602a5f-2079-434b-b04e-fc38a1c93cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91365a0b-a9a0-4836-886e-19465dc68202",
        "cursor": {
          "ref": "a255ef38-16ef-4dee-9fda-f1aafbbee381",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "81cce243-ef7c-4155-9d82-8f6cddccadb5"
        },
        "item": {
          "id": "91365a0b-a9a0-4836-886e-19465dc68202",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a6eed560-2bb6-49cd-84fe-d99cbfa5f871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9925fd58-85f9-4d96-ae2f-794f022ba2c7",
        "cursor": {
          "ref": "38a75ead-d011-4d6f-95f0-801f4c2fb4d2",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "036fb1da-3623-4be0-a2a3-68d3033b6e0b"
        },
        "item": {
          "id": "9925fd58-85f9-4d96-ae2f-794f022ba2c7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ca103263-81ea-4936-9bc5-d151796993f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f8a7d8-1ea7-48eb-b7dd-f1b2e2cc374d",
        "cursor": {
          "ref": "b382fa39-c41d-4262-96e2-3dfe65508fc1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ee563c8-e19e-4681-9df8-62ea52879e19"
        },
        "item": {
          "id": "c7f8a7d8-1ea7-48eb-b7dd-f1b2e2cc374d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0503bcb8-f197-4a02-b8fb-97b2fc26ba3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69d8f00-f546-432b-bf86-1f1dfeb340b5",
        "cursor": {
          "ref": "eca860bd-c2ba-406b-ac88-1deeae0b6460",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "592b09aa-2588-4c97-924c-a86cdca2365f"
        },
        "item": {
          "id": "f69d8f00-f546-432b-bf86-1f1dfeb340b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fdc1b28e-f932-45be-8d72-c8d5cd2e9d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad11240-cf9c-4ff1-8ad1-02d56c0c1977",
        "cursor": {
          "ref": "c55b3439-4266-4282-a5b7-51d2086defd9",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "70ca875b-c5a3-40fa-aadb-4951cf7b6d38"
        },
        "item": {
          "id": "3ad11240-cf9c-4ff1-8ad1-02d56c0c1977",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ff545182-041c-4775-801d-0724850cb5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1322c1-e49f-4a1c-8be5-cd49bf02a5b0",
        "cursor": {
          "ref": "aad963ca-8401-4545-bfc6-1b5f27a422aa",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "32b4afc7-392f-4291-ab3f-14baf3963323"
        },
        "item": {
          "id": "5c1322c1-e49f-4a1c-8be5-cd49bf02a5b0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "669bca50-c0e3-4665-b782-793c4045926a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7d3f29-e6f5-4d5a-976e-d3befa1bead1",
        "cursor": {
          "ref": "7291d3b4-1a47-4963-a80e-c3213b9f5d00",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1d13dc4f-8434-4798-b471-623608341b2d"
        },
        "item": {
          "id": "3c7d3f29-e6f5-4d5a-976e-d3befa1bead1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "82fc3b5b-4634-463a-ba8e-174e356352e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5f6490-c653-4c91-a0aa-a8963a5618df",
        "cursor": {
          "ref": "bc452037-7ead-4a44-8e80-0998796fe933",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fbd6a240-f0c9-4523-b609-6e878411d0e7"
        },
        "item": {
          "id": "ec5f6490-c653-4c91-a0aa-a8963a5618df",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "86f0f092-7a21-4863-ab83-a5e1494ca981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072d5ffe-6946-4bd9-b833-25d22fd3009c",
        "cursor": {
          "ref": "bb0b710d-1802-40fc-8e4c-375dd50f8d9d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f15cae7c-9561-49de-9012-641cd168a2fd"
        },
        "item": {
          "id": "072d5ffe-6946-4bd9-b833-25d22fd3009c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "58d059ae-000c-42f3-bb16-8bb9919715de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac94262-b368-40e3-961c-9351c88639a9",
        "cursor": {
          "ref": "733b9d6e-23ff-46f1-9d16-8e9e3e9207a6",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7888a666-9809-4c3d-a413-b011c1832096"
        },
        "item": {
          "id": "3ac94262-b368-40e3-961c-9351c88639a9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "46b9c32e-7e66-4122-bb98-5dc74f8d7b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158c9edf-7c82-412c-80e8-6cb8e3c23793",
        "cursor": {
          "ref": "83c3082c-db4f-46a1-9bbd-a29fef327f39",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2fc13089-754e-4c70-9ff0-6ed9b9c7ea00"
        },
        "item": {
          "id": "158c9edf-7c82-412c-80e8-6cb8e3c23793",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d26b914-4dbe-4025-8180-9a2a5119e7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6220f80d-15e3-4012-bc9e-267bc6e6e3d2",
        "cursor": {
          "ref": "e7089e58-a7fd-470e-b2d8-9a375a30af1d",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9dfa805f-4d17-4469-b21f-e0e96c91413e"
        },
        "item": {
          "id": "6220f80d-15e3-4012-bc9e-267bc6e6e3d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "060cf630-1f70-4a50-9b3b-27e108007f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e743c680-af46-4f95-a698-3e1a7086ef8f",
        "cursor": {
          "ref": "f021aac3-3feb-48af-9115-54059315f31b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e596843-1b81-450f-8157-b86e1b6a1dc6"
        },
        "item": {
          "id": "e743c680-af46-4f95-a698-3e1a7086ef8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d5e10953-808c-4b16-9a8a-c0eaca24f8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df68061-bcde-4ac2-9fde-822c6066449f",
        "cursor": {
          "ref": "65cc9702-0ede-433c-bad7-c62666d49407",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b2f81579-e50a-4de2-b18a-63335ed24194"
        },
        "item": {
          "id": "0df68061-bcde-4ac2-9fde-822c6066449f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9dbd3359-a0b5-44a5-8c41-034eca20e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e914da-f22d-4309-b8d3-3e41146ff7e8",
        "cursor": {
          "ref": "89d16ec4-dc90-4a66-bc73-83a30fc229aa",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3b225d27-59b8-4071-b903-aff6081b4bc5"
        },
        "item": {
          "id": "19e914da-f22d-4309-b8d3-3e41146ff7e8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f6eda938-9ccf-47f0-bd5e-a95aa576a9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae23a45e-5b93-4e43-81a6-eed5d0714efc",
        "cursor": {
          "ref": "85e28ba2-929e-4c8c-a13a-7b939948ba01",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0ca9f88d-b10d-4a9d-a7b2-34be055cddcb"
        },
        "item": {
          "id": "ae23a45e-5b93-4e43-81a6-eed5d0714efc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9e28215d-808a-4f02-8a9a-bb192de3ccb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f7e87-75e5-43c4-a742-a65ec7daf8c7",
        "cursor": {
          "ref": "9543c5b0-e45c-4775-8212-24e76132ebae",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e3d6f9ab-6957-4821-ba8b-e93dfe1a8779"
        },
        "item": {
          "id": "4d4f7e87-75e5-43c4-a742-a65ec7daf8c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4965097d-a366-4eff-ba75-b001c25107ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053ebcdf-359b-46ab-a791-d11427a0237c",
        "cursor": {
          "ref": "f74f092e-bf9e-496e-9dc5-866e1052551c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c731740e-518a-4923-8e12-71e1402e1ba5"
        },
        "item": {
          "id": "053ebcdf-359b-46ab-a791-d11427a0237c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6e82c3cf-db17-4cd8-b30f-a80d24365291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a5480e-9bec-487b-a6ec-9fc13b178059",
        "cursor": {
          "ref": "1651ef72-48f6-4554-8710-dc75bba7daed",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e3780b60-7923-443b-b9c8-0c76507b0cc2"
        },
        "item": {
          "id": "88a5480e-9bec-487b-a6ec-9fc13b178059",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dce405ee-a5ff-438c-8c78-d3f5bbfe0843",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b602be0-f6f9-479a-9b35-a691a5891499",
        "cursor": {
          "ref": "d009b365-3238-480e-8895-b889b0ce46bf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "86561833-9131-4fdb-8375-1014bc68dbe6"
        },
        "item": {
          "id": "9b602be0-f6f9-479a-9b35-a691a5891499",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "23a2af33-f248-489a-918b-5b48f19236fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478b9b5-e86a-40f5-aa8e-ff1aba49ae5d",
        "cursor": {
          "ref": "fa990e20-3c07-40b4-88c8-218386effd5a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cc96bd02-0705-4915-9631-6183652cb6c6"
        },
        "item": {
          "id": "5478b9b5-e86a-40f5-aa8e-ff1aba49ae5d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0c469ed6-7588-47db-ae0b-ce706bbac190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a1975d-47cf-400e-9d2f-f993caa08230",
        "cursor": {
          "ref": "5414a966-9409-41c9-8169-04022f399854",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "269585ff-d3ba-4981-bff6-a6771d69b01c"
        },
        "item": {
          "id": "12a1975d-47cf-400e-9d2f-f993caa08230",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a006e940-7d7f-4219-bacd-c9012028379f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a4ef7c-1796-41c0-a835-c1e94e33911a",
        "cursor": {
          "ref": "855ee7b3-cd26-4a04-aa86-305962af07c2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ee0441c9-3b30-45b0-9085-cd90426470f8"
        },
        "item": {
          "id": "b7a4ef7c-1796-41c0-a835-c1e94e33911a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e132a68c-885b-40b1-9daf-0ee0f79c717a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a28a8-0f15-4355-a6ce-071f1c2fdf2b",
        "cursor": {
          "ref": "be3eff8e-be90-4648-a411-fdc15c00a414",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d54a5c00-6fc5-4b40-87bb-0e0cfb3f1f07"
        },
        "item": {
          "id": "031a28a8-0f15-4355-a6ce-071f1c2fdf2b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "802589a1-d326-44e5-bea4-594100ed1a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d943c7-11e6-4f1c-b067-4c0c98d72104",
        "cursor": {
          "ref": "1b990d16-acb4-4989-b944-1e21aa172e31",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31589774-9101-4e17-a885-31fba33880cb"
        },
        "item": {
          "id": "35d943c7-11e6-4f1c-b067-4c0c98d72104",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ce26f026-9cc2-493a-b25c-407cdbae0ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e244fbcf-da26-4a01-b6c6-c562a603deae",
        "cursor": {
          "ref": "6d09120a-32cb-48b6-a868-33c08dbbb2d3",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a7abb5f6-a181-41ed-b389-0536581005ce"
        },
        "item": {
          "id": "e244fbcf-da26-4a01-b6c6-c562a603deae",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c4e6cc80-b06e-4d35-a684-faf8de2cd040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89dd297-4fc6-404d-8cb2-4b396608f42c",
        "cursor": {
          "ref": "caf54005-671e-4aa3-a5e5-7885e3c1b265",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3ac1d14b-ed30-4770-ad98-e03164c4893e"
        },
        "item": {
          "id": "b89dd297-4fc6-404d-8cb2-4b396608f42c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "84db797d-afa8-4187-961f-b19e25615a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe243c0-f45b-4d7d-9afa-3e39cde03203",
        "cursor": {
          "ref": "4797ee6a-cff5-4855-9423-7baa3a01596e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "96998e1e-cf64-4a8d-9bb0-9b43c4b888df"
        },
        "item": {
          "id": "afe243c0-f45b-4d7d-9afa-3e39cde03203",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bf8d95b2-402f-4639-876a-887d07517e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213a468d-dc8e-4555-8f66-1a12c031e16c",
        "cursor": {
          "ref": "42dc2f2f-f6b5-4db7-9ca3-c66b9127ae52",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f5574d31-e4eb-42bb-86ca-1db8ca249538"
        },
        "item": {
          "id": "213a468d-dc8e-4555-8f66-1a12c031e16c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e6b32dd6-5191-4e19-8393-827748eed1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877bfe83-c528-4545-8896-f544df38a688",
        "cursor": {
          "ref": "458bcf97-e28a-4f74-a1e0-868d514acfbc",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8b185474-f732-43e1-bcc2-2a0d7dc014bf"
        },
        "item": {
          "id": "877bfe83-c528-4545-8896-f544df38a688",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e1a10eb-5368-487c-9360-2203fd6d5719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b78bd8-d579-4f22-8a8c-2fb3881a6244",
        "cursor": {
          "ref": "d89a89a1-c270-4174-9163-d3413eeff5f1",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b66e6edb-161d-4155-96b2-120c36cdce99"
        },
        "item": {
          "id": "e9b78bd8-d579-4f22-8a8c-2fb3881a6244",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fbf066b9-5211-4386-ba3b-f85cd193a386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e9e0f4-98eb-4a9a-9652-f8c88b776548",
        "cursor": {
          "ref": "56951cad-e339-427d-9db4-a2e6990acc5e",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "20423bcf-30ac-4972-b70e-5ca87c029381"
        },
        "item": {
          "id": "d8e9e0f4-98eb-4a9a-9652-f8c88b776548",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "580796d6-1130-4b50-97fe-a3d3af0ac306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6238196a-06da-4c93-8d55-7b6aa44f1ff5",
        "cursor": {
          "ref": "8e139c12-181b-4992-870f-fc1a1c0acab8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "96bce96e-44e9-4569-9f4c-d5128a1bb3e8"
        },
        "item": {
          "id": "6238196a-06da-4c93-8d55-7b6aa44f1ff5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1d16789d-fd6b-4c42-89de-7dcc2b17ccbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ac6950-f1bb-4012-ba05-486bb8d1a1d8",
        "cursor": {
          "ref": "afee740b-62b3-4ce8-b278-b7d38de5e440",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5491e23d-5a65-432a-9b14-33b2d04b4fad"
        },
        "item": {
          "id": "58ac6950-f1bb-4012-ba05-486bb8d1a1d8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4e4bdfa7-4196-4016-8707-fba0f4f37881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c0ccfe-14c8-4d89-bf22-63a36cb9f79a",
        "cursor": {
          "ref": "59a13d98-b609-4d4c-98cf-a8b38737787a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "16e533a2-3898-4bf2-bf6a-55560e3226d2"
        },
        "item": {
          "id": "22c0ccfe-14c8-4d89-bf22-63a36cb9f79a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c4ce66f-3d90-46fc-9d40-444032ae4ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb517e72-10eb-4d15-8806-f1440ba7f65f",
        "cursor": {
          "ref": "ecbd08da-f200-47a2-b0ec-be8ad826b5af",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f6ba0d2-a7b8-417b-a739-1b76707ade40"
        },
        "item": {
          "id": "bb517e72-10eb-4d15-8806-f1440ba7f65f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9c973fe8-8f87-490c-9325-7d4a0e2e7a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f132c8-e367-4859-a2d6-93db955ba1d9",
        "cursor": {
          "ref": "47a1f804-fc11-4e72-82b5-e08ef7bb4764",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "793cfe50-2438-470f-b3ab-ca61867c7f23"
        },
        "item": {
          "id": "e1f132c8-e367-4859-a2d6-93db955ba1d9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28fe18cb-60bd-49f8-9977-10271f941484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35004a65-aa3f-4b81-8384-b3d188641478",
        "cursor": {
          "ref": "936c374f-635b-4a94-827a-a04afc13da41",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fdad1da7-1b4f-4b8c-91dd-a3b7aa3a2fef"
        },
        "item": {
          "id": "35004a65-aa3f-4b81-8384-b3d188641478",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "59a9abe7-d5cb-4a4e-bdc6-b8b6f3e9ffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a083115e-f75f-4f5e-95bc-1a046fe4b5c4",
        "cursor": {
          "ref": "15c01662-7c8a-426d-b94e-bc83de9d7dde",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b16ae8a1-d7b9-4d4a-9a0c-b1eb26bf1dd2"
        },
        "item": {
          "id": "a083115e-f75f-4f5e-95bc-1a046fe4b5c4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d731c68d-ab7e-442e-b9e0-dd984689e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b953d160-4c2b-452a-a120-04ab0f41d4af",
        "cursor": {
          "ref": "4b33c2b1-b46b-4004-84c4-3a248779642a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5f0b500-99f4-4d3b-bbe6-4c7646a11f5c"
        },
        "item": {
          "id": "b953d160-4c2b-452a-a120-04ab0f41d4af",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "80d5b95b-6ed4-4d48-91e6-5ac6c2d5b472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801af9a1-2364-4086-aa99-efe666c16556",
        "cursor": {
          "ref": "dcb1ceaf-6e68-4951-b323-b0b16c26f0b7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ed27deda-e338-4a3d-a9bd-471039f59ec9"
        },
        "item": {
          "id": "801af9a1-2364-4086-aa99-efe666c16556",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "22ba63a9-e69d-4280-a8c3-501943128ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2c6d64-ccb1-473a-ad15-03b682c5a3d7",
        "cursor": {
          "ref": "c0ca4246-9799-4ee3-9c3f-e4e6f9da282a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "48098d68-c19d-4b4e-be96-cb636acc2e90"
        },
        "item": {
          "id": "9a2c6d64-ccb1-473a-ad15-03b682c5a3d7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "053574dd-b2c4-43f1-9791-a8a1bcefb8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad139725-dadd-49d9-9602-40afbd1950cf",
        "cursor": {
          "ref": "0ae66aba-ad13-483e-8c1f-f61ea15ea835",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4a97e56f-842b-4bdd-a116-e3986d347828"
        },
        "item": {
          "id": "ad139725-dadd-49d9-9602-40afbd1950cf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94b85091-7155-4cf0-958a-42c8b930b528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ef17c8-3bf5-4b2e-9581-b0bb74682494",
        "cursor": {
          "ref": "977d9f7b-f2af-4a62-b489-6f586a629b79",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fa669889-0966-46e3-80b9-365c92861cb9"
        },
        "item": {
          "id": "25ef17c8-3bf5-4b2e-9581-b0bb74682494",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd2494f8-84f2-4c41-8f23-b5b33eca8bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2385d534-3014-4432-9816-b8e0f2685981",
        "cursor": {
          "ref": "e942f109-d529-41df-ae9c-bef22e69b51b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0fb1a96c-27ff-4c70-89d9-910f132d996d"
        },
        "item": {
          "id": "2385d534-3014-4432-9816-b8e0f2685981",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7ac2e4e2-d051-46a9-99fc-bbc74f1fcd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7debf5e-5a04-4452-8344-50d4cd0f5b91",
        "cursor": {
          "ref": "34772067-c10c-474b-8d03-99af99e5ba06",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe01983b-dcfd-44fc-a541-eaccf38851c4"
        },
        "item": {
          "id": "e7debf5e-5a04-4452-8344-50d4cd0f5b91",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bdb94b1a-aa2d-4b11-b88a-b9dd81a2b0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17f8d10-d584-4703-9c73-bfb1c9f2e46e",
        "cursor": {
          "ref": "34229ee9-3aac-4341-9305-5994971636fa",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "29f4893e-44ee-4303-99bc-0576f475094a"
        },
        "item": {
          "id": "d17f8d10-d584-4703-9c73-bfb1c9f2e46e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "930a4d90-ef0b-4dca-8465-a90203bc718d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ee3e19-9dba-46f9-ac4c-21f54ecc2531",
        "cursor": {
          "ref": "7d27c26c-3371-42bb-b1be-e49c763a60ce",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b3e971a8-cb6b-45d8-a2fe-da4b4574b035"
        },
        "item": {
          "id": "12ee3e19-9dba-46f9-ac4c-21f54ecc2531",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36eb0a83-5499-498d-9900-03320f62c079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc681fa3-d27f-433a-bab8-98dbf8f95439",
        "cursor": {
          "ref": "fb3994fc-0d2a-4971-8e3a-032e7949b8bc",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69c8b4d6-9ade-439b-be6b-9eafdb278427"
        },
        "item": {
          "id": "fc681fa3-d27f-433a-bab8-98dbf8f95439",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38078942-0abf-4947-b2de-c9bf14efe4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113c343-b707-45b2-a6bd-4f7e6c983cd9",
        "cursor": {
          "ref": "9b936878-ca19-45eb-969f-75abaf87db02",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "70e47089-4667-4417-a5ab-e57492a6549a"
        },
        "item": {
          "id": "b113c343-b707-45b2-a6bd-4f7e6c983cd9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e42669dc-9735-49d9-8fc3-766979b68975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc799cdb-59ec-407f-b4be-5bfc7431737f",
        "cursor": {
          "ref": "c71553d8-1cb2-475f-811e-a2536e7453b9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a78f663a-8558-405e-ab8f-b7437c7695a5"
        },
        "item": {
          "id": "cc799cdb-59ec-407f-b4be-5bfc7431737f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c713a014-a967-403e-bdcd-837bad0f0de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bef272e-b0d2-4666-a83f-bd18c3e81e1e",
        "cursor": {
          "ref": "e2c8b422-cfb5-4d35-a297-fb1fc16099ee",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3bee216c-a742-4e4d-af89-964f65991a80"
        },
        "item": {
          "id": "9bef272e-b0d2-4666-a83f-bd18c3e81e1e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f9bbc047-2ec1-4504-a745-91d03c39e9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f452bf9a-826a-4440-9d83-04513feb1cd4",
        "cursor": {
          "ref": "b86780fd-99cd-440a-9cdb-8a37558e8a4d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c4568b09-fed0-4c1e-9b61-eb5a98480b6d"
        },
        "item": {
          "id": "f452bf9a-826a-4440-9d83-04513feb1cd4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed507852-0d42-478e-96e1-218be228e3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eac130-c47b-4943-adba-6dc7e4b2d7aa",
        "cursor": {
          "ref": "727d7f2b-4008-41e4-8c28-24d04d91c342",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6d2d1983-4ba8-4595-bef1-8273f97162cc"
        },
        "item": {
          "id": "97eac130-c47b-4943-adba-6dc7e4b2d7aa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0cf21abc-f508-45b2-8105-92867fbad6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ac1de5-f831-4ea0-96a3-cf336a20adee",
        "cursor": {
          "ref": "b6df533c-6a3f-4e84-b9cf-0142a4503b72",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "acacb1aa-896d-454e-8e88-794719046da6"
        },
        "item": {
          "id": "c6ac1de5-f831-4ea0-96a3-cf336a20adee",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bff584d6-dba2-4129-95ba-1fdc825d2cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f5e804-ba40-4f9d-9a0e-9654b05dcb78",
        "cursor": {
          "ref": "a683eaa2-d780-4037-8231-738914d87588",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d074a72f-67f3-4674-aa72-03654e659c97"
        },
        "item": {
          "id": "a7f5e804-ba40-4f9d-9a0e-9654b05dcb78",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73fdf23a-269d-4487-af8b-8742ef1a3f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670fa032-e31a-40f0-96d3-ac04652d2124",
        "cursor": {
          "ref": "16d41c44-06f9-48f9-9188-5d2acc249275",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8cb6b71d-87a8-4d76-aa68-3fcc07d1b634"
        },
        "item": {
          "id": "670fa032-e31a-40f0-96d3-ac04652d2124",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0300fa83-42ab-4bf7-94ca-983ba91c5dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d703d-359c-4807-aa92-03c19c8a5691",
        "cursor": {
          "ref": "fd1f7263-f174-4a51-ba1d-b2fb1e64ef77",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "180ef389-c5ea-47d0-ae03-a7578172fe35"
        },
        "item": {
          "id": "d59d703d-359c-4807-aa92-03c19c8a5691",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7add9f39-7a0d-45b3-bde0-d3f483006978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3831f6-c56b-4348-a08e-978acc7f3ad1",
        "cursor": {
          "ref": "e2ea63be-ac7c-4ca1-ad9a-c8745b74e7e2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9f149687-3c43-44ce-bce1-4280c0c2057b"
        },
        "item": {
          "id": "ff3831f6-c56b-4348-a08e-978acc7f3ad1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fc7fad48-3ee8-4523-b505-7f9320540673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4535167-d861-43f0-898b-0e4a71258a8e",
        "cursor": {
          "ref": "354eef45-d13e-42b4-953e-d59cb4e9665c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22ff8b24-3018-44bb-9ff3-c06f1101ff8b"
        },
        "item": {
          "id": "d4535167-d861-43f0-898b-0e4a71258a8e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8725c085-df70-4dc3-b6e9-033555094294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ff44b5-4bbc-40a3-901b-7ba2def66644",
        "cursor": {
          "ref": "d3fbd696-fc40-448e-8262-4040480d4896",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "22d6d6f5-b1af-427e-95ca-957cfe561d81"
        },
        "item": {
          "id": "c4ff44b5-4bbc-40a3-901b-7ba2def66644",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c2ab77a1-c409-4017-aa52-756fed8792a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5947db-505e-4123-ab56-a2dd77a8b6ee",
        "cursor": {
          "ref": "d31fb82d-2c19-43f8-b720-6e5ecb09e834",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "287b5d87-a0b6-40c5-9d91-c484b4d9c63b"
        },
        "item": {
          "id": "9d5947db-505e-4123-ab56-a2dd77a8b6ee",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5f137f4d-4748-4846-aca7-8b90f09d0edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fcbb5d-e9b1-44fe-a499-d697224b1eb5",
        "cursor": {
          "ref": "1495df0a-6b5f-4340-8790-d5af8ffea1c8",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "942ec514-3889-4ae8-8401-558930920b15"
        },
        "item": {
          "id": "55fcbb5d-e9b1-44fe-a499-d697224b1eb5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ae1eb3d0-6cf4-49f5-bd05-1b2371023412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc9e402-a981-4802-941a-edf9b29388f8",
        "cursor": {
          "ref": "42d31c19-e41d-4499-bd6b-290982d4225a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d421a7d9-752b-4dd9-ba1d-ab38e6b761cf"
        },
        "item": {
          "id": "dfc9e402-a981-4802-941a-edf9b29388f8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "245ef8bc-b12d-437a-8f93-f5286fd2072d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca05d0f-709c-4616-a664-ee81c7905372",
        "cursor": {
          "ref": "921c78d1-83c3-4f74-b835-f656be35459d",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "06b54930-ab1b-4f05-805c-b84d8e9b4768"
        },
        "item": {
          "id": "aca05d0f-709c-4616-a664-ee81c7905372",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d0cc88ff-4330-46c1-8253-31ef9b17f40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6302fc5f-6c82-4063-a52a-2af9ec0cdafe",
        "cursor": {
          "ref": "aedb6fdc-c826-4073-9057-a1f0e1c32330",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e7925d1e-f9ef-4196-8b8c-c74856e4c9cb"
        },
        "item": {
          "id": "6302fc5f-6c82-4063-a52a-2af9ec0cdafe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d18f5096-234d-4d48-b6fa-f955abc8a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402fd3ac-7956-4e84-b883-1351ddcd8ee5",
        "cursor": {
          "ref": "b3a1d27f-ac6e-477d-8f99-074886816343",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "671abcfa-f73f-4f32-ad67-24365a75d298"
        },
        "item": {
          "id": "402fd3ac-7956-4e84-b883-1351ddcd8ee5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fdec745a-70c1-4f65-ba0f-735b9ef29027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1922c502-5408-408d-8f54-28703c47402f",
        "cursor": {
          "ref": "865857e0-2445-4fdd-8505-c16f51ba2975",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0f306182-bab5-478a-a2e5-027c407656e4"
        },
        "item": {
          "id": "1922c502-5408-408d-8f54-28703c47402f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8a720c44-af41-4ee4-98a9-b43efe8637c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea2d45b-f684-4961-acd9-c21902c31fa5",
        "cursor": {
          "ref": "06f6f27c-834a-4d46-a718-336ebdeb5a31",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "cd46479a-e14c-46c0-8534-2bffa5b49698"
        },
        "item": {
          "id": "fea2d45b-f684-4961-acd9-c21902c31fa5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f73ed63d-c5c7-45e0-9981-d2aa54112171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c9a2cd-1ea7-4130-82e7-59dc55ddd0ba",
        "cursor": {
          "ref": "967cd8e9-1855-4b0c-b850-d5faf0dab513",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cb607bd7-0f0e-4c51-9e07-4e44a5f94caf"
        },
        "item": {
          "id": "38c9a2cd-1ea7-4130-82e7-59dc55ddd0ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2384d363-230e-4364-80fc-291ffd2f08c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd3a801-45ef-4992-8fb0-023141f22a17",
        "cursor": {
          "ref": "4a40f4f4-73b0-48dd-a9a3-3f143b10146c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c9a0734c-b34e-4651-b991-5fdc8c448061"
        },
        "item": {
          "id": "4dd3a801-45ef-4992-8fb0-023141f22a17",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "86715bfb-da28-45ae-b09e-1f9673179336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94508229-773b-450a-85f1-edb5ff729a3b",
        "cursor": {
          "ref": "455839ed-f82f-4399-afc6-2d072086ac54",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "70300d7c-e02a-4e31-a023-5cfe0afb88ba"
        },
        "item": {
          "id": "94508229-773b-450a-85f1-edb5ff729a3b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e48f25b4-c51e-40f5-a5b6-32be338e731e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93236b6d-38ab-4f8e-b662-97727706194c",
        "cursor": {
          "ref": "053e9e94-56c3-46dc-a573-2e1b187fd43e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c722a2c3-46d4-4cce-8e91-3de2785596e4"
        },
        "item": {
          "id": "93236b6d-38ab-4f8e-b662-97727706194c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d52ca1cd-486e-4edb-9075-3ba9dcee26c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945cdb57-9b35-4dff-b86d-fdf83ee4de1c",
        "cursor": {
          "ref": "fb6ed3fa-e1d6-48e7-8c4f-82fe566def84",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1d630c39-5c84-4f4b-a519-43d033e615c8"
        },
        "item": {
          "id": "945cdb57-9b35-4dff-b86d-fdf83ee4de1c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0fe0355e-f0bb-4c05-8689-69d18755aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e977651e-148a-460e-8e09-047ce86c7b13",
        "cursor": {
          "ref": "9ab1f03c-0252-46d2-bef3-717098ece402",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4cdd51b1-21c8-474a-8abf-03c5b2f694e3"
        },
        "item": {
          "id": "e977651e-148a-460e-8e09-047ce86c7b13",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d1ad4a4c-38b3-4cbe-86fa-5c584ad6531d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dd842c-eb2c-4a9e-b774-c8045c262d27",
        "cursor": {
          "ref": "2cff7146-a4fe-403a-b7fb-e0aa3707f27e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "24bf3a6e-6195-45f5-86eb-7a194730bc7e"
        },
        "item": {
          "id": "00dd842c-eb2c-4a9e-b774-c8045c262d27",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "86717553-157b-497b-aa67-b342a6f3cfaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a42c62-ea05-4615-a14f-5e06acc4960a",
        "cursor": {
          "ref": "dfb8cca8-f0bb-4327-83f5-4df43f4dea3e",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3d21f0b2-3950-4171-87ae-3e2c03019330"
        },
        "item": {
          "id": "85a42c62-ea05-4615-a14f-5e06acc4960a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5364505f-cf0b-4aad-a296-dfbd93f55133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa6ef5c-a45e-42b8-951a-9e3e3a71f3e5",
        "cursor": {
          "ref": "58a93d6e-29ad-47a2-8ee1-28529a4973b2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b64fe747-02fb-4ad3-badd-b46b7fb62653"
        },
        "item": {
          "id": "5aa6ef5c-a45e-42b8-951a-9e3e3a71f3e5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "040ecc50-ebda-49a1-bdd7-83b18a620e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538238c-7c84-4d39-9fc3-855674b2d28c",
        "cursor": {
          "ref": "5453aebe-4a76-46d1-9478-77c335089844",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "97066e56-9b88-44af-9802-465d918945a9"
        },
        "item": {
          "id": "4538238c-7c84-4d39-9fc3-855674b2d28c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "44c8b021-873e-4a9f-ad62-e15a4d057159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069f7d0d-b81b-4fc5-a03c-ed7ceb6a5d04",
        "cursor": {
          "ref": "1cf67eaa-836f-44b9-964a-2d029ae94890",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b8c615c8-5df3-447c-82af-bd11c12c07e1"
        },
        "item": {
          "id": "069f7d0d-b81b-4fc5-a03c-ed7ceb6a5d04",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1871f99f-3129-4360-9c65-42fdcea72a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac5cc7b-7665-483e-9dcb-ef8a69f115da",
        "cursor": {
          "ref": "4f6e6df9-73ad-469d-9416-abc052e41882",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "98322ddd-72ed-4578-b8d9-2bef0c0ee266"
        },
        "item": {
          "id": "0ac5cc7b-7665-483e-9dcb-ef8a69f115da",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8f7145cc-bea4-4f69-9ea7-9997285b6323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86eeda8-1c81-49ac-8225-1a5bea9d6861",
        "cursor": {
          "ref": "a31ec422-8632-4b3f-aa93-698e2fd25d89",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "14455ffb-8027-489c-8122-90cd3b2c578c"
        },
        "item": {
          "id": "b86eeda8-1c81-49ac-8225-1a5bea9d6861",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3ff59ee4-f8dc-43c9-b14a-a7b9857f7b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeac7ce4-c2b2-47e1-8aa4-d651359e8696",
        "cursor": {
          "ref": "03bfc01e-c071-458d-9fff-167b039c1604",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73fee9e5-b568-412e-be41-206d170c4749"
        },
        "item": {
          "id": "eeac7ce4-c2b2-47e1-8aa4-d651359e8696",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "55f8e275-dd5b-4eb2-b1be-44b1c90c0925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a856a2-e1fc-4a5b-a67b-e7b3050d0b09",
        "cursor": {
          "ref": "c1ab36b6-e346-433c-b333-3087018bd0be",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9fa67694-d976-49ce-b53e-3dd11a8c3853"
        },
        "item": {
          "id": "16a856a2-e1fc-4a5b-a67b-e7b3050d0b09",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "174601b5-7be7-4f38-aa07-eaf59b859df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2ac163-aabd-4af2-8187-9e67fa1293ce",
        "cursor": {
          "ref": "ce14b887-c33a-456f-963e-8deb6dae7b0c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a2ab3975-c086-49d6-9634-33f8f1e9ed10"
        },
        "item": {
          "id": "be2ac163-aabd-4af2-8187-9e67fa1293ce",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d3f21ca6-e256-410d-ba0e-95bb7794476e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8795ae37-4e53-43d3-9abe-9d2900350dfc",
        "cursor": {
          "ref": "774244d4-9397-41d7-8d5a-759b41ac8229",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "330f2397-c01b-4a4c-86d1-598fd4aae448"
        },
        "item": {
          "id": "8795ae37-4e53-43d3-9abe-9d2900350dfc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4a5c74e8-7b12-4e39-a63d-37a2a47fbcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcf4b4a-4bbe-48b1-9066-287db6ecc64c",
        "cursor": {
          "ref": "9d607690-6e18-41e8-9355-251bc2759bcb",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5d806b9a-7069-45b3-92f9-7a735cdd51e1"
        },
        "item": {
          "id": "cbcf4b4a-4bbe-48b1-9066-287db6ecc64c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8fc72e3e-4a5b-4ffd-b317-ed447bfc379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033bb6a-a9ff-491d-abbc-44139e078fbd",
        "cursor": {
          "ref": "1f4342dd-7e66-451c-a716-ed00d809b8e2",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7d84a7c5-1309-464c-b230-cc9457c718fb"
        },
        "item": {
          "id": "5033bb6a-a9ff-491d-abbc-44139e078fbd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7eea0a7-81c7-4e7e-9178-d782958b41e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bda2b46-ce83-402f-94de-f9201d79a531",
        "cursor": {
          "ref": "085a7ec6-4db3-47db-838a-d1a61a57f5f8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "afdfa7e9-bb60-4a03-a34e-0d42be124029"
        },
        "item": {
          "id": "6bda2b46-ce83-402f-94de-f9201d79a531",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5394d072-a384-4bfb-8168-2fc1f22302bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168d6c7-8562-4d6d-b35e-e2c729d42237",
        "cursor": {
          "ref": "58ad9d26-5de0-4055-b4e8-69eddaf7179a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5cdcddcf-084c-4701-8efb-49010019a8f4"
        },
        "item": {
          "id": "0168d6c7-8562-4d6d-b35e-e2c729d42237",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ec859582-8e6d-4549-aec4-8bf0e1a0770a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ad6aa6-25bf-4dcd-9a3f-b25c0ee304b8",
        "cursor": {
          "ref": "62d121b7-6e6e-4a75-b7aa-b0751c41197c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a180aaa7-e444-479c-9c3b-2078bc2b4112"
        },
        "item": {
          "id": "24ad6aa6-25bf-4dcd-9a3f-b25c0ee304b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "11027e55-75ce-4d8f-ba46-06b74ec3181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db99e0b5-4ad0-4445-94cd-8339b624943c",
        "cursor": {
          "ref": "51cd193b-807c-4c34-a88e-97d9a8ffa72c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2e1a95e2-110e-4fe8-922a-7ce136e79f7b"
        },
        "item": {
          "id": "db99e0b5-4ad0-4445-94cd-8339b624943c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "30933fb0-b0c9-444a-849d-0497bcf8f286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5004fa0f-fc65-4aa2-a73c-134bb088a5df",
        "cursor": {
          "ref": "2bdcf516-eb15-45e5-b5a3-810e8844d9ee",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ba9ecf31-1195-460f-be33-ea6c3790086e"
        },
        "item": {
          "id": "5004fa0f-fc65-4aa2-a73c-134bb088a5df",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e62eec48-0852-4cc0-8f46-bca700e1ab7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db8c16a-8aa6-432d-81ab-55e721f4bc87",
        "cursor": {
          "ref": "b23620e7-a2df-4bca-a5bf-2e57dcb745c9",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "af2a7152-c0e9-4402-aa27-844f6a9f4855"
        },
        "item": {
          "id": "0db8c16a-8aa6-432d-81ab-55e721f4bc87",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7741a2f6-a413-4e43-b258-35ea3e9f98c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9bf6fd-ea31-47dc-8372-2adcd0e078c8",
        "cursor": {
          "ref": "e7d32384-b9a8-4eab-9d46-83bb08b864cb",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f69f8f35-55d8-4797-b289-1a4388942255"
        },
        "item": {
          "id": "3f9bf6fd-ea31-47dc-8372-2adcd0e078c8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92a954aa-410f-4040-a412-57b946d93a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74652d3-081e-41cb-9e0d-82cdea41ffbe",
        "cursor": {
          "ref": "4ba3d32d-6c18-40a6-8c71-4de74ef5c2bc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cb200784-997f-4f07-ac46-7569bd6b8714"
        },
        "item": {
          "id": "e74652d3-081e-41cb-9e0d-82cdea41ffbe",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "936389b3-7c95-4836-a0c2-f0fa194d20fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92ef6fb-861f-4215-82f0-c3c3c0d495cf",
        "cursor": {
          "ref": "b56748f1-49ed-4292-9f2f-1a5ba3f81dab",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e1ccb1f2-3d06-4870-8ff5-9d480ad6a24e"
        },
        "item": {
          "id": "e92ef6fb-861f-4215-82f0-c3c3c0d495cf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "08d89030-48cf-424f-96d8-315dd0e13272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32c15d5-0997-437e-bef4-4e84faa231d0",
        "cursor": {
          "ref": "569b789e-eb40-42b9-bfbf-fe07ffdfc353",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "67186502-53ec-4442-aeba-05f457100724"
        },
        "item": {
          "id": "b32c15d5-0997-437e-bef4-4e84faa231d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "93be097a-6e5c-45e2-b449-5bf5af24fadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ceb36-3d67-474b-be63-748c57442d40",
        "cursor": {
          "ref": "729deb4c-1083-47f1-aaa4-7040c63f5397",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c8574469-0dfc-4cef-9106-06bc8d6ffe73"
        },
        "item": {
          "id": "b30ceb36-3d67-474b-be63-748c57442d40",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1f995082-10bd-4984-ab42-00701b44f499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6eff6f-cb74-46fc-97e7-b3a797e93483",
        "cursor": {
          "ref": "3694b74c-2813-4aa5-a80d-46bcdecf3aff",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "10be3501-65e8-49b8-8877-6d85b4c43c9a"
        },
        "item": {
          "id": "0f6eff6f-cb74-46fc-97e7-b3a797e93483",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "136e2c98-c83f-4640-a364-2a1e86462406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549018e2-cade-441f-ac3b-ac38c4f2e573",
        "cursor": {
          "ref": "39aeea42-307c-4084-9779-3af0b4c58c10",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cf05c19f-9d50-453c-b22d-f38ddd7aab1b"
        },
        "item": {
          "id": "549018e2-cade-441f-ac3b-ac38c4f2e573",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c2f3a0ce-2d58-464a-94fd-0d02f59ed948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b5f3b5-af5a-4202-bd35-d1a0c3b56a93",
        "cursor": {
          "ref": "4fac2617-3c46-4cb6-8776-313c46f566fb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "53d9e8f2-4509-47b0-9ee8-b2621a8789ea"
        },
        "item": {
          "id": "b8b5f3b5-af5a-4202-bd35-d1a0c3b56a93",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "190a8f96-f489-4edf-b55d-cdec42a4a0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82d254d-0e29-4a4e-b9c4-2f533c979406",
        "cursor": {
          "ref": "297084c0-fd4e-4944-8169-6d9ef4c55fd4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "467bca29-1148-432f-bbc7-fb35f7e8533d"
        },
        "item": {
          "id": "d82d254d-0e29-4a4e-b9c4-2f533c979406",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "04a19db6-a24e-46aa-9581-ae7ea65dff68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056ee553-3003-4fb0-8982-9b51c1e35124",
        "cursor": {
          "ref": "08ef6f26-c41a-47a6-8f3a-9032e83859f8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "56820d8f-c035-4e72-971f-fcaad788bcf8"
        },
        "item": {
          "id": "056ee553-3003-4fb0-8982-9b51c1e35124",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f90f40c-04a5-4797-a689-4c53e7e46c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1557ca-31b0-424c-bb68-0f85293355bd",
        "cursor": {
          "ref": "19c2f0ec-859b-4cd6-aa9a-b8d342794e77",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "181c0968-4a77-4e4d-ba2c-0a572fdb8582"
        },
        "item": {
          "id": "4f1557ca-31b0-424c-bb68-0f85293355bd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "baac90d6-240f-4489-97df-1a14e0a15cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1425f4ca-33b4-4563-8b55-d74cbff36bab",
        "cursor": {
          "ref": "abea8c08-3f21-44a7-9f52-ec3bc49c24cc",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "27d253ca-af4a-4777-a209-8624f554a860"
        },
        "item": {
          "id": "1425f4ca-33b4-4563-8b55-d74cbff36bab",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78ec9542-d6c2-4541-8dfa-161ee76ce584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d00ca5b-542f-41a9-9931-a645130dee66",
        "cursor": {
          "ref": "c4375a79-9839-4649-bf64-51819833a787",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0ffcf3ff-3fee-4eda-a630-b435f26da33d"
        },
        "item": {
          "id": "0d00ca5b-542f-41a9-9931-a645130dee66",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "aaabb02c-e0b4-46c6-bb64-4abceef2b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0e3747-f33e-41e4-a2a8-2ff886c3252b",
        "cursor": {
          "ref": "bf37c70b-3dbd-47ab-b895-61048b9452ae",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "00024368-3781-4a30-aaa7-c9a77090dc89"
        },
        "item": {
          "id": "2e0e3747-f33e-41e4-a2a8-2ff886c3252b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f92f4889-7a88-4881-841d-fa4826d3882b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e5dc7a-3dc4-4b84-baf6-e03ccc97407c",
        "cursor": {
          "ref": "8d18b2cd-9fce-44a4-8d80-f96d92202683",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "82949a52-2c2a-42a5-99e3-4ca2bb66550b"
        },
        "item": {
          "id": "b1e5dc7a-3dc4-4b84-baf6-e03ccc97407c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e5d98a43-7330-490b-b7c5-68ea61110592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a626212-da92-48be-852c-bf1f718316fa",
        "cursor": {
          "ref": "e85293ed-52cb-4d15-a6eb-b6e7e03c5399",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "26a8dcf8-09c6-48b6-a742-f8ecdca29756"
        },
        "item": {
          "id": "0a626212-da92-48be-852c-bf1f718316fa",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eaa5ba6d-25fd-48d0-9c85-65c86f7c3e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0385d1-82b6-49d0-aaa2-a7c407c46988",
        "cursor": {
          "ref": "4e1ec637-9d0f-41e5-abe1-fe8e74dfc887",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "2df42ea0-861f-4220-9b60-5209548477d4"
        },
        "item": {
          "id": "5c0385d1-82b6-49d0-aaa2-a7c407c46988",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aade66dc-2f0b-48fc-82bc-d28a99653031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45919a-d655-4d93-9c6f-f9692cd6e4f7",
        "cursor": {
          "ref": "c21b9cf8-b96e-4fe9-8bb1-74cf37a62b28",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d8ac7b43-9cc7-422d-a08a-42cfc308fceb"
        },
        "item": {
          "id": "ba45919a-d655-4d93-9c6f-f9692cd6e4f7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e76886c8-f266-4350-a78d-10150b577db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef1168a-5ced-4a24-a692-e38eafdb19ea",
        "cursor": {
          "ref": "415067e8-f991-4926-b4c1-6693ba25df69",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f489d334-783d-470d-91f8-6d7077eb7457"
        },
        "item": {
          "id": "cef1168a-5ced-4a24-a692-e38eafdb19ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "95e0203d-31cc-475c-aaff-60fc9da9d207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bebbaf-dce7-4c1a-ad17-ab6fa5421f14",
        "cursor": {
          "ref": "9af2ca33-8061-4942-b6f9-3fec62223cdc",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4834839d-26f5-4d90-b885-ea85d2ae5969"
        },
        "item": {
          "id": "a8bebbaf-dce7-4c1a-ad17-ab6fa5421f14",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f77a317c-839f-403b-b7a9-72a7f8196c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0022a6-42d2-4610-8d96-b6ab2fbb366a",
        "cursor": {
          "ref": "94d160fa-ac3f-424c-ad3a-05a221750815",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "390e594d-159f-43ba-8a7b-264855eca556"
        },
        "item": {
          "id": "cd0022a6-42d2-4610-8d96-b6ab2fbb366a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "222ea589-a6e7-4866-8b88-2a369c01e8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd092ff-e0fa-421c-8210-ba1e044786a0",
        "cursor": {
          "ref": "fffa00df-db78-47f2-9c47-7b9f2853fa34",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "00d3f115-f60b-454b-af4c-af6b2ea92b3f"
        },
        "item": {
          "id": "5bd092ff-e0fa-421c-8210-ba1e044786a0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "25a247ab-9b02-4f6b-afbc-aeff016b172f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35d4e1f-61c9-4442-81df-3098c9ac6915",
        "cursor": {
          "ref": "06455a8c-96a8-421c-8a26-5c3679dcda74",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1c134dba-c4d2-4f34-a19c-69d5915ea8c6"
        },
        "item": {
          "id": "b35d4e1f-61c9-4442-81df-3098c9ac6915",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6c7c6ce8-772f-41e1-921e-ee74a2dcca6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606140c2-938f-45bb-9b6f-bba9f2b19045",
        "cursor": {
          "ref": "18ffc880-d07b-4eee-a685-601bc35f90e5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "40c941fc-9789-49de-91c8-b5d66515c3ed"
        },
        "item": {
          "id": "606140c2-938f-45bb-9b6f-bba9f2b19045",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c4c82262-d2c2-4b4d-b3f6-68746dcc2fc4",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f89ddb-587e-4383-9652-7a0d38a6fc9e",
        "cursor": {
          "ref": "b3efbf7e-6042-4d4f-a75b-5eedf03f6c37",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d71f272f-f87a-483c-a316-f3f89d14b37e"
        },
        "item": {
          "id": "49f89ddb-587e-4383-9652-7a0d38a6fc9e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3b0bff66-8dce-4d05-b8c4-8005ab6386af",
          "status": "OK",
          "code": 200,
          "responseTime": 1660,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809fa21-44a7-41f8-981a-ad790084f872",
        "cursor": {
          "ref": "4e775ff3-7510-40e2-9362-85a0e90e2e9d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "485ca0bf-24a1-414c-ae46-f2b673e6416e"
        },
        "item": {
          "id": "4809fa21-44a7-41f8-981a-ad790084f872",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e81e05fa-f552-444a-a812-b87418880553",
          "status": "OK",
          "code": 200,
          "responseTime": 1323,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa6d837-1465-4d82-ad49-1c313eb9f8d8",
        "cursor": {
          "ref": "92e9d489-ea89-42d0-8dfd-965cf9c0f588",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1cbaa91-d042-46e8-bddd-1bfdfa407b48"
        },
        "item": {
          "id": "7fa6d837-1465-4d82-ad49-1c313eb9f8d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "88712931-d7e4-4d5e-83db-1812151ed25e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa6d837-1465-4d82-ad49-1c313eb9f8d8",
        "cursor": {
          "ref": "92e9d489-ea89-42d0-8dfd-965cf9c0f588",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e1cbaa91-d042-46e8-bddd-1bfdfa407b48"
        },
        "item": {
          "id": "7fa6d837-1465-4d82-ad49-1c313eb9f8d8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "88712931-d7e4-4d5e-83db-1812151ed25e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f1e10-b06f-4551-abc7-9d4364b0d536",
        "cursor": {
          "ref": "10859ea6-640e-4a6f-a32b-1119b024afbc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cb8dec56-ed66-4487-b5ce-0c6ff0b36776"
        },
        "item": {
          "id": "f74f1e10-b06f-4551-abc7-9d4364b0d536",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8203f631-9441-42dd-a9f7-5214be6f575e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316fb22-d663-477b-9032-acc734e3221a",
        "cursor": {
          "ref": "06b650a8-f558-455d-9fb6-d511a15da0de",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "711967ff-9639-4b28-b579-35c519951da4"
        },
        "item": {
          "id": "a316fb22-d663-477b-9032-acc734e3221a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "88edbe65-2e32-414c-b3af-83d8e9bac029",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}